{"version":3,"file":"src_app_modules_usuario_usuario_module_ts.js","mappings":"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","sources":["./src/app/modules/usuario/api/usuario.service.ts","./src/app/modules/usuario/containers/usuario-form/usuario-form.component.ts","./src/app/modules/usuario/containers/usuario-form/usuario-form.component.html","./src/app/modules/usuario/containers/usuario-list/usuario-list.component.ts","./src/app/modules/usuario/containers/usuario-list/usuario-list.component.html","./src/app/modules/usuario/model/usuario.model.ts","./src/app/modules/usuario/usuario.module.ts","./node_modules/ngx-mask/fesm2020/ngx-mask.mjs","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\nimport { Usuario, UsuarioResponse } from '../model/usuario.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsuarioService extends BaseResourceService<\n  Usuario,\n  UsuarioResponse\n> {\n  constructor(protected injector: Injector) {\n    super('/usuarios', injector);\n  }\n}\n","import { Component, Injector, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { PerfilService } from 'app/modules/perfil/api/perfil.service';\nimport { Perfil } from 'app/modules/perfil/models/perfil.model';\nimport { BaseResourceFormComponent } from 'app/shared/containers/base-resource-form';\nimport { IFilter } from 'app/shared/models/interface.model';\nimport { UsuarioService } from '../../api/usuario.service';\nimport { Usuario, UsuarioResponse } from '../../model/usuario.model';\nimport toastr from 'toastr';\n\n@Component({\n  selector: 'app-usuario-form',\n  templateUrl: './usuario-form.component.html',\n  styleUrls: ['./usuario-form.component.scss'],\n})\nexport class UsuarioFormComponent\n  extends BaseResourceFormComponent<Usuario, UsuarioResponse>\n  implements OnInit\n{\n  status: number = 0;\n\n  perfils: Perfil[] = [];\n\n  constructor(\n    protected usuarioService: UsuarioService,\n    protected injector: Injector,\n    protected perfilService: PerfilService\n  ) {\n    super(injector, new Usuario(), usuarioService);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    setTimeout(() => {\n      this.carregaPerfils();\n    }, 500);\n  }\n\n  protected buildResourceForm() {\n    this.resourceForm = this.formBuilder.group({\n      nome: [null, [Validators.required, Validators.minLength(2)]],\n      email: [null, [Validators.required, Validators.email]],\n      cpf: [null, [Validators.required, Validators.minLength(11)]],\n      login: [null, [Validators.required]],\n      dataNascimento: [null, [Validators.required]],\n      status: [null, [Validators.required]],\n      perfilId: [null, [Validators.required]],\n      senha: [null, [Validators.minLength(6)]],\n      senhaConfirmacao: [\n        null,\n        [Validators.minLength(6), this.matchValidator('senha')],\n      ],\n    });\n  }\n\n  protected carregaPerfils() {\n    const filtro: IFilter = {\n      filtro: '',\n      pagina: 0,\n      direcaoOrdenacao: 'DESC',\n      tamanho: 100,\n      ordenarPor: 'id',\n    };\n\n    this.perfilService.getAll(filtro).subscribe(\n      (perfils) => {\n        this.perfils = perfils.content;\n        this.resourceForm.patchValue({\n          perfilId: this.resource?.perfil?.id,\n        });\n      },\n      (err) =>\n        toastr.error('Não foi possível carregar os perfils', err.error.error, {\n          timeOut: 10000,\n          progressBar: true,\n          closeButton: true,\n        })\n    );\n  }\n\n  protected createPageTitle(): string {\n    return 'Cadastro de Novo Usuário';\n  }\n\n  protected editionPageTitle(): string {\n    const usuarioNome = this.resource.nome || '';\n    return 'Editando usuário: ' + usuarioNome;\n  }\n\n  protected matchValidator(matchTo: string, reverse?: boolean): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (control.parent && reverse) {\n        const c = (control.parent?.controls as any)[matchTo] as AbstractControl;\n        if (c) {\n          c.updateValueAndValidity();\n        }\n        return null;\n      }\n      return !!control.parent &&\n        !!control.parent.value &&\n        control.value === (control.parent?.controls as any)[matchTo].value\n        ? null\n        : { matching: true };\n    };\n  }\n}\n","<div class=\"flex flex-col flex-auto min-w-0\">\n  <div class=\"flex-auto p-6 sm:p-10\">\n    <div class=\"bg-card rounded-2xl shadow overflow-hidden\">\n      <form [formGroup]=\"resourceForm\" class=\"m-4\">\n        <!-- Section -->\n        <div class=\"w-full\">\n          <div class=\"text-xl\">{{ pageTitle }}</div>\n        </div>\n        <div class=\"flex flex-auto flex-wrap my-5\">\n          <div class=\"flex flex-col w-full sm:pl-8\">\n            <!-- Destinação -->\n            <div class=\"flex\">\n              <mat-form-field class=\"w-2/3 pr-2\">\n                <mat-label>Nome</mat-label>\n                <span matPrefix>\n                  <mat-icon svgIcon=\"heroicons_outline:user\"></mat-icon>\n                </span>\n                <input id=\"nome\" matInput formControlName=\"nome\" />\n              </mat-form-field>\n              <mat-form-field class=\"w-1/3 pl-2\">\n                <mat-label>CPF</mat-label>\n                <span matPrefix>\n                  <mat-icon svgIcon=\"heroicons_outline:user-circle\"></mat-icon>\n                </span>\n                <input id=\"cpf-titular\" matInput mask=\"000.000.000-00\" formControlName=\"cpf\" />\n              </mat-form-field>\n            </div>\n\n            <!-- Dados do banco -->\n            <div class=\"flex\">\n\n              <mat-form-field class=\"w-1/3 pr-2\">\n                <mat-label>Data Nascimento</mat-label>\n                <input matInput formControlName=\"dataNascimento\" [matDatepicker]=\"data_nascimento\">\n                <mat-datepicker-toggle matPrefix [for]=\"data_nascimento\"></mat-datepicker-toggle>\n                <mat-datepicker #data_nascimento></mat-datepicker>\n              </mat-form-field>\n\n              <mat-form-field class=\"w-1/3 px-2\">\n                <mat-label>Senha</mat-label>\n                <span matPrefix>\n                  <mat-icon svgIcon=\"heroicons_outline:lock-closed\"></mat-icon>\n                </span>\n                <input id=\"senha\" matInput type=\"password\" formControlName=\"senha\" />\n              </mat-form-field>\n              <mat-form-field class=\"w-1/3 pr-2\">\n                <mat-label>Confirmação de Senha</mat-label>\n                <span matPrefix>\n                  <mat-icon svgIcon=\"heroicons_outline:lock-closed\"></mat-icon>\n                </span>\n                <input id=\"senha-confirmacao\" matInput type=\"password\" formControlName=\"senhaConfirmacao\" />\n              </mat-form-field>\n            </div>\n\n            <!-- Dados da conta -->\n            <div class=\"flex\">\n              <mat-form-field class=\"w-1/2 pr-2\">\n                <mat-label>Login</mat-label>\n                <span matPrefix>\n                  <mat-icon svgIcon=\"heroicons_outline:user\"></mat-icon>\n                </span>\n                <input id=\"login\" matInput type=\"text\" formControlName=\"login\" />\n              </mat-form-field>\n              <mat-form-field class=\"w-1/2 pl-2\">\n                <mat-label>E-mail</mat-label>\n                <span matPrefix>\n                  <mat-icon svgIcon=\"heroicons_outline:mail\"></mat-icon>\n                </span>\n                <input id=\"email\" type=\"text\" matInput formControlName=\"email\" />\n              </mat-form-field>\n            </div>\n\n            <div class=\"flex\">\n\n              <mat-form-field class=\"w-2/3 pr-2\">\n                <mat-label>Perfil</mat-label>\n                <mat-select id=\"perfilId\" formControlName=\"perfilId\">\n                  <mat-option *ngFor=\"let perfil of perfils\" [value]=\"perfil.id\">{{ perfil.nome }}</mat-option>\n                </mat-select>\n                <mat-icon class=\"icon-size-5\" matPrefix [svgIcon]=\"'heroicons_outline:document-text'\"></mat-icon>\n              </mat-form-field>\n\n\n              <div class=\"w-1/3 pl-2\">\n                <div class=\"w-full pl-2 flex flex-col mt-1 ml-5\">\n                  <mat-label>Status</mat-label>\n                  <mat-slide-toggle color=\"primary\" class=\"mt-3\" [(ngModel)]=\"status\" formControlName=\"status\">\n                    {{ status ? 'Ativado' : 'Desativado' }}\n                  </mat-slide-toggle>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Divider -->\n        <div class=\"mt-11 mb-10 border-t\"></div>\n\n        <!-- Actions -->\n        <div class=\"flex items-center justify-end\">\n          <a routerLink=\"/usuario\" routerLinkActive=\"router-link-active\">\n            <button class=\"fuse-mat-button-rounded mat-flat-button mat-button-base\" mat-stroked-button type=\"button\">\n              Cancelar\n            </button>\n          </a>\n\n          <button class=\"ml-4 fuse-mat-button-rounded mat-flat-button mat-button-base mat-primary\" mat-flat-button\n            type=\"button\" [disabled]=\"resourceForm.invalid\" (click)=\"submitForm()\">\n            Salvar\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { BaseResourceListComponent } from 'app/shared/containers/base-resource-list/base-resource-list.component';\nimport { UsuarioService } from '../../api/usuario.service';\nimport { Usuario, UsuarioResponse } from '../../model/usuario.model';\n\n@Component({\n  selector: 'app-usuario-list',\n  templateUrl: './usuario-list.component.html',\n  styleUrls: ['./usuario-list.component.scss'],\n})\nexport class UsuarioListComponent extends BaseResourceListComponent<\n  Usuario,\n  UsuarioResponse\n> {\n  constructor(\n    protected injector: Injector,\n    protected usuarioService: UsuarioService\n  ) {\n    super(injector, usuarioService);\n  }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden bg-card dark:bg-transparent\">\n  <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable>\n    <app-page-header [show-button]=\"validaPermissao('MANTER_USUARIO')\" page-title=\"Usuários\"\n      placeholder-text=\"Buscar por nome\" (pesquisar)=\"filtrarResource($event)\">\n    </app-page-header>\n\n    <!-- Page body -->\n    <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable *ngIf=\"length > 0\">\n      <mat-table [dataSource]=\"resources\">\n        <!-- User name Definition -->\n        <ng-container matColumnDef=\"id\">\n          <mat-header-cell *matHeaderCellDef> Código </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\"> {{ row.id }} </mat-cell>\n        </ng-container>\n\n        <!-- NOME -->\n        <ng-container matColumnDef=\"nome\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Nome </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.nome }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- E-MAIL -->\n        <ng-container matColumnDef=\"email\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> E-mail </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.email }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- DATA NASCIMENTO -->\n        <ng-container matColumnDef=\"dataNascimento\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> data Nascimento </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.dataNascimento | date: 'd/MM/Y' }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- STATUS -->\n        <ng-container matColumnDef=\"status\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            <span class=\"font-bold text-sm px-2.5 py-0.5 rounded-full\" [ngClass]=\"{'bg-blue-200 text-blue-800 dark:bg-blue-600 dark:text-blue-50': row.status,\n                          'bg-rose-200 text-rose-800 dark:bg-rose-600 dark:text-rose-50': !row.status}\">\n              {{ row.status ? 'Ativado' : 'Desativado'}}\n            </span>\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"acoes\">\n          <mat-header-cell *matHeaderCellDef> Ações </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            <span *ngIf=\"!validaPermissao('MANTER_USUARIO')\">-</span>\n            <span class=\"mr-2 cursor-pointer\" [routerLink]=\"[row.id, 'editar']\" *ngIf=\"validaPermissao('MANTER_USUARIO')\">\n              <mat-icon class=\"text-accent dark:text-accent-300\" svgIcon=\"heroicons_outline:pencil-alt\"></mat-icon>\n            </span>\n            <span (click)=\"excluir(row)\" class=\"cursor-pointer\" *ngIf=\"validaPermissao('MANTER_USUARIO')\">\n              <mat-icon class=\"text-warn-600\" svgIcon=\"heroicons_outline:trash\"></mat-icon>\n            </span>\n          </mat-cell>\n        </ng-container>\n\n        <!-- Header and Row Declarations -->\n        <mat-header-row *matHeaderRowDef=\"['id', 'nome', 'email', 'dataNascimento', 'status', 'acoes']\">\n        </mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: ['id', 'nome', 'email', 'dataNascimento', 'status', 'acoes']\"></mat-row>\n      </mat-table>\n    </div>\n\n    <!-- NENHUM DADO ENCONTRADO -->\n    <app-not-found-data class=\"h-full\" mensagem=\"Nenhum registro de usuários encontrado!\" *ngIf=\"length <= 0\">\n    </app-not-found-data>\n  </div>\n  <div class=\"flex flex-0 flex-col\" *ngIf=\"length > 0\">\n    <mat-paginator class=\"flex justify-end border-t\" [length]=\"length\" [pageSize]=\"pageSize\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"paginacao($event)\" aria-label=\"Select page\">\n    </mat-paginator>\n  </div>\n</div>\n","import { Perfil } from 'app/modules/perfil/models/perfil.model';\nimport { BaseResourceModel } from 'app/shared/models/base-resource.model';\n\nexport class Usuario extends BaseResourceModel {\n  constructor(\n    public id?: number,\n    public nome?: string,\n    public email?: string,\n    public senha?: string | null,\n    public cpf?: string,\n    public login?: string,\n    public dataNascimento?: string,\n    public imagem?: string,\n    public status?: number,\n    public perfilId?: number,\n    public perfil?: Perfil\n  ) {\n    super();\n  }\n}\n\nexport class UsuarioResponse {\n  constructor(\n    public content?: Usuario[],\n    public totalElements?: number,\n    public size?: number,\n    public numberOfElements?: number\n  ) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { UsuarioListComponent } from './containers/usuario-list/usuario-list.component';\nimport { UsuarioFormComponent } from './containers/usuario-form/usuario-form.component';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\nimport { NgxMaskModule } from 'ngx-mask';\n\nconst routes: Route[] = [\n  { path: '', component: UsuarioListComponent },\n  { path: 'novo', component: UsuarioFormComponent },\n  { path: ':id/editar', component: UsuarioFormComponent },\n];\n\nexport const MY_DATE_FORMATS = {\n  parse: {\n    dateInput: 'DD/MM/YYYY',\n  },\n  display: {\n    dateInput: 'DD/MM/YYYY',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@NgModule({\n  declarations: [UsuarioListComponent, UsuarioFormComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    NgxMaskModule.forRoot(),\n  ],\n  providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }],\n})\nexport class UsuarioModule {}\n","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Injectable, Inject, forwardRef, Directive, Input, Output, HostListener, Pipe, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { DOCUMENT } from '@angular/common';\n\nconst config = new InjectionToken('ngx-mask config');\nconst NEW_CONFIG = new InjectionToken('new ngx-mask config');\nconst INITIAL_CONFIG = new InjectionToken('initial ngx-mask config');\nconst initialConfig = {\n    suffix: '',\n    prefix: '',\n    thousandSeparator: ' ',\n    decimalMarker: ['.', ','],\n    clearIfNotMatch: false,\n    showTemplate: false,\n    showMaskTyped: false,\n    placeHolderCharacter: '_',\n    dropSpecialCharacters: true,\n    hiddenInput: undefined,\n    shownMaskExpression: '',\n    separatorLimit: '',\n    allowNegativeNumbers: false,\n    validation: true,\n    // eslint-disable-next-line @typescript-eslint/quotes\n    specialCharacters: ['-', '/', '(', ')', '.', ':', ' ', '+', ',', '@', '[', ']', '\"', \"'\"],\n    leadZeroDateTime: false,\n    triggerOnMaskChange: false,\n    maskFilled: new EventEmitter(),\n    patterns: {\n        '0': {\n            pattern: new RegExp('\\\\d'),\n        },\n        '9': {\n            pattern: new RegExp('\\\\d'),\n            optional: true,\n        },\n        X: {\n            pattern: new RegExp('\\\\d'),\n            symbol: '*',\n        },\n        A: {\n            pattern: new RegExp('[a-zA-Z0-9]'),\n        },\n        S: {\n            pattern: new RegExp('[a-zA-Z]'),\n        },\n        U: {\n            pattern: new RegExp('[A-Z]'),\n        },\n        L: {\n            pattern: new RegExp('[a-z]'),\n        },\n        d: {\n            pattern: new RegExp('\\\\d'),\n        },\n        m: {\n            pattern: new RegExp('\\\\d'),\n        },\n        M: {\n            pattern: new RegExp('\\\\d'),\n        },\n        H: {\n            pattern: new RegExp('\\\\d'),\n        },\n        h: {\n            pattern: new RegExp('\\\\d'),\n        },\n        s: {\n            pattern: new RegExp('\\\\d'),\n        },\n    },\n};\nconst timeMasks = ['Hh:m0:s0', 'Hh:m0', 'm0:s0'];\nconst withoutValidation = [\n    'percent',\n    'Hh',\n    's0',\n    'm0',\n    'separator',\n    'd0/M0/0000',\n    'd0/M0',\n    'd0',\n    'M0',\n];\n\nclass MaskApplierService {\n    constructor(_config) {\n        this._config = _config;\n        this.maskExpression = '';\n        this.actualValue = '';\n        this.shownMaskExpression = '';\n        this._formatWithSeparators = (str, thousandSeparatorChar, decimalChars, precision) => {\n            let x = [];\n            let decimalChar = '';\n            if (Array.isArray(decimalChars)) {\n                const regExp = new RegExp(decimalChars.map((v) => ('[\\\\^$.|?*+()'.indexOf(v) >= 0 ? `\\\\${v}` : v)).join('|'));\n                x = str.split(regExp);\n                decimalChar = str.match(regExp)?.[0] ?? '';\n            }\n            else {\n                x = str.split(decimalChars);\n                decimalChar = decimalChars;\n            }\n            const decimals = x.length > 1 ? `${decimalChar}${x[1]}` : '';\n            let res = x[0] ?? '';\n            const separatorLimit = this.separatorLimit.replace(/\\s/g, '');\n            if (separatorLimit && +separatorLimit) {\n                if (res[0] === '-') {\n                    res = `-${res.slice(1, res.length).slice(0, separatorLimit.length)}`;\n                }\n                else {\n                    res = res.slice(0, separatorLimit.length);\n                }\n            }\n            const rgx = /(\\d+)(\\d{3})/;\n            while (thousandSeparatorChar && rgx.test(res)) {\n                res = res.replace(rgx, '$1' + thousandSeparatorChar + '$2');\n            }\n            if (precision === undefined) {\n                return res + decimals;\n            }\n            else if (precision === 0) {\n                return res;\n            }\n            return res + decimals.substring(0, precision + 1);\n        };\n        this.percentage = (str) => {\n            return Number(str) >= 0 && Number(str) <= 100;\n        };\n        this.getPrecision = (maskExpression) => {\n            const x = maskExpression.split('.');\n            if (x.length > 1) {\n                return Number(x[x.length - 1]);\n            }\n            return Infinity;\n        };\n        this.checkAndRemoveSuffix = (inputValue) => {\n            for (let i = this.suffix?.length - 1; i >= 0; i--) {\n                const substr = this.suffix.substring(i, this.suffix?.length);\n                if (inputValue.includes(substr) &&\n                    i !== this.suffix?.length - 1 &&\n                    (i - 1 < 0 ||\n                        !inputValue.includes(this.suffix.substring(i - 1, this.suffix?.length)))) {\n                    return inputValue.replace(substr, '');\n                }\n            }\n            return inputValue;\n        };\n        this.checkInputPrecision = (inputValue, precision, decimalMarker) => {\n            if (precision < Infinity) {\n                // TODO need think about decimalMarker\n                if (Array.isArray(decimalMarker)) {\n                    const marker = decimalMarker.find((dm) => dm !== this.thousandSeparator);\n                    // eslint-disable-next-line no-param-reassign\n                    decimalMarker = marker ? marker : decimalMarker[0];\n                }\n                const precisionRegEx = new RegExp(this._charToRegExpExpression(decimalMarker) + `\\\\d{${precision}}.*$`);\n                const precisionMatch = inputValue.match(precisionRegEx) ?? [];\n                const precisionMatchLength = precisionMatch[0]?.length ?? 0;\n                if (precisionMatchLength - 1 > precision) {\n                    const diff = precisionMatchLength - 1 - precision;\n                    // eslint-disable-next-line no-param-reassign\n                    inputValue = inputValue.substring(0, inputValue.length - diff);\n                }\n                if (precision === 0 &&\n                    this._compareOrIncludes(inputValue[inputValue.length - 1], decimalMarker, this.thousandSeparator)) {\n                    // eslint-disable-next-line no-param-reassign\n                    inputValue = inputValue.substring(0, inputValue.length - 1);\n                }\n            }\n            return inputValue;\n        };\n        this._shift = new Set();\n        this.clearIfNotMatch = this._config.clearIfNotMatch;\n        this.dropSpecialCharacters = this._config.dropSpecialCharacters;\n        this.maskSpecialCharacters = this._config.specialCharacters;\n        this.maskAvailablePatterns = this._config.patterns;\n        this.prefix = this._config.prefix;\n        this.suffix = this._config.suffix;\n        this.thousandSeparator = this._config.thousandSeparator;\n        this.decimalMarker = this._config.decimalMarker;\n        this.hiddenInput = this._config.hiddenInput;\n        this.showMaskTyped = this._config.showMaskTyped;\n        this.placeHolderCharacter = this._config.placeHolderCharacter;\n        this.validation = this._config.validation;\n        this.separatorLimit = this._config.separatorLimit;\n        this.allowNegativeNumbers = this._config.allowNegativeNumbers;\n        this.leadZeroDateTime = this._config.leadZeroDateTime;\n    }\n    applyMaskWithPattern(inputValue, maskAndPattern) {\n        const [mask, customPattern] = maskAndPattern;\n        this.customPattern = customPattern;\n        return this.applyMask(inputValue, mask);\n    }\n    applyMask(inputValue, maskExpression, position = 0, justPasted = false, backspaced = false, \n    // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-explicit-any\n    cb = () => { }) {\n        if (!maskExpression || typeof inputValue !== 'string') {\n            return '';\n        }\n        let cursor = 0;\n        let result = '';\n        let multi = false;\n        let backspaceShift = false;\n        let shift = 1;\n        let stepBack = false;\n        if (inputValue.slice(0, this.prefix.length) === this.prefix) {\n            // eslint-disable-next-line no-param-reassign\n            inputValue = inputValue.slice(this.prefix.length, inputValue.length);\n        }\n        if (!!this.suffix && inputValue?.length > 0) {\n            // eslint-disable-next-line no-param-reassign\n            inputValue = this.checkAndRemoveSuffix(inputValue);\n        }\n        const inputArray = inputValue.toString().split('');\n        if (maskExpression === 'IP') {\n            const valuesIP = inputValue.split('.');\n            this.ipError = this._validIP(valuesIP);\n            // eslint-disable-next-line no-param-reassign\n            maskExpression = '099.099.099.099';\n        }\n        const arr = [];\n        for (let i = 0; i < inputValue.length; i++) {\n            if (inputValue[i]?.match('\\\\d')) {\n                arr.push(inputValue[i] ?? '');\n            }\n        }\n        if (maskExpression === 'CPF_CNPJ') {\n            this.cpfCnpjError = arr.length !== 11 && arr.length !== 14;\n            if (arr.length > 11) {\n                // eslint-disable-next-line no-param-reassign\n                maskExpression = '00.000.000/0000-00';\n            }\n            else {\n                // eslint-disable-next-line no-param-reassign\n                maskExpression = '000.000.000-00';\n            }\n        }\n        if (maskExpression.startsWith('percent')) {\n            if (inputValue.match('[a-z]|[A-Z]') ||\n                // eslint-disable-next-line no-useless-escape\n                inputValue.match(/[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,\\/.]/)) {\n                // eslint-disable-next-line no-param-reassign\n                inputValue = this._stripToDecimal(inputValue);\n                const precision = this.getPrecision(maskExpression);\n                // eslint-disable-next-line no-param-reassign\n                inputValue = this.checkInputPrecision(inputValue, precision, this.decimalMarker);\n            }\n            if (inputValue.indexOf('.') > 0 &&\n                !this.percentage(inputValue.substring(0, inputValue.indexOf('.')))) {\n                const base = inputValue.substring(0, inputValue.indexOf('.') - 1);\n                // eslint-disable-next-line no-param-reassign\n                inputValue = `${base}${inputValue.substring(inputValue.indexOf('.'), inputValue.length)}`;\n            }\n            if (this.percentage(inputValue)) {\n                result = inputValue;\n            }\n            else {\n                result = inputValue.substring(0, inputValue.length - 1);\n            }\n        }\n        else if (maskExpression.startsWith('separator')) {\n            if (inputValue.match('[wа-яА-Я]') ||\n                inputValue.match('[ЁёА-я]') ||\n                inputValue.match('[a-z]|[A-Z]') ||\n                inputValue.match(/[-@#!$%\\\\^&*()_£¬'+|~=`{}\\]:\";<>.?/]/) ||\n                inputValue.match('[^A-Za-z0-9,]')) {\n                // eslint-disable-next-line no-param-reassign\n                inputValue = this._stripToDecimal(inputValue);\n            }\n            // eslint-disable-next-line no-param-reassign\n            inputValue =\n                inputValue.length > 1 &&\n                    inputValue[0] === '0' &&\n                    inputValue[1] !== this.thousandSeparator &&\n                    !this._compareOrIncludes(inputValue[1], this.decimalMarker, this.thousandSeparator) &&\n                    !backspaced\n                    ? inputValue.slice(0, inputValue.length - 1)\n                    : inputValue;\n            if (backspaced) {\n                // eslint-disable-next-line no-param-reassign\n                inputValue = this._compareOrIncludes(inputValue[inputValue.length - 1], this.decimalMarker, this.thousandSeparator)\n                    ? inputValue.slice(0, inputValue.length - 1)\n                    : inputValue;\n            }\n            // TODO: we had different rexexps here for the different cases... but tests dont seam to bother - check this\n            //  separator: no COMMA, dot-sep: no SPACE, COMMA OK, comma-sep: no SPACE, COMMA OK\n            const thousandSeparatorCharEscaped = this._charToRegExpExpression(this.thousandSeparator);\n            let invalidChars = '@#!$%^&*()_+|~=`{}\\\\[\\\\]:\\\\s,\\\\.\";<>?\\\\/'.replace(thousandSeparatorCharEscaped, '');\n            //.replace(decimalMarkerEscaped, '');\n            if (Array.isArray(this.decimalMarker)) {\n                for (const marker of this.decimalMarker) {\n                    invalidChars = invalidChars.replace(this._charToRegExpExpression(marker), '');\n                }\n            }\n            else {\n                invalidChars = invalidChars.replace(this._charToRegExpExpression(this.decimalMarker), '');\n            }\n            const invalidCharRegexp = new RegExp('[' + invalidChars + ']');\n            if (inputValue.match(invalidCharRegexp) ||\n                (inputValue.length === 1 &&\n                    this._compareOrIncludes(inputValue, this.decimalMarker, this.thousandSeparator))) {\n                // eslint-disable-next-line no-param-reassign\n                inputValue = inputValue.substring(0, inputValue.length - 1);\n            }\n            const precision = this.getPrecision(maskExpression);\n            // eslint-disable-next-line no-param-reassign\n            inputValue = this.checkInputPrecision(inputValue, precision, this.decimalMarker);\n            const strForSep = inputValue.replace(new RegExp(thousandSeparatorCharEscaped, 'g'), '');\n            result = this._formatWithSeparators(strForSep, this.thousandSeparator, this.decimalMarker, precision);\n            const commaShift = result.indexOf(',') - inputValue.indexOf(',');\n            const shiftStep = result.length - inputValue.length;\n            if (shiftStep > 0 && result[position] !== ',') {\n                backspaceShift = true;\n                let _shift = 0;\n                do {\n                    this._shift.add(position + _shift);\n                    _shift++;\n                } while (_shift < shiftStep);\n            }\n            else if ((commaShift !== 0 &&\n                position > 0 &&\n                !(result.indexOf(',') >= position && position > 3)) ||\n                (!(result.indexOf('.') >= position && position > 3) && shiftStep <= 0)) {\n                this._shift.clear();\n                backspaceShift = true;\n                shift = shiftStep;\n                // eslint-disable-next-line no-param-reassign\n                position += shiftStep;\n                this._shift.add(position);\n            }\n            else {\n                this._shift.clear();\n            }\n        }\n        else {\n            for (\n            // eslint-disable-next-line\n            let i = 0, inputSymbol = inputArray[0]; i < inputArray.length; i++, inputSymbol = inputArray[i] ?? '') {\n                if (cursor === maskExpression.length) {\n                    break;\n                }\n                if (this._checkSymbolMask(inputSymbol, maskExpression[cursor] ?? '') &&\n                    maskExpression[cursor + 1] === '?') {\n                    result += inputSymbol;\n                    cursor += 2;\n                }\n                else if (maskExpression[cursor + 1] === '*' &&\n                    multi &&\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2] ?? '')) {\n                    result += inputSymbol;\n                    cursor += 3;\n                    multi = false;\n                }\n                else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor] ?? '') &&\n                    maskExpression[cursor + 1] === '*') {\n                    result += inputSymbol;\n                    multi = true;\n                }\n                else if (maskExpression[cursor + 1] === '?' &&\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2] ?? '')) {\n                    result += inputSymbol;\n                    cursor += 3;\n                }\n                else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor] ?? '')) {\n                    if (maskExpression[cursor] === 'H') {\n                        if (Number(inputSymbol) > 2) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'h') {\n                        if (result === '2' && Number(inputSymbol) > 3) {\n                            cursor += 1;\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'm') {\n                        if (Number(inputSymbol) > 5) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 's') {\n                        if (Number(inputSymbol) > 5) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    const daysCount = 31;\n                    if (maskExpression[cursor] === 'd') {\n                        if ((Number(inputSymbol) > 3 && this.leadZeroDateTime) ||\n                            Number(inputValue.slice(cursor, cursor + 2)) > daysCount ||\n                            inputValue[cursor + 1] === '/') {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'M') {\n                        const monthsCount = 12;\n                        // mask without day\n                        const withoutDays = cursor === 0 &&\n                            (Number(inputSymbol) > 2 ||\n                                Number(inputValue.slice(cursor, cursor + 2)) > monthsCount ||\n                                inputValue[cursor + 1] === '/');\n                        // day<10 && month<12 for input\n                        const day1monthInput = inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            ((inputValue[cursor - 2] === '/' &&\n                                Number(inputValue.slice(cursor - 1, cursor + 1)) > monthsCount &&\n                                inputValue[cursor] !== '/') ||\n                                inputValue[cursor] === '/' ||\n                                (inputValue[cursor - 3] === '/' &&\n                                    Number(inputValue.slice(cursor - 2, cursor)) > monthsCount &&\n                                    inputValue[cursor - 1] !== '/') ||\n                                inputValue[cursor - 1] === '/');\n                        // 10<day<31 && month<12 for input\n                        const day2monthInput = Number(inputValue.slice(cursor - 3, cursor - 1)) <= daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            inputValue[cursor - 1] === '/' &&\n                            (Number(inputValue.slice(cursor, cursor + 2)) > monthsCount ||\n                                inputValue[cursor + 1] === '/');\n                        // day<10 && month<12 for paste whole data\n                        const day1monthPaste = Number(inputValue.slice(cursor - 3, cursor - 1)) > daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            !inputValue.slice(cursor - 2, cursor).includes('/') &&\n                            Number(inputValue.slice(cursor - 2, cursor)) > monthsCount;\n                        // 10<day<31 && month<12 for paste whole data\n                        const day2monthPaste = Number(inputValue.slice(cursor - 3, cursor - 1)) <= daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            inputValue[cursor - 1] !== '/' &&\n                            Number(inputValue.slice(cursor - 1, cursor + 1)) > monthsCount;\n                        if ((Number(inputSymbol) > 1 && this.leadZeroDateTime) ||\n                            withoutDays ||\n                            day1monthInput ||\n                            day2monthInput ||\n                            day1monthPaste ||\n                            day2monthPaste) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    result += inputSymbol;\n                    cursor++;\n                }\n                else if (inputSymbol === ' ' && maskExpression[cursor] === ' ') {\n                    result += inputSymbol;\n                    cursor++;\n                }\n                else if (this.maskSpecialCharacters.indexOf(maskExpression[cursor] ?? '') !== -1) {\n                    result += maskExpression[cursor];\n                    cursor++;\n                    this._shiftStep(maskExpression, cursor, inputArray.length);\n                    i--;\n                }\n                else if (this.maskSpecialCharacters.indexOf(inputSymbol) > -1 &&\n                    this.maskAvailablePatterns[maskExpression[cursor] ?? ''] &&\n                    this.maskAvailablePatterns[maskExpression[cursor] ?? '']?.optional) {\n                    if (!!inputArray[cursor] &&\n                        maskExpression !== '099.099.099.099' &&\n                        maskExpression !== '000.000.000-00' &&\n                        maskExpression !== '00.000.000/0000-00' &&\n                        !maskExpression.match(/^9+\\.0+$/)) {\n                        result += inputArray[cursor];\n                    }\n                    cursor++;\n                    i--;\n                }\n                else if (this.maskExpression[cursor + 1] === '*' &&\n                    this._findSpecialChar(this.maskExpression[cursor + 2] ?? '') &&\n                    this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\n                    multi) {\n                    cursor += 3;\n                    result += inputSymbol;\n                }\n                else if (this.maskExpression[cursor + 1] === '?' &&\n                    this._findSpecialChar(this.maskExpression[cursor + 2] ?? '') &&\n                    this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\n                    multi) {\n                    cursor += 3;\n                    result += inputSymbol;\n                }\n                else if (this.showMaskTyped &&\n                    this.maskSpecialCharacters.indexOf(inputSymbol) < 0 &&\n                    inputSymbol !== this.placeHolderCharacter) {\n                    stepBack = true;\n                }\n            }\n        }\n        if (result.length + 1 === maskExpression.length &&\n            this.maskSpecialCharacters.indexOf(maskExpression[maskExpression.length - 1] ?? '') !==\n                -1) {\n            result += maskExpression[maskExpression.length - 1];\n        }\n        let newPosition = position + 1;\n        while (this._shift.has(newPosition)) {\n            shift++;\n            newPosition++;\n        }\n        let actualShift = justPasted && !maskExpression.startsWith('separator')\n            ? cursor\n            : this._shift.has(position)\n                ? shift\n                : 0;\n        if (stepBack) {\n            actualShift--;\n        }\n        cb(actualShift, backspaceShift);\n        if (shift < 0) {\n            this._shift.clear();\n        }\n        let onlySpecial = false;\n        if (backspaced) {\n            onlySpecial = inputArray.every((char) => this.maskSpecialCharacters.includes(char));\n        }\n        let res = `${this.prefix}${onlySpecial ? '' : result}${this.suffix}`;\n        if (result.length === 0) {\n            res = `${this.prefix}${result}`;\n        }\n        return res;\n    }\n    _findSpecialChar(inputSymbol) {\n        return this.maskSpecialCharacters.find((val) => val === inputSymbol);\n    }\n    _checkSymbolMask(inputSymbol, maskSymbol) {\n        this.maskAvailablePatterns = this.customPattern\n            ? this.customPattern\n            : this.maskAvailablePatterns;\n        return ((this.maskAvailablePatterns[maskSymbol]?.pattern &&\n            this.maskAvailablePatterns[maskSymbol]?.pattern.test(inputSymbol)) ??\n            false);\n    }\n    _stripToDecimal(str) {\n        return str\n            .split('')\n            .filter((i, idx) => {\n            const isDecimalMarker = typeof this.decimalMarker === 'string'\n                ? i === this.decimalMarker\n                : // TODO (inepipenko) use utility type\n                    this.decimalMarker.includes(i);\n            return (i.match('^-?\\\\d') ||\n                i === this.thousandSeparator ||\n                isDecimalMarker ||\n                (i === '-' && idx === 0 && this.allowNegativeNumbers));\n        })\n            .join('');\n    }\n    _charToRegExpExpression(char) {\n        // if (Array.isArray(char)) {\n        // \treturn char.map((v) => ('[\\\\^$.|?*+()'.indexOf(v) >= 0 ? `\\\\${v}` : v)).join('|');\n        // }\n        if (char) {\n            const charsToEscape = '[\\\\^$.|?*+()';\n            return char === ' ' ? '\\\\s' : charsToEscape.indexOf(char) >= 0 ? `\\\\${char}` : char;\n        }\n        return char;\n    }\n    _shiftStep(maskExpression, cursor, inputLength) {\n        const shiftStep = /[*?]/g.test(maskExpression.slice(0, cursor))\n            ? inputLength\n            : cursor;\n        this._shift.add(shiftStep + this.prefix.length || 0);\n    }\n    _compareOrIncludes(value, comparedValue, excludedValue) {\n        return Array.isArray(comparedValue)\n            ? comparedValue.filter((v) => v !== excludedValue).includes(value)\n            : value === comparedValue;\n    }\n    _validIP(valuesIP) {\n        return !(valuesIP.length === 4 &&\n            !valuesIP.some((value, index) => {\n                if (valuesIP.length !== index + 1) {\n                    return value === '' || Number(value) > 255;\n                }\n                return value === '' || Number(value.substring(0, 3)) > 255;\n            }));\n    }\n}\nMaskApplierService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.8\", ngImport: i0, type: MaskApplierService, deps: [{ token: config }], target: i0.ɵɵFactoryTarget.Injectable });\nMaskApplierService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.8\", ngImport: i0, type: MaskApplierService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.8\", ngImport: i0, type: MaskApplierService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [config]\n                }] }]; } });\n\nclass MaskService extends MaskApplierService {\n    constructor(document, _config, _elementRef, _renderer) {\n        super(_config);\n        this.document = document;\n        this._config = _config;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this.maskExpression = '';\n        this.isNumberValue = false;\n        this.placeHolderCharacter = '_';\n        this.maskIsShown = '';\n        this.selStart = null;\n        this.selEnd = null;\n        /**\n         * Whether we are currently in writeValue function, in this case when applying the mask we don't want to trigger onChange function,\n         * since writeValue should be a one way only process of writing the DOM value based on the Angular model value.\n         */\n        this.writingValue = false;\n        this.maskChanged = false;\n        this.triggerOnMaskChange = false;\n        // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-explicit-any\n        this.onChange = (_) => { };\n    }\n    // eslint-disable-next-line complexity\n    applyMask(inputValue, maskExpression, position = 0, justPasted = false, backspaced = false, \n    // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-explicit-any\n    cb = () => { }) {\n        if (!maskExpression) {\n            return inputValue !== this.actualValue ? this.actualValue : inputValue;\n        }\n        this.maskIsShown = this.showMaskTyped ? this.showMaskInInput() : '';\n        if (this.maskExpression === 'IP' && this.showMaskTyped) {\n            this.maskIsShown = this.showMaskInInput(inputValue || '#');\n        }\n        if (this.maskExpression === 'CPF_CNPJ' && this.showMaskTyped) {\n            this.maskIsShown = this.showMaskInInput(inputValue || '#');\n        }\n        if (!inputValue && this.showMaskTyped) {\n            this.formControlResult(this.prefix);\n            return this.prefix + this.maskIsShown;\n        }\n        const getSymbol = !!inputValue && typeof this.selStart === 'number'\n            ? inputValue[this.selStart] ?? ''\n            : '';\n        let newInputValue = '';\n        if (this.hiddenInput !== undefined && !this.writingValue) {\n            let actualResult = this.actualValue.split('');\n            // eslint-disable  @typescript-eslint/no-unused-expressions\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            inputValue !== '' && actualResult.length\n                ? typeof this.selStart === 'number' && typeof this.selEnd === 'number'\n                    ? inputValue.length > actualResult.length\n                        ? actualResult.splice(this.selStart, 0, getSymbol)\n                        : inputValue.length < actualResult.length\n                            ? actualResult.length - inputValue.length === 1\n                                ? actualResult.splice(this.selStart - 1, 1)\n                                : actualResult.splice(this.selStart, this.selEnd - this.selStart)\n                            : null\n                    : null\n                : (actualResult = []);\n            if (this.showMaskTyped) {\n                // eslint-disable-next-line no-param-reassign\n                inputValue = this.removeMask(inputValue);\n            }\n            // eslint-enable  @typescript-eslint/no-unused-expressions\n            newInputValue =\n                this.actualValue.length && actualResult.length <= inputValue.length\n                    ? this.shiftTypedSymbols(actualResult.join(''))\n                    : inputValue;\n        }\n        if (this.showMaskTyped) {\n            // eslint-disable-next-line no-param-reassign\n            inputValue = this.removeMask(inputValue);\n        }\n        newInputValue = Boolean(newInputValue) && newInputValue.length ? newInputValue : inputValue;\n        const result = super.applyMask(newInputValue, maskExpression, position, justPasted, backspaced, cb);\n        this.actualValue = this.getActualValue(result);\n        // handle some separator implications:\n        // a.) adjust decimalMarker default (. -> ,) if thousandSeparator is a dot\n        if (this.thousandSeparator === '.' && this.decimalMarker === '.') {\n            this.decimalMarker = ',';\n        }\n        // b) remove decimal marker from list of special characters to mask\n        if (this.maskExpression.startsWith('separator') && this.dropSpecialCharacters === true) {\n            this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item) => !this._compareOrIncludes(item, this.decimalMarker, this.thousandSeparator) //item !== this.decimalMarker, // !\n            );\n        }\n        this.formControlResult(result);\n        if (!this.showMaskTyped) {\n            if (this.hiddenInput) {\n                return result && result.length\n                    ? this.hideInput(result, this.maskExpression)\n                    : result;\n            }\n            return result;\n        }\n        const resLen = result.length;\n        const prefNmask = this.prefix + this.maskIsShown;\n        if (this.maskExpression.includes('H')) {\n            const countSkipedSymbol = this._numberSkipedSymbols(result);\n            return result + prefNmask.slice(resLen + countSkipedSymbol);\n        }\n        else if (this.maskExpression === 'IP' || this.maskExpression === 'CPF_CNPJ') {\n            return result + prefNmask;\n        }\n        return result + prefNmask.slice(resLen);\n    }\n    // get the number of characters that were shifted\n    _numberSkipedSymbols(value) {\n        const regex = /(^|\\D)(\\d\\D)/g;\n        let match = regex.exec(value);\n        let countSkipedSymbol = 0;\n        while (match != null) {\n            countSkipedSymbol += 1;\n            match = regex.exec(value);\n        }\n        return countSkipedSymbol;\n    }\n    applyValueChanges(position, justPasted, backspaced, \n    // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-explicit-any\n    cb = () => { }) {\n        const formElement = this._elementRef.nativeElement;\n        formElement.value = this.applyMask(formElement.value, this.maskExpression, position, justPasted, backspaced, cb);\n        if (formElement === this._getActiveElement()) {\n            return;\n        }\n        this.clearIfNotMatchFn();\n    }\n    hideInput(inputValue, maskExpression) {\n        return inputValue\n            .split('')\n            .map((curr, index) => {\n            if (this.maskAvailablePatterns &&\n                this.maskAvailablePatterns[maskExpression[index] ?? ''] &&\n                this.maskAvailablePatterns[maskExpression[index] ?? '']?.symbol) {\n                return this.maskAvailablePatterns[maskExpression[index] ?? '']?.symbol;\n            }\n            return curr;\n        })\n            .join('');\n    }\n    // this function is not necessary, it checks result against maskExpression\n    getActualValue(res) {\n        const compare = res.split('').filter((symbol, i) => {\n            const maskChar = this.maskExpression[i] ?? '';\n            return (this._checkSymbolMask(symbol, maskChar) ||\n                (this.maskSpecialCharacters.includes(maskChar) && symbol === maskChar));\n        });\n        if (compare.join('') === res) {\n            return compare.join('');\n        }\n        return res;\n    }\n    shiftTypedSymbols(inputValue) {\n        let symbolToReplace = '';\n        const newInputValue = (inputValue &&\n            inputValue.split('').map((currSymbol, index) => {\n                if (this.maskSpecialCharacters.includes(inputValue[index + 1] ?? '') &&\n                    inputValue[index + 1] !== this.maskExpression[index + 1]) {\n                    symbolToReplace = currSymbol;\n                    return inputValue[index + 1];\n                }\n                if (symbolToReplace.length) {\n                    const replaceSymbol = symbolToReplace;\n                    symbolToReplace = '';\n                    return replaceSymbol;\n                }\n                return currSymbol;\n            })) ||\n            [];\n        return newInputValue.join('');\n    }\n    /**\n     * Convert number value to string\n     * 3.1415 -> '3.1415'\n     * 1e-7 -> '0.0000001'\n     */\n    numberToString(value) {\n        if (!value && value !== 0) {\n            return String(value);\n        }\n        return Number(value).toLocaleString('fullwide', {\n            useGrouping: false,\n            maximumFractionDigits: 20,\n        });\n    }\n    showMaskInInput(inputVal) {\n        if (this.showMaskTyped && !!this.shownMaskExpression) {\n            if (this.maskExpression.length !== this.shownMaskExpression.length) {\n                throw new Error('Mask expression must match mask placeholder length');\n            }\n            else {\n                return this.shownMaskExpression;\n            }\n        }\n        else if (this.showMaskTyped) {\n            if (inputVal) {\n                if (this.maskExpression === 'IP') {\n                    return this._checkForIp(inputVal);\n                }\n                if (this.maskExpression === 'CPF_CNPJ') {\n                    return this._checkForCpfCnpj(inputVal);\n                }\n            }\n            return this.maskExpression.replace(/\\w/g, this.placeHolderCharacter);\n        }\n        return '';\n    }\n    clearIfNotMatchFn() {\n        const formElement = this._elementRef.nativeElement;\n        if (this.clearIfNotMatch &&\n            this.prefix.length + this.maskExpression.length + this.suffix.length !==\n                formElement.value.replace(/_/g, '').length) {\n            this.formElementProperty = ['value', ''];\n            this.applyMask(formElement.value, this.maskExpression);\n        }\n    }\n    set formElementProperty([name, value]) {\n        Promise.resolve().then(() => this._renderer.setProperty(this._elementRef.nativeElement, name, value));\n    }\n    checkSpecialCharAmount(mask) {\n        const chars = mask\n            .split('')\n            .filter((item) => this._findSpecialChar(item));\n        return chars.length;\n    }\n    removeMask(inputValue) {\n        return this._removeMask(this._removeSuffix(this._removePrefix(inputValue)), this.maskSpecialCharacters.concat('_').concat(this.placeHolderCharacter));\n    }\n    _checkForIp(inputVal) {\n        if (inputVal === '#') {\n            return `${this.placeHolderCharacter}.${this.placeHolderCharacter}.${this.placeHolderCharacter}.${this.placeHolderCharacter}`;\n        }\n        const arr = [];\n        for (let i = 0; i < inputVal.length; i++) {\n            const value = inputVal[i] ?? '';\n            if (!value) {\n                continue;\n            }\n            if (value.match('\\\\d')) {\n                arr.push(value);\n            }\n        }\n        if (arr.length <= 3) {\n            return `${this.placeHolderCharacter}.${this.placeHolderCharacter}.${this.placeHolderCharacter}`;\n        }\n        if (arr.length > 3 && arr.length <= 6) {\n            return `${this.placeHolderCharacter}.${this.placeHolderCharacter}`;\n        }\n        if (arr.length > 6 && arr.length <= 9) {\n            return this.placeHolderCharacter;\n        }\n        if (arr.length > 9 && arr.length <= 12) {\n            return '';\n        }\n        return '';\n    }\n    _checkForCpfCnpj(inputVal) {\n        const cpf = `${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `-${this.placeHolderCharacter}${this.placeHolderCharacter}`;\n        const cnpj = `${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `/${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `-${this.placeHolderCharacter}${this.placeHolderCharacter}`;\n        if (inputVal === '#') {\n            return cpf;\n        }\n        const arr = [];\n        for (let i = 0; i < inputVal.length; i++) {\n            const value = inputVal[i] ?? '';\n            if (!value) {\n                continue;\n            }\n            if (value.match('\\\\d')) {\n                arr.push(value);\n            }\n        }\n        if (arr.length <= 3) {\n            return cpf.slice(arr.length, cpf.length);\n        }\n        if (arr.length > 3 && arr.length <= 6) {\n            return cpf.slice(arr.length + 1, cpf.length);\n        }\n        if (arr.length > 6 && arr.length <= 9) {\n            return cpf.slice(arr.length + 2, cpf.length);\n        }\n        if (arr.length > 9 && arr.length < 11) {\n            return cpf.slice(arr.length + 3, cpf.length);\n        }\n        if (arr.length === 11) {\n            return '';\n        }\n        if (arr.length === 12) {\n            if (inputVal.length === 17) {\n                return cnpj.slice(16, cnpj.length);\n            }\n            return cnpj.slice(15, cnpj.length);\n        }\n        if (arr.length > 12 && arr.length <= 14) {\n            return cnpj.slice(arr.length + 4, cnpj.length);\n        }\n        return '';\n    }\n    /**\n     * Recursively determine the current active element by navigating the Shadow DOM until the Active Element is found.\n     */\n    _getActiveElement(document = this.document) {\n        const shadowRootEl = document?.activeElement?.shadowRoot;\n        if (!shadowRootEl?.activeElement) {\n            return document.activeElement;\n        }\n        else {\n            return this._getActiveElement(shadowRootEl);\n        }\n    }\n    /**\n     * Propogates the input value back to the Angular model by triggering the onChange function. It won't do this if writingValue\n     * is true. If that is true it means we are currently in the writeValue function, which is supposed to only update the actual\n     * DOM element based on the Angular model value. It should be a one way process, i.e. writeValue should not be modifying the Angular\n     * model value too. Therefore, we don't trigger onChange in this scenario.\n     * @param inputValue the current form input value\n     */\n    formControlResult(inputValue) {\n        if (this.writingValue || (!this.triggerOnMaskChange && this.maskChanged)) {\n            this.maskChanged = false;\n            return;\n        }\n        if (Array.isArray(this.dropSpecialCharacters)) {\n            this.onChange(this._toNumber(this._removeMask(this._removeSuffix(this._removePrefix(inputValue)), this.dropSpecialCharacters)));\n        }\n        else if (this.dropSpecialCharacters) {\n            this.onChange(this._toNumber(this._checkSymbols(inputValue)));\n        }\n        else {\n            this.onChange(this._removeSuffix(inputValue));\n        }\n    }\n    _toNumber(value) {\n        if (!this.isNumberValue || value === '') {\n            return value;\n        }\n        const num = Number(value);\n        return Number.isNaN(num) ? value : num;\n    }\n    _removeMask(value, specialCharactersForRemove) {\n        return value ? value.replace(this._regExpForRemove(specialCharactersForRemove), '') : value;\n    }\n    _removePrefix(value) {\n        if (!this.prefix) {\n            return value;\n        }\n        return value ? value.replace(this.prefix, '') : value;\n    }\n    _removeSuffix(value) {\n        if (!this.suffix) {\n            return value;\n        }\n        return value ? value.replace(this.suffix, '') : value;\n    }\n    _retrieveSeparatorValue(result) {\n        return this._removeMask(this._removeSuffix(this._removePrefix(result)), this.maskSpecialCharacters);\n    }\n    _regExpForRemove(specialCharactersForRemove) {\n        return new RegExp(specialCharactersForRemove.map((item) => `\\\\${item}`).join('|'), 'gi');\n    }\n    _replaceDecimalMarkerToDot(value) {\n        const markers = Array.isArray(this.decimalMarker)\n            ? this.decimalMarker\n            : [this.decimalMarker];\n        return value.replace(this._regExpForRemove(markers), '.');\n    }\n    _checkSymbols(result) {\n        if (result === '') {\n            return result;\n        }\n        const separatorPrecision = this._retrieveSeparatorPrecision(this.maskExpression);\n        const separatorValue = this._replaceDecimalMarkerToDot(this._retrieveSeparatorValue(result));\n        if (!this.isNumberValue) {\n            return separatorValue;\n        }\n        if (separatorPrecision) {\n            if (result === this.decimalMarker) {\n                return null;\n            }\n            return this._checkPrecision(this.maskExpression, separatorValue);\n        }\n        else {\n            return Number(separatorValue);\n        }\n    }\n    // TODO should think about helpers or separting decimal precision to own property\n    _retrieveSeparatorPrecision(maskExpretion) {\n        const matcher = maskExpretion.match(new RegExp(`^separator\\\\.([^d]*)`));\n        return matcher ? Number(matcher[1]) : null;\n    }\n    _checkPrecision(separatorExpression, separatorValue) {\n        if (separatorExpression.indexOf('2') > 0) {\n            return Number(separatorValue).toFixed(2);\n        }\n        return Number(separatorValue);\n    }\n}\nMaskService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.8\", ngImport: i0, type: MaskService, deps: [{ token: DOCUMENT }, { token: config }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Injectable });\nMaskService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.8\", ngImport: i0, type: MaskService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.8\", ngImport: i0, type: MaskService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [config]\n                }] }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; } });\n\nclass MaskDirective {\n    constructor(document, _maskService, _config) {\n        this.document = document;\n        this._maskService = _maskService;\n        this._config = _config;\n        // eslint-disable-next-line @angular-eslint/no-input-rename\n        this.maskExpression = '';\n        this.specialCharacters = [];\n        this.patterns = {};\n        this.prefix = '';\n        this.suffix = '';\n        this.thousandSeparator = ' ';\n        this.decimalMarker = '.';\n        this.dropSpecialCharacters = null;\n        this.hiddenInput = null;\n        this.showMaskTyped = null;\n        this.placeHolderCharacter = null;\n        this.shownMaskExpression = null;\n        this.showTemplate = null;\n        this.clearIfNotMatch = null;\n        this.validation = null;\n        this.separatorLimit = null;\n        this.allowNegativeNumbers = null;\n        this.leadZeroDateTime = null;\n        this.triggerOnMaskChange = null;\n        this.maskFilled = new EventEmitter();\n        this._maskValue = '';\n        this._position = null;\n        this._maskExpressionArray = [];\n        this._justPasted = false;\n        // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-explicit-any\n        this.onChange = (_) => { };\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        this.onTouch = () => { };\n    }\n    ngOnChanges(changes) {\n        const { maskExpression, specialCharacters, patterns, prefix, suffix, thousandSeparator, decimalMarker, dropSpecialCharacters, hiddenInput, showMaskTyped, placeHolderCharacter, shownMaskExpression, showTemplate, clearIfNotMatch, validation, separatorLimit, allowNegativeNumbers, leadZeroDateTime, triggerOnMaskChange, } = changes;\n        if (maskExpression) {\n            if (maskExpression.currentValue !== maskExpression.previousValue &&\n                !maskExpression.firstChange) {\n                this._maskService.maskChanged = true;\n            }\n            if (maskExpression.currentValue && maskExpression.currentValue.split('||').length > 1) {\n                this._maskExpressionArray = maskExpression.currentValue\n                    .split('||')\n                    .sort((a, b) => {\n                    return a.length - b.length;\n                });\n                this._setMask();\n            }\n            else {\n                this._maskExpressionArray = [];\n                this._maskValue = maskExpression.currentValue || '';\n                this._maskService.maskExpression = this._maskValue;\n            }\n        }\n        if (specialCharacters) {\n            if (!specialCharacters.currentValue || !Array.isArray(specialCharacters.currentValue)) {\n                return;\n            }\n            else {\n                this._maskService.maskSpecialCharacters = specialCharacters.currentValue || [];\n            }\n        }\n        // Only overwrite the mask available patterns if a pattern has actually been passed in\n        if (patterns && patterns.currentValue) {\n            this._maskService.maskAvailablePatterns = patterns.currentValue;\n        }\n        if (prefix) {\n            this._maskService.prefix = prefix.currentValue;\n        }\n        if (suffix) {\n            this._maskService.suffix = suffix.currentValue;\n        }\n        if (thousandSeparator) {\n            this._maskService.thousandSeparator = thousandSeparator.currentValue;\n        }\n        if (decimalMarker) {\n            this._maskService.decimalMarker = decimalMarker.currentValue;\n        }\n        if (dropSpecialCharacters) {\n            this._maskService.dropSpecialCharacters = dropSpecialCharacters.currentValue;\n        }\n        if (hiddenInput) {\n            this._maskService.hiddenInput = hiddenInput.currentValue;\n        }\n        if (showMaskTyped) {\n            this._maskService.showMaskTyped = showMaskTyped.currentValue;\n        }\n        if (placeHolderCharacter) {\n            this._maskService.placeHolderCharacter = placeHolderCharacter.currentValue;\n        }\n        if (shownMaskExpression) {\n            this._maskService.shownMaskExpression = shownMaskExpression.currentValue;\n        }\n        if (showTemplate) {\n            this._maskService.showTemplate = showTemplate.currentValue;\n        }\n        if (clearIfNotMatch) {\n            this._maskService.clearIfNotMatch = clearIfNotMatch.currentValue;\n        }\n        if (validation) {\n            this._maskService.validation = validation.currentValue;\n        }\n        if (separatorLimit) {\n            this._maskService.separatorLimit = separatorLimit.currentValue;\n        }\n        if (allowNegativeNumbers) {\n            this._maskService.allowNegativeNumbers = allowNegativeNumbers.currentValue;\n            if (this._maskService.allowNegativeNumbers) {\n                this._maskService.maskSpecialCharacters =\n                    this._maskService.maskSpecialCharacters.filter((c) => c !== '-');\n            }\n        }\n        if (leadZeroDateTime) {\n            this._maskService.leadZeroDateTime = leadZeroDateTime.currentValue;\n        }\n        if (triggerOnMaskChange) {\n            this._maskService.triggerOnMaskChange = triggerOnMaskChange.currentValue;\n        }\n        this._applyMask();\n    }\n    // eslint-disable-next-line complexity\n    validate({ value }) {\n        if (!this._maskService.validation || !this._maskValue) {\n            return null;\n        }\n        if (this._maskService.ipError) {\n            return this._createValidationError(value);\n        }\n        if (this._maskService.cpfCnpjError) {\n            return this._createValidationError(value);\n        }\n        if (this._maskValue.startsWith('separator')) {\n            return null;\n        }\n        if (withoutValidation.includes(this._maskValue)) {\n            return null;\n        }\n        if (this._maskService.clearIfNotMatch) {\n            return null;\n        }\n        if (timeMasks.includes(this._maskValue)) {\n            return this._validateTime(value);\n        }\n        if (value && value.toString().length >= 1) {\n            let counterOfOpt = 0;\n            for (const key in this._maskService.maskAvailablePatterns) {\n                if (this._maskService.maskAvailablePatterns[key]?.optional) {\n                    if (this._maskValue.indexOf(key) !== this._maskValue.lastIndexOf(key)) {\n                        const opt = this._maskValue\n                            .split('')\n                            .filter((i) => i === key)\n                            .join('');\n                        counterOfOpt += opt.length;\n                    }\n                    else if (this._maskValue.indexOf(key) !== -1) {\n                        counterOfOpt++;\n                    }\n                    if (this._maskValue.indexOf(key) !== -1 &&\n                        value.toString().length >= this._maskValue.indexOf(key)) {\n                        return null;\n                    }\n                    if (counterOfOpt === this._maskValue.length) {\n                        return null;\n                    }\n                }\n            }\n            if (this._maskValue.indexOf('{') === 1 &&\n                value.toString().length ===\n                    this._maskValue.length +\n                        Number((this._maskValue.split('{')[1] ?? '').split('}')[0]) -\n                        4) {\n                return null;\n            }\n            if (this._maskValue.indexOf('*') === 1 || this._maskValue.indexOf('?') === 1) {\n                return null;\n            }\n            else if ((this._maskValue.indexOf('*') > 1 &&\n                value.toString().length < this._maskValue.indexOf('*')) ||\n                (this._maskValue.indexOf('?') > 1 &&\n                    value.toString().length < this._maskValue.indexOf('?')) ||\n                this._maskValue.indexOf('{') === 1) {\n                return this._createValidationError(value);\n            }\n            if (this._maskValue.indexOf('*') === -1 || this._maskValue.indexOf('?') === -1) {\n                const length = this._maskService.dropSpecialCharacters\n                    ? this._maskValue.length -\n                        this._maskService.checkSpecialCharAmount(this._maskValue) -\n                        counterOfOpt\n                    : this._maskValue.length - counterOfOpt;\n                if (value.toString().length < length) {\n                    return this._createValidationError(value);\n                }\n            }\n        }\n        if (value) {\n            this.maskFilled.emit();\n            return null;\n        }\n        return null;\n    }\n    onPaste() {\n        this._justPasted = true;\n    }\n    onModelChange(value) {\n        // on form reset we need to update the actualValue\n        if ((value === '' || value === null || value === undefined) &&\n            this._maskService.actualValue) {\n            this._maskService.actualValue = this._maskService.getActualValue('');\n        }\n    }\n    onInput(e) {\n        const el = e.target;\n        this._inputValue = el.value;\n        this._setMask();\n        if (!this._maskValue) {\n            this.onChange(el.value);\n            return;\n        }\n        const position = el.selectionStart === 1\n            ? el.selectionStart + this._maskService.prefix.length\n            : el.selectionStart;\n        let caretShift = 0;\n        let backspaceShift = false;\n        this._maskService.applyValueChanges(position, this._justPasted, this._code === 'Backspace' || this._code === 'Delete', (shift, _backspaceShift) => {\n            this._justPasted = false;\n            caretShift = shift;\n            backspaceShift = _backspaceShift;\n        });\n        // only set the selection if the element is active\n        if (this._getActiveElement() !== el) {\n            return;\n        }\n        this._position =\n            this._position === 1 && this._inputValue.length === 1 ? null : this._position;\n        let positionToApply = this._position\n            ? this._inputValue.length + position + caretShift\n            : position + (this._code === 'Backspace' && !backspaceShift ? 0 : caretShift);\n        if (positionToApply > this._getActualInputLength()) {\n            positionToApply = this._getActualInputLength();\n        }\n        if (positionToApply < 0) {\n            positionToApply = 0;\n        }\n        el.setSelectionRange(positionToApply, positionToApply);\n        this._position = null;\n    }\n    onBlur() {\n        if (this._maskValue) {\n            this._maskService.clearIfNotMatchFn();\n        }\n        this.onTouch();\n    }\n    onClick(e) {\n        if (!this._maskValue) {\n            return;\n        }\n        const el = e.target;\n        const posStart = 0;\n        const posEnd = 0;\n        if (el !== null &&\n            el.selectionStart !== null &&\n            el.selectionStart === el.selectionEnd &&\n            el.selectionStart > this._maskService.prefix.length &&\n            // eslint-disable-next-line\n            e.keyCode !== 38) {\n            if (this._maskService.showMaskTyped) {\n                // We are showing the mask in the input\n                this._maskService.maskIsShown = this._maskService.showMaskInInput();\n                if (el.setSelectionRange &&\n                    this._maskService.prefix + this._maskService.maskIsShown === el.value) {\n                    // the input ONLY contains the mask, so position the cursor at the start\n                    el.focus();\n                    el.setSelectionRange(posStart, posEnd);\n                }\n                else {\n                    // the input contains some characters already\n                    if (el.selectionStart > this._maskService.actualValue.length) {\n                        // if the user clicked beyond our value's length, position the cursor at the end of our value\n                        el.setSelectionRange(this._maskService.actualValue.length, this._maskService.actualValue.length);\n                    }\n                }\n            }\n        }\n        const nextValue = el &&\n            (!el.value || el.value === this._maskService.prefix\n                ? this._maskService.prefix + this._maskService.maskIsShown\n                : el.value);\n        /** Fix of cursor position jumping to end in most browsers no matter where cursor is inserted onFocus */\n        if (el && el.value !== nextValue) {\n            el.value = nextValue;\n        }\n        /** fix of cursor position with prefix when mouse click occur */\n        if (el &&\n            (el.selectionStart || el.selectionEnd) <=\n                this._maskService.prefix.length) {\n            el.selectionStart = this._maskService.prefix.length;\n            return;\n        }\n        /** select only inserted text */\n        if (el && el.selectionEnd > this._getActualInputLength()) {\n            el.selectionEnd = this._getActualInputLength();\n        }\n    }\n    // eslint-disable-next-line complexity\n    onKeyDown(e) {\n        if (!this._maskValue) {\n            return;\n        }\n        this._code = e.code ? e.code : e.key;\n        const el = e.target;\n        this._inputValue = el.value;\n        this._setMask();\n        if (e.keyCode === 38) {\n            e.preventDefault();\n        }\n        if (e.keyCode === 37 || e.keyCode === 8 || e.keyCode === 46) {\n            if (e.keyCode === 8 && el.value.length === 0) {\n                el.selectionStart = el.selectionEnd;\n            }\n            if (e.keyCode === 8 && el.selectionStart !== 0) {\n                // If specialChars is false, (shouldn't ever happen) then set to the defaults\n                this.specialCharacters = this.specialCharacters?.length\n                    ? this.specialCharacters\n                    : this._config.specialCharacters;\n                if (this.prefix.length > 1 && el.selectionStart <= this.prefix.length) {\n                    el.setSelectionRange(this.prefix.length, el.selectionEnd);\n                }\n                else {\n                    if (this._inputValue.length !== el.selectionStart &&\n                        el.selectionStart !== 1) {\n                        while (this.specialCharacters.includes((this._inputValue[el.selectionStart - 1] ?? '').toString()) &&\n                            ((this.prefix.length >= 1 &&\n                                el.selectionStart > this.prefix.length) ||\n                                this.prefix.length === 0)) {\n                            el.setSelectionRange(el.selectionStart - 1, el.selectionEnd);\n                        }\n                    }\n                }\n            }\n            this.checkSelectionOnDeletion(el);\n            if (this._maskService.prefix.length &&\n                el.selectionStart <= this._maskService.prefix.length &&\n                el.selectionEnd <= this._maskService.prefix.length) {\n                e.preventDefault();\n            }\n            const cursorStart = el.selectionStart;\n            if (e.keyCode === 8 &&\n                !el.readOnly &&\n                cursorStart === 0 &&\n                el.selectionEnd === el.value.length &&\n                el.value.length !== 0) {\n                this._position = this._maskService.prefix ? this._maskService.prefix.length : 0;\n                this._maskService.applyMask(this._maskService.prefix, this._maskService.maskExpression, this._position);\n            }\n        }\n        if (!!this.suffix &&\n            this.suffix.length > 1 &&\n            this._inputValue.length - this.suffix.length < el.selectionStart) {\n            el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\n        }\n        else if ((e.keyCode === 65 && e.ctrlKey) ||\n            (e.keyCode === 65 && e.metaKey) // Cmd + A (Mac)\n        ) {\n            el.setSelectionRange(0, this._getActualInputLength());\n            e.preventDefault();\n        }\n        this._maskService.selStart = el.selectionStart;\n        this._maskService.selEnd = el.selectionEnd;\n    }\n    /** It writes the value in the input */\n    async writeValue(inputValue) {\n        if (typeof inputValue === 'object' && inputValue !== null && 'value' in inputValue) {\n            if ('disable' in inputValue) {\n                this.setDisabledState(Boolean(inputValue.disable));\n            }\n            // eslint-disable-next-line no-param-reassign\n            inputValue = inputValue.value;\n        }\n        if (typeof inputValue === 'number' || this._maskValue.startsWith('separator')) {\n            // eslint-disable-next-line no-param-reassign\n            inputValue = this._maskService.numberToString(inputValue);\n            if (!Array.isArray(this.decimalMarker)) {\n                // eslint-disable-next-line no-param-reassign\n                inputValue =\n                    this.decimalMarker !== '.'\n                        ? inputValue.replace('.', this.decimalMarker)\n                        : inputValue;\n            }\n            this._maskService.isNumberValue = true;\n        }\n        if (typeof inputValue !== 'string') {\n            // eslint-disable-next-line no-param-reassign\n            inputValue = '';\n        }\n        this._inputValue = inputValue;\n        this._setMask();\n        if ((inputValue && this._maskService.maskExpression) ||\n            (this._maskService.maskExpression &&\n                (this._maskService.prefix || this._maskService.showMaskTyped))) {\n            // Let the service we know we are writing value so that triggering onChange function won't happen during applyMask\n            this._maskService.writingValue = true;\n            this._maskService.formElementProperty = [\n                'value',\n                this._maskService.applyMask(inputValue, this._maskService.maskExpression),\n            ];\n            // Let the service know we've finished writing value\n            this._maskService.writingValue = false;\n        }\n        else {\n            this._maskService.formElementProperty = ['value', inputValue];\n        }\n        this._inputValue = inputValue;\n    }\n    registerOnChange(fn) {\n        this._maskService.onChange = this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouch = fn;\n    }\n    _getActiveElement(document = this.document) {\n        const shadowRootEl = document?.activeElement?.shadowRoot;\n        if (!shadowRootEl?.activeElement) {\n            return document.activeElement;\n        }\n        else {\n            return this._getActiveElement(shadowRootEl);\n        }\n    }\n    checkSelectionOnDeletion(el) {\n        el.selectionStart = Math.min(Math.max(this.prefix.length, el.selectionStart), this._inputValue.length - this.suffix.length);\n        el.selectionEnd = Math.min(Math.max(this.prefix.length, el.selectionEnd), this._inputValue.length - this.suffix.length);\n    }\n    /** It disables the input element */\n    setDisabledState(isDisabled) {\n        this._maskService.formElementProperty = ['disabled', isDisabled];\n    }\n    _repeatPatternSymbols(maskExp) {\n        return ((maskExp.match(/{[0-9]+}/) &&\n            maskExp\n                .split('')\n                .reduce((accum, currVal, index) => {\n                this._start = currVal === '{' ? index : this._start;\n                if (currVal !== '}') {\n                    return this._maskService._findSpecialChar(currVal)\n                        ? accum + currVal\n                        : accum;\n                }\n                this._end = index;\n                const repeatNumber = Number(maskExp.slice(this._start + 1, this._end));\n                const replaceWith = new Array(repeatNumber + 1).join(maskExp[this._start - 1]);\n                return accum + replaceWith;\n            }, '')) ||\n            maskExp);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _applyMask() {\n        this._maskService.maskExpression = this._repeatPatternSymbols(this._maskValue || '');\n        this._maskService.formElementProperty = [\n            'value',\n            this._maskService.applyMask(this._inputValue, this._maskService.maskExpression),\n        ];\n    }\n    _validateTime(value) {\n        const rowMaskLen = this._maskValue\n            .split('')\n            .filter((s) => s !== ':').length;\n        if (!value) {\n            return null; // Don't validate empty values to allow for optional form control\n        }\n        if ((+(value[value.length - 1] ?? -1) === 0 && value.length < rowMaskLen) ||\n            value.length <= rowMaskLen - 2) {\n            return this._createValidationError(value);\n        }\n        return null;\n    }\n    _getActualInputLength() {\n        return (this._maskService.actualValue.length ||\n            this._maskService.actualValue.length + this._maskService.prefix.length);\n    }\n    _createValidationError(actualValue) {\n        return {\n            mask: {\n                requiredMask: this._maskValue,\n                actualValue,\n            },\n        };\n    }\n    _setMask() {\n        if (this._maskExpressionArray.length > 0) {\n            this._maskExpressionArray.some((mask) => {\n                const test = this._maskService.removeMask(this._inputValue)?.length <=\n                    this._maskService.removeMask(mask)?.length;\n                if (this._inputValue && test) {\n                    this._maskValue = mask;\n                    this.maskExpression = mask;\n                    this._maskService.maskExpression = mask;\n                    return test;\n                }\n                else {\n                    const expression = this._maskExpressionArray[this._maskExpressionArray.length - 1] ?? '';\n                    this._maskValue =\n                        this.maskExpression =\n                            this._maskService.maskExpression =\n                                expression;\n                }\n            });\n        }\n    }\n}\nMaskDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.8\", ngImport: i0, type: MaskDirective, deps: [{ token: DOCUMENT }, { token: MaskService }, { token: config }], target: i0.ɵɵFactoryTarget.Directive });\nMaskDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.8\", type: MaskDirective, selector: \"input[mask], textarea[mask]\", inputs: { maskExpression: [\"mask\", \"maskExpression\"], specialCharacters: \"specialCharacters\", patterns: \"patterns\", prefix: \"prefix\", suffix: \"suffix\", thousandSeparator: \"thousandSeparator\", decimalMarker: \"decimalMarker\", dropSpecialCharacters: \"dropSpecialCharacters\", hiddenInput: \"hiddenInput\", showMaskTyped: \"showMaskTyped\", placeHolderCharacter: \"placeHolderCharacter\", shownMaskExpression: \"shownMaskExpression\", showTemplate: \"showTemplate\", clearIfNotMatch: \"clearIfNotMatch\", validation: \"validation\", separatorLimit: \"separatorLimit\", allowNegativeNumbers: \"allowNegativeNumbers\", leadZeroDateTime: \"leadZeroDateTime\", triggerOnMaskChange: \"triggerOnMaskChange\" }, outputs: { maskFilled: \"maskFilled\" }, host: { listeners: { \"paste\": \"onPaste()\", \"ngModelChange\": \"onModelChange($event)\", \"input\": \"onInput($event)\", \"blur\": \"onBlur()\", \"click\": \"onClick($event)\", \"keydown\": \"onKeyDown($event)\" } }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => MaskDirective),\n            multi: true,\n        },\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => MaskDirective),\n            multi: true,\n        },\n        MaskService,\n    ], exportAs: [\"mask\", \"ngxMask\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.8\", ngImport: i0, type: MaskDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[mask], textarea[mask]',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => MaskDirective),\n                            multi: true,\n                        },\n                        {\n                            provide: NG_VALIDATORS,\n                            useExisting: forwardRef(() => MaskDirective),\n                            multi: true,\n                        },\n                        MaskService,\n                    ],\n                    exportAs: 'mask,ngxMask',\n                }]\n        }], ctorParameters: function () { return [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: MaskService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [config]\n                }] }]; }, propDecorators: { maskExpression: [{\n                type: Input,\n                args: ['mask']\n            }], specialCharacters: [{\n                type: Input\n            }], patterns: [{\n                type: Input\n            }], prefix: [{\n                type: Input\n            }], suffix: [{\n                type: Input\n            }], thousandSeparator: [{\n                type: Input\n            }], decimalMarker: [{\n                type: Input\n            }], dropSpecialCharacters: [{\n                type: Input\n            }], hiddenInput: [{\n                type: Input\n            }], showMaskTyped: [{\n                type: Input\n            }], placeHolderCharacter: [{\n                type: Input\n            }], shownMaskExpression: [{\n                type: Input\n            }], showTemplate: [{\n                type: Input\n            }], clearIfNotMatch: [{\n                type: Input\n            }], validation: [{\n                type: Input\n            }], separatorLimit: [{\n                type: Input\n            }], allowNegativeNumbers: [{\n                type: Input\n            }], leadZeroDateTime: [{\n                type: Input\n            }], triggerOnMaskChange: [{\n                type: Input\n            }], maskFilled: [{\n                type: Output\n            }], onPaste: [{\n                type: HostListener,\n                args: ['paste']\n            }], onModelChange: [{\n                type: HostListener,\n                args: ['ngModelChange', ['$event']]\n            }], onInput: [{\n                type: HostListener,\n                args: ['input', ['$event']]\n            }], onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onKeyDown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\n\nclass MaskPipe {\n    constructor(_maskService) {\n        this._maskService = _maskService;\n    }\n    transform(value, mask, thousandSeparator = null) {\n        if (!value && typeof value !== 'number') {\n            return '';\n        }\n        if (thousandSeparator) {\n            this._maskService.thousandSeparator = thousandSeparator;\n        }\n        if (typeof mask === 'string') {\n            return this._maskService.applyMask(`${value}`, mask);\n        }\n        return this._maskService.applyMaskWithPattern(`${value}`, mask);\n    }\n}\nMaskPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.8\", ngImport: i0, type: MaskPipe, deps: [{ token: MaskApplierService }], target: i0.ɵɵFactoryTarget.Pipe });\nMaskPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.2.8\", ngImport: i0, type: MaskPipe, name: \"mask\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.8\", ngImport: i0, type: MaskPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'mask',\n                    pure: true,\n                }]\n        }], ctorParameters: function () { return [{ type: MaskApplierService }]; } });\n\n/**\n * @internal\n */\nfunction _configFactory(initConfig, configValue) {\n    return configValue instanceof Function\n        ? { ...initConfig, ...configValue() }\n        : { ...initConfig, ...configValue };\n}\nclass NgxMaskModule {\n    static forRoot(configValue) {\n        return {\n            ngModule: NgxMaskModule,\n            providers: [\n                {\n                    provide: NEW_CONFIG,\n                    useValue: configValue,\n                },\n                {\n                    provide: INITIAL_CONFIG,\n                    useValue: initialConfig,\n                },\n                {\n                    provide: config,\n                    useFactory: _configFactory,\n                    deps: [INITIAL_CONFIG, NEW_CONFIG],\n                },\n                MaskApplierService,\n            ],\n        };\n    }\n    static forChild() {\n        return {\n            ngModule: NgxMaskModule,\n        };\n    }\n}\nNgxMaskModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.8\", ngImport: i0, type: NgxMaskModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxMaskModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.8\", ngImport: i0, type: NgxMaskModule, declarations: [MaskDirective, MaskPipe], exports: [MaskDirective, MaskPipe] });\nNgxMaskModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.8\", ngImport: i0, type: NgxMaskModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.8\", ngImport: i0, type: NgxMaskModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [MaskDirective, MaskPipe],\n                    declarations: [MaskDirective, MaskPipe],\n                }]\n        }] });\n\nconst commonjsGlobal = typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof window !== 'undefined'\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : typeof self !== 'undefined'\n                ? self\n                : {};\n(function () {\n    if (!commonjsGlobal.KeyboardEvent) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        commonjsGlobal.KeyboardEvent = function (_eventType, _init) { };\n    }\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INITIAL_CONFIG, MaskApplierService, MaskDirective, MaskPipe, MaskService, NEW_CONFIG, NgxMaskModule, _configFactory, config, initialConfig, timeMasks, withoutValidation };\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["i0","InjectionToken","EventEmitter","Injectable","Inject","forwardRef","Directive","Input","Output","HostListener","Pipe","NgModule","NG_VALUE_ACCESSOR","NG_VALIDATORS","DOCUMENT","config","NEW_CONFIG","INITIAL_CONFIG","initialConfig","suffix","prefix","thousandSeparator","decimalMarker","clearIfNotMatch","showTemplate","showMaskTyped","placeHolderCharacter","dropSpecialCharacters","hiddenInput","undefined","shownMaskExpression","separatorLimit","allowNegativeNumbers","validation","specialCharacters","leadZeroDateTime","triggerOnMaskChange","maskFilled","patterns","pattern","RegExp","optional","X","symbol","A","S","U","L","d","m","M","H","h","s","timeMasks","withoutValidation","MaskApplierService","constructor","_config","maskExpression","actualValue","_formatWithSeparators","str","thousandSeparatorChar","decimalChars","precision","x","decimalChar","Array","isArray","regExp","map","v","indexOf","join","split","match","decimals","length","res","replace","slice","rgx","test","substring","percentage","Number","getPrecision","Infinity","checkAndRemoveSuffix","inputValue","i","substr","includes","checkInputPrecision","marker","find","dm","precisionRegEx","_charToRegExpExpression","precisionMatch","precisionMatchLength","diff","_compareOrIncludes","_shift","Set","maskSpecialCharacters","maskAvailablePatterns","applyMaskWithPattern","maskAndPattern","mask","customPattern","applyMask","position","justPasted","backspaced","cb","cursor","result","multi","backspaceShift","shift","stepBack","inputArray","toString","valuesIP","ipError","_validIP","arr","push","cpfCnpjError","startsWith","_stripToDecimal","base","thousandSeparatorCharEscaped","invalidChars","invalidCharRegexp","strForSep","commaShift","shiftStep","add","clear","inputSymbol","_checkSymbolMask","_shiftStep","daysCount","monthsCount","withoutDays","day1monthInput","day2monthInput","day1monthPaste","day2monthPaste","_findSpecialChar","newPosition","has","actualShift","onlySpecial","every","char","val","maskSymbol","filter","idx","isDecimalMarker","charsToEscape","inputLength","value","comparedValue","excludedValue","some","index","ɵfac","MaskApplierService_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","decorators","args","MaskService","document","_elementRef","_renderer","isNumberValue","maskIsShown","selStart","selEnd","writingValue","maskChanged","onChange","_","showMaskInInput","formControlResult","getSymbol","newInputValue","actualResult","splice","removeMask","shiftTypedSymbols","Boolean","getActualValue","item","hideInput","resLen","prefNmask","countSkipedSymbol","_numberSkipedSymbols","regex","exec","applyValueChanges","formElement","nativeElement","_getActiveElement","clearIfNotMatchFn","curr","compare","maskChar","symbolToReplace","currSymbol","replaceSymbol","numberToString","String","toLocaleString","useGrouping","maximumFractionDigits","inputVal","Error","_checkForIp","_checkForCpfCnpj","formElementProperty","name","Promise","resolve","then","setProperty","checkSpecialCharAmount","chars","_removeMask","_removeSuffix","_removePrefix","concat","cpf","cnpj","shadowRootEl","activeElement","shadowRoot","_toNumber","_checkSymbols","num","isNaN","specialCharactersForRemove","_regExpForRemove","_retrieveSeparatorValue","_replaceDecimalMarkerToDot","markers","separatorPrecision","_retrieveSeparatorPrecision","separatorValue","_checkPrecision","maskExpretion","matcher","separatorExpression","toFixed","MaskService_Factory","ElementRef","Renderer2","Document","MaskDirective","_maskService","_maskValue","_position","_maskExpressionArray","_justPasted","onTouch","ngOnChanges","changes","currentValue","previousValue","firstChange","sort","a","b","_setMask","c","_applyMask","validate","_createValidationError","_validateTime","counterOfOpt","key","lastIndexOf","opt","emit","onPaste","onModelChange","onInput","e","el","target","_inputValue","selectionStart","caretShift","_code","_backspaceShift","positionToApply","_getActualInputLength","setSelectionRange","onBlur","onClick","posStart","posEnd","selectionEnd","keyCode","focus","nextValue","onKeyDown","code","preventDefault","checkSelectionOnDeletion","cursorStart","readOnly","ctrlKey","metaKey","writeValue","_this","_asyncToGenerator","setDisabledState","disable","registerOnChange","fn","registerOnTouched","Math","min","max","isDisabled","_repeatPatternSymbols","maskExp","reduce","accum","currVal","_start","_end","repeatNumber","replaceWith","rowMaskLen","requiredMask","expression","MaskDirective_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","hostBindings","MaskDirective_HostBindings","rf","ctx","ɵɵlistener","MaskDirective_paste_HostBindingHandler","MaskDirective_ngModelChange_HostBindingHandler","$event","MaskDirective_input_HostBindingHandler","MaskDirective_blur_HostBindingHandler","MaskDirective_click_HostBindingHandler","MaskDirective_keydown_HostBindingHandler","inputs","outputs","exportAs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵNgOnChangesFeature","selector","providers","MaskPipe","transform","MaskPipe_Factory","ɵpipe","ɵɵdefinePipe","pure","_configFactory","initConfig","configValue","Function","NgxMaskModule","forRoot","ngModule","useValue","useFactory","deps","forChild","NgxMaskModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports","declarations","commonjsGlobal","globalThis","window","global","self","KeyboardEvent","_eventType","_init"],"sourceRoot":"webpack:///","x_google_ignoreList":[7,8]}