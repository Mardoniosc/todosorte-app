{"version":3,"file":"917.cbda40e43960877c.js","mappings":"0WAgBMA,yBAEEA,SACFA,8BAHiDA,8BAAwB,cAAxBA,CAAwB,oBAAxBA,CAAwB,iCAEvEA,+DASEA,qBACEA,kEACFA,8BAYEA,4BAAwEA,4DAExEA,4BAAoEA,iEAStEA,gBAAoCA,oBAAOA,8BAC3CA,wCAAkDA,qBAAe,wBClDpE,MAAMC,EAA4B,CACrC,CACIC,KAAW,GACXC,UCaR,MAAM,MAAOC,EAUXC,YACUC,EACAC,EACAC,EACAC,GAHAC,uBACAA,oBACAA,oBACAA,eAXVA,WAAkD,CAChDC,KAAM,UACNC,QAAS,IAGXF,gBAAqB,CAOjB,CAEJG,WACEH,KAAKI,WAAaJ,KAAKF,aAAaO,MAAM,CACxCC,MAAO,CAAC,GAAI,CAACC,gBACbC,MAAO,CAAC,GAAID,gBAEf,CAEGE,kBACF,OAAOC,eACR,CAEDC,SAEMX,KAAKI,WAAWQ,UAKpBZ,KAAKI,WAAWS,UAGhBb,KAAKc,WAAY,EAGjBd,KAAKH,aAAac,OAAOX,KAAKI,WAAWW,OAAOC,UAAU,CACxDC,KAAM,KAKJ,MAAMC,EAAclB,KAAKJ,gBAAgBuB,SAASC,cAAcC,IAAI,gBAAkB,sBAGtFrB,KAAKD,QAAQuB,cAAcJ,EAA3B,EAEFK,MAAQC,IAENxB,KAAKI,WAAWqB,SAGhBzB,KAAK0B,aAAaC,YAGlB3B,KAAK4B,MAAQ,CACX3B,KAAM,QACNC,QAAS,+BAIXF,KAAKc,WAAY,KAGtB,CAEGe,kBACF,OAAO,IAAIC,MAAOC,aACnB,+CAzEUrC,GAAmBJ,yEAAnBI,EAAmBsC,siFFnBhC1C,iBAAwH,UAAxHA,CAAwH,UAAxHA,CAAwH,WAMhHA,iBACFA,QAGAA,iBAAoCA,wBAAYA,QAChDA,iBACEA,SACFA,QAGAA,8BAMAA,qBAAmE,uBAAnEA,CAAmE,gBAGpDA,uBAAOA,QAClBA,qBACAA,+BAGFA,QAGAA,8BAA+B,gBAClBA,kBAAKA,QAChBA,wBACAA,sBAAsCA,2DACnBA,MACf2C,OAAV,aADyB3C,OAEtB,OACJ,WAAW,GACFA,8BAEAA,8BAEFA,QACAA,sBAAYA,wCAAoBA,UAIlCA,sBACmCA,gCAAS4C,UAAQ,GAClD5C,0BACAA,0CAEFA,UAGFA,mBAGAA,mBAAmD,WAC1CA,+CAAiCA,QACxCA,iBAAMA,4DAAyCA,QAC/CA,iBAAMA,UAAwBA,cAIpCA,mBAIEA,2BAC0E,WAEtEA,sBAA0C,gBAE5CA,UAGFA,mBAAiH,UAAjHA,CAAiH,iBAI3GA,oBACFA,UAEFA,oBACFA,QAGAA,2BAA4C,YAA5CA,CAA4C,aAERA,UAAiBA,QACjDA,mBAAqBA,gDAAmCA,QACxDA,mBACAA,mBAA2B,WACJA,yCAA4BA,4CArFnDA,sCAI8BA,mCAMbA,yCAIYA,0CACfA,sEAQkCA,0CAMbA,2CAEAA,uCAO+BA,kCAAmB,kCAE5EA,8CACgBA,6CAWnBA,8CA6B0BA,8JE5E1B6C,OAEDzC,CAAb,OCYO,IAAM0C,EAAb,MAAM,MAAOA,kDAAgB,0BAAhBA,gCAZLC,cAAsB9C,GACtB+C,KACAC,KACAC,KACAC,KACAC,IACAC,KACAC,IACAC,KACAC,OAGKV,CAAb","names":["i0","authSignInRoutes","path","component","AuthSignInComponent","constructor","_activatedRoute","_authService","_formBuilder","_router","this","type","message","ngOnInit","signInForm","group","login","Validators","senha","nomeSistema","env","signIn","invalid","disable","showAlert","value","subscribe","next","redirectURL","snapshot","queryParamMap","get","navigateByUrl","error","response","enable","signInNgForm","resetForm","alert","currentYear","Date","getFullYear","selectors","_r3","ctx","fuseAnimations","AuthSignInModule","RouterModule","MatButtonModule","MatCheckboxModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","FuseCardModule","FuseAlertModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./src/app/modules/auth/sign-in/sign-in.component.html","./src/app/modules/auth/sign-in/sign-in.routing.ts","./src/app/modules/auth/sign-in/sign-in.component.ts","./src/app/modules/auth/sign-in/sign-in.module.ts"],"sourcesContent":["<div class=\"flex flex-col sm:flex-row items-center md:items-start sm:justify-center md:justify-start flex-auto min-w-0\">\n  <div\n    class=\"md:flex md:items-center md:justify-end w-full sm:w-auto md:h-full md:w-1/2 py-8 px-4 sm:p-12 md:p-16 sm:rounded-2xl md:rounded-none sm:shadow md:shadow-none sm:bg-card\">\n    <div class=\"flex flex-col items-center justify-center w-full max-w-80 sm:w-80 mx-auto sm:mx-0\">\n      <!-- Logo -->\n      <div class=\"w-24\">\n        <img src=\"assets/images/loteria/logo.svg\" />\n      </div>\n\n      <!-- Title -->\n      <div class=\"mt-8 leading-3 text-xl\">Bem Vindo ao</div>\n      <div class=\"text-5xl font-extrabold tracking-tight leading-tight\">\n        {{ nomeSistema }}\n      </div>\n\n      <!-- Alert -->\n      <fuse-alert class=\"mt-8 -mb-4\" *ngIf=\"showAlert\" [appearance]=\"'outline'\" [showIcon]=\"false\" [type]=\"alert.type\"\n        [@shake]=\"alert.type === 'error'\">\n        {{ alert.message }}\n      </fuse-alert>\n\n      <!-- Sign in form -->\n      <form class=\"mt-8\" [formGroup]=\"signInForm\" #signInNgForm=\"ngForm\">\n        <!-- Email field -->\n        <mat-form-field class=\"w-full\">\n          <mat-label>Usuário</mat-label>\n          <input id=\"login\" matInput [formControlName]=\"'login'\" />\n          <mat-error *ngIf=\"signInForm.get('login').hasError('required')\">\n            É necessário um nome de usuário para entrar\n          </mat-error>\n        </mat-form-field>\n\n        <!-- Password field -->\n        <mat-form-field class=\"w-full\">\n          <mat-label>Senha</mat-label>\n          <input id=\"password\" matInput type=\"password\" [formControlName]=\"'senha'\" #passwordField />\n          <button mat-icon-button type=\"button\" (click)=\"\n              passwordField.type === 'password'\n                ? (passwordField.type = 'text')\n                : (passwordField.type = 'password')\n            \" matSuffix>\n            <mat-icon class=\"icon-size-5\" *ngIf=\"passwordField.type === 'password'\" [svgIcon]=\"'heroicons_solid:eye'\">\n            </mat-icon>\n            <mat-icon class=\"icon-size-5\" *ngIf=\"passwordField.type === 'text'\" [svgIcon]=\"'heroicons_solid:eye-off'\">\n            </mat-icon>\n          </button>\n          <mat-error> Senha é obrigatória </mat-error>\n        </mat-form-field>\n\n        <!-- Submit button -->\n        <button class=\"fuse-mat-button-large w-full mt-6\" mat-flat-button [color]=\"'primary'\"\n          [disabled]=\"signInForm.disabled\" (click)=\"signIn()\">\n          <span *ngIf=\"!signInForm.disabled\"> Entrar </span>\n          <mat-progress-spinner *ngIf=\"signInForm.disabled\" [diameter]=\"24\" [mode]=\"'indeterminate'\">\n          </mat-progress-spinner>\n        </button>\n      </form>\n      <!-- Separator -->\n      <div class=\"mt-8 flex-auto border-t\"></div>\n\n      <!-- Single sign-on buttons -->\n      <div class=\"flex flex-col items-left mt-8 text-xs\">\n        <span> Mardonio S Costa Desenvolvedor Sr</span>\n        <span>Coordenadoria de Tecnologia da Informação</span>\n        <span>© 2012-{{ currentYear }}</span>\n      </div>\n    </div>\n  </div>\n  <div\n    class=\"relative hidden md:flex flex-auto items-center justify-center w-1/2 h-full p-16 lg:px-28 overflow-hidden bg-gray-800 dark:border-l\">\n    <!-- Background - @formatter:off -->\n    <!-- Rings -->\n    <svg class=\"absolute inset-0 pointer-events-none\" viewBox=\"0 0 960 540\" width=\"100%\" height=\"100%\"\n      preserveAspectRatio=\"xMidYMax slice\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g class=\"text-gray-700 opacity-25\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"100\">\n        <circle r=\"234\" cx=\"196\" cy=\"23\"></circle>\n        <circle r=\"234\" cx=\"790\" cy=\"491\"></circle>\n      </g>\n    </svg>\n    <!-- Dots -->\n    <svg class=\"absolute -top-16 -right-16 text-gray-700\" viewBox=\"0 0 220 192\" width=\"220\" height=\"192\" fill=\"none\">\n      <defs>\n        <pattern id=\"837c3e70-6c3a-44e6-8854-cc48c737b659\" x=\"0\" y=\"0\" width=\"20\" height=\"20\"\n          patternUnits=\"userSpaceOnUse\">\n          <rect x=\"0\" y=\"0\" width=\"4\" height=\"4\" fill=\"currentColor\"></rect>\n        </pattern>\n      </defs>\n      <rect width=\"220\" height=\"192\" fill=\"url(#837c3e70-6c3a-44e6-8854-cc48c737b659)\"></rect>\n    </svg>\n    <!-- @formatter:on -->\n    <!-- Content -->\n    <div class=\"z-10 relative w-full max-w-2xl\">\n      <div class=\"leading-none text-gray-100\">\n        <div class=\"text-8xl font-bold\">{{ nomeSistema }}</div>\n        <div class=\"text-xl\">Sistema de apoio a jogos de loteria</div>\n        <div class=\"my-8 flex-auto border-t border-gray-600 max-w-80\"></div>\n        <div class=\"flex flex-col\">\n          <p class=\"max-w-100\">Desenvolvimento Idependente!</p>\n          <!-- <img class=\"max-w-50\" src=\"assets/images/logo/geia-logo.svg\" alt=\"Logo Geia\" /> -->\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Route } from '@angular/router';\nimport { AuthSignInComponent } from 'app/modules/auth/sign-in/sign-in.component';\n\nexport const authSignInRoutes: Route[] = [\n    {\n        path     : '',\n        component: AuthSignInComponent\n    }\n];\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormGroup,\n  NgForm,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseAlertType } from '@fuse/components/alert';\nimport { AuthService } from 'app/core/auth/auth.service';\nimport { environment as env } from 'environments/environment';\n\n@Component({\n  selector: 'auth-sign-in',\n  templateUrl: './sign-in.component.html',\n  encapsulation: ViewEncapsulation.None,\n  animations: fuseAnimations,\n})\nexport class AuthSignInComponent implements OnInit {\n  @ViewChild('signInNgForm') signInNgForm: NgForm;\n\n  alert: { type: FuseAlertType; message: string } = {\n    type: 'success',\n    message: '',\n  };\n  signInForm: UntypedFormGroup;\n  showAlert: boolean = false;\n\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _authService: AuthService,\n    private _formBuilder: UntypedFormBuilder,\n    private _router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.signInForm = this._formBuilder.group({\n      login: ['', [Validators.required]],\n      senha: ['', Validators.required],\n    });\n  }\n\n  get nomeSistema(): string {\n    return env.nomeSistema;\n  }\n\n  signIn(): void {\n    // Return if the form is invalid\n    if (this.signInForm.invalid) {\n      return;\n    }\n\n    // Disable the form\n    this.signInForm.disable();\n\n    // Hide the alert\n    this.showAlert = false;\n\n    // Sign in\n    this._authService.signIn(this.signInForm.value).subscribe({\n      next: () => {\n        // Set the redirect url.\n        // The '/signed-in-redirect' is a dummy url to catch the request and redirect the user\n        // to the correct page after a successful sign in. This way, that url can be set via\n        // routing file and we don't have to touch here.\n        const redirectURL = this._activatedRoute.snapshot.queryParamMap.get('redirectURL') || '/signed-in-redirect';\n\n        // Navigate to the redirect url\n        this._router.navigateByUrl(redirectURL);\n      },\n      error: (response) => {\n        // Re-enable the form\n        this.signInForm.enable();\n\n        // Reset the form\n        this.signInNgForm.resetForm();\n\n        // Set the alert\n        this.alert = {\n          type: 'error',\n          message: 'Usuário ou senha errados',\n        };\n\n        // Show the alert\n        this.showAlert = true;\n      }\n    });\n  }\n\n  get currentYear(): number {\n    return new Date().getFullYear();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { FuseCardModule } from '@fuse/components/card';\nimport { FuseAlertModule } from '@fuse/components/alert';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { AuthSignInComponent } from 'app/modules/auth/sign-in/sign-in.component';\nimport { authSignInRoutes } from 'app/modules/auth/sign-in/sign-in.routing';\n\n@NgModule({\n    declarations: [\n        AuthSignInComponent\n    ],\n    imports     : [\n        RouterModule.forChild(authSignInRoutes),\n        MatButtonModule,\n        MatCheckboxModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatProgressSpinnerModule,\n        FuseCardModule,\n        FuseAlertModule,\n        SharedModule\n    ]\n})\nexport class AuthSignInModule\n{\n}\n"],"x_google_ignoreList":[]}