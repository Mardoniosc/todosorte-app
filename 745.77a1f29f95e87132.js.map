{"version":3,"file":"745.77a1f29f95e87132.js","mappings":"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","names":["BaseUltimoComponent","constructor","ngOnInit","selectors","i0","FechamentoComponent","HeaderTitleComponent","this","ETipoJogo","CartelaComponent","classItemSelecionado","jogo","adicionarRemoverNumero","item","index","numerosCartela","findIndex","numero","selecionado","indexOf","numerosSelecionados","splice","push","par","totalPar","forEach","n","impar","totalImpar","total","JogoComponent","gerarNumerosAleatorios","gerarNumerosCartela","i","numeroCartela","includes","cartelas","cartela","selecionados","numbers","length","random","Math","floor","testarJogo","alert","JSON","stringify","LotofacilService","http","naoSorteado","console","log","env","apipath","get","baseNoUltimo","aleatorio","fechamento","filtro","parametros","HttpParams","set","total_numeros_fechamento","para_acertar","numeros_fechamento","geracao_numeros","params","factory","Éµfac","NaoSorteadoComponent","service","gerarJogo","mostrarNovo","subscribe","next","response","Jogo","error","erro","DicasComponent","FerramentasComponent","TiposJogos","tipo","titulo","descricao","rota","cor","GeradorComponent","cardsJogos","routes","path","redirectTo","pathMatch","component","ResultadoComponent","buscarOutroResultado","concurso","gerarListaConcursos","resultado","resultados","lista","ctx","children","TabelasComponent","LotofacilModule","CommonModule","RouterModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./src/app/modules/loterias/lotofacil/components/base-ultimo/base-ultimo.component.ts","./src/app/modules/loterias/lotofacil/components/base-ultimo/base-ultimo.component.html","./src/app/modules/loterias/lotofacil/components/fechamento/fechamento.component.ts","./src/app/modules/loterias/lotofacil/components/fechamento/fechamento.component.html","./src/app/shared/components/loteria/header-title/header-title.component.ts","./src/app/shared/components/loteria/header-title/header-title.component.html","./src/app/shared/components/loteria/cartela/cartela.component.html","./src/app/shared/components/loteria/cartela/cartela.component.ts","./src/app/modules/loterias/lotofacil/components/jogo/jogo.component.html","./src/app/modules/loterias/lotofacil/components/jogo/jogo.component.ts","./src/app/modules/loterias/lotofacil/api/lotofacil.service.ts","./src/app/modules/loterias/lotofacil/components/nao-sorteado/nao-sorteado.component.html","./src/app/modules/loterias/lotofacil/components/nao-sorteado/nao-sorteado.component.ts","./src/app/modules/loterias/lotofacil/containers/dicas/dicas.component.ts","./src/app/modules/loterias/lotofacil/containers/dicas/dicas.component.html","./src/app/modules/loterias/lotofacil/containers/ferramentas/ferramentas.component.ts","./src/app/modules/loterias/lotofacil/containers/ferramentas/ferramentas.component.html","./src/app/modules/loterias/lotofacil/containers/gerador/tiposJogos.ts","./src/app/modules/loterias/lotofacil/containers/gerador/gerador.component.html","./src/app/modules/loterias/lotofacil/containers/gerador/gerador.component.ts","./src/app/modules/loterias/lotofacil/containers/resultado/resultado.component.html","./src/app/modules/loterias/lotofacil/lotofacil.module.ts","./src/app/modules/loterias/lotofacil/containers/resultado/resultado.component.ts","./src/app/modules/loterias/lotofacil/containers/tabelas/tabelas.component.ts","./src/app/modules/loterias/lotofacil/containers/tabelas/tabelas.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-base-ultimo',\n  templateUrl: './base-ultimo.component.html',\n  styleUrls: ['./base-ultimo.component.scss']\n})\nexport class BaseUltimoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>base-ultimo works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fechamento',\n  templateUrl: './fechamento.component.html',\n  styleUrls: ['./fechamento.component.scss']\n})\nexport class FechamentoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>fechamento works!</p>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ETipoJogo } from 'app/shared/models/interface.model';\n\n@Component({\n  selector: 'app-header-title',\n  templateUrl: './header-title.component.html',\n  styleUrls: ['./header-title.component.scss'],\n})\nexport class HeaderTitleComponent implements OnInit {\n  @Input('jogo') jogo: ETipoJogo = ETipoJogo.LOTOFACIL;\n  @Input('titulo') titulo = 'LotofÃ¡cil';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<!-- Header -->\n<div class=\"relative flex-0 py-5 overflow-hidden bg-{{jogo}}-100\">\n  <!-- Background - @formatter:off -->\n  <!-- Rings -->\n  <svg class=\"absolute inset-0 pointer-events-none\" viewBox=\"0 0 960 540\" width=\"100%\" height=\"100%\"\n    preserveAspectRatio=\"xMidYMax slice\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g class=\"text-gray-700 opacity-25\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"100\">\n      <circle r=\"234\" cx=\"196\" cy=\"23\"></circle>\n      <circle r=\"234\" cx=\"790\" cy=\"491\"></circle>\n    </g>\n  </svg>\n  <!-- @formatter:on -->\n  <div class=\"z-10 relative flex flex-col items-center\">\n    <div class=\"mt-1 text-4xl sm:text-7xl font-extrabold tracking-tight leading-tight text-center text-white\">\n      {{ titulo }}\n    </div>\n  </div>\n</div>","<!-- CARTELA -->\n<fuse-card\n  class=\"flex flex-col items-center  max-w-48 {{ numeroParaPuloDeLinha == 5 ? 'max-w-48' : 'max-w-90'}} p-3 bg-cartela border-{{jogo}}-200 border-2\">\n  <p class=\"flex flex-wrap w-full items-center justify-center\">\n    <ng-container *ngFor=\"let item of numerosCartela\">\n      <div\n        class=\"cursor-pointer item text-{{jogo}}-300 rounded-lg border border-{{jogo}}-200 {{item.selecionado ? classItemSelecionado : ''}} m-1 w-6 h-7 flex items-center justify-center text-base\"\n        [ngClass]=\"{'bg-white': !item.selecionado}\" (click)=\"adicionarRemoverNumero(item)\">\n        {{ item.numero }}\n      </div>\n      <div class=\"basis-[100%] h-0\" *ngIf=\"item.numero % numeroParaPuloDeLinha === 0\"></div>\n    </ng-container>\n  </p>\n  <p class=\"text-sm text-{{jogo}}-300 mt-3\">Par:{{par}} Impar:{{impar}} | Soma:{{total}}</p>\n</fuse-card>","import { Component, Input, OnInit } from '@angular/core';\nimport { INumerosCartela } from 'app/shared/models/interface.model';\n\n@Component({\n  selector: 'app-cartela',\n  templateUrl: './cartela.component.html',\n  styleUrls: ['./cartela.component.scss'],\n})\nexport class CartelaComponent implements OnInit {\n  @Input() jogo: string = 'lotofacil';\n  @Input() numerosCartela: INumerosCartela[] = [];\n\n  @Input() numerosSelecionados: number[] = [];\n\n  @Input('pulo') numeroParaPuloDeLinha: number = 5;\n\n  classItemSelecionado: string = '';\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.classItemSelecionado = 'bg-' + this.jogo + '-100 font-bold';\n  }\n\n  adicionarRemoverNumero(item: INumerosCartela): void {\n    const index = this.numerosCartela.findIndex((numero) => numero === item);\n    if (this.numerosCartela[index].selecionado) {\n      const indexOf = this.numerosSelecionados.indexOf(\n        this.numerosCartela[index].numero\n      );\n\n      if (indexOf !== -1) {\n        this.numerosSelecionados.splice(indexOf, 1);\n      }\n    }\n\n    if (!this.numerosCartela[index].selecionado) {\n      this.numerosSelecionados.push(this.numerosCartela[index].numero);\n    }\n\n    this.numerosCartela[index].selecionado =\n      !this.numerosCartela[index].selecionado;\n  }\n\n  get par(): number {\n    let totalPar: number = 0;\n    this.numerosSelecionados.forEach((n) => {\n      if (n % 2 === 0) totalPar += 1;\n    });\n\n    return totalPar;\n  }\n\n  get impar(): number {\n    let totalImpar: number = 0;\n    this.numerosSelecionados.forEach((n) => {\n      if (n % 2 !== 0) totalImpar += 1;\n    });\n\n    return totalImpar;\n  }\n\n  get total(): number {\n    let total: number = 0;\n    this.numerosSelecionados.forEach((n) => {\n      total += n;\n    });\n\n    return total;\n  }\n}\n","<div class=\"flex flex-col w-full\">\n  <div class=\"w-full inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n    <app-header-title titulo=\"Jogo Simples\" jogo=\"lotofacil\"></app-header-title>\n  </div>\n  <div class=\"p-2\">\n    <a mat-stroked-button routerLink=\"../\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_solid:arrow-sm-left'\"></mat-icon>\n        <span>Voltar</span>\n      </span>\n    </a>\n  </div>\n  <div class=\"flex flex-wrap\">\n\n\n    <ng-container *ngFor=\"let cartela of cartelas\">\n      <div class=\"p-4\">\n        <!-- CARTELA -->\n        <app-cartela [numerosCartela]=\"cartela.cartela\" [numerosSelecionados]=\"cartela.selecionados\"\n          pulo=\"5\"></app-cartela>\n\n        <!-- FIM CARTELA -->\n        <div class=\"flex w-48 justify-between\">\n          <button (click)=\"gerarNumerosAleatorios()\" class=\"hidden sm:inline-flex w-22 mt-3\" mat-stroked-button>\n            <span class=\"ml-2\">Novo</span>\n          </button>\n          <button (click)=\"testarJogo(cartela)\" class=\"hidden sm:inline-flex w-22 mt-3\" mat-stroked-button>\n            <span class=\"ml-2\">Testar</span>\n          </button>\n        </div>\n\n      </div>\n    </ng-container>\n\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ICartela, INumerosCartela } from 'app/shared/models/interface.model';\n\n@Component({\n  selector: 'app-jogo',\n  templateUrl: './jogo.component.html',\n  styleUrls: ['./jogo.component.scss'],\n})\nexport class JogoComponent implements OnInit {\n  numerosCartela: INumerosCartela[] = [];\n  numerosSelecionados: number[] = [];\n\n  cartelas: ICartela[] = [];\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.gerarNumerosAleatorios();\n  }\n\n  gerarNumerosCartela(): void {\n    this.numerosCartela = [];\n    for (let i = 1; i < 26; i++) {\n      let numeroCartela: INumerosCartela = {\n        numero: i,\n        selecionado: false,\n      };\n      numeroCartela.selecionado = this.numerosSelecionados.includes(i);\n      this.numerosCartela.push(numeroCartela);\n    }\n\n    this.cartelas.push({\n      cartela: this.numerosCartela,\n      selecionados: this.numerosSelecionados,\n    });\n  }\n\n  gerarNumerosAleatorios(): void {\n    this.cartelas = [];\n    let numbers: number[] = [];\n\n    while (numbers.length < 15) {\n      let random = Math.floor(Math.random() * 25) + 1;\n\n      if (!numbers.includes(random)) {\n        numbers.push(random);\n      }\n    }\n    this.numerosSelecionados = numbers;\n    this.gerarNumerosCartela();\n  }\n\n  testarJogo(cartela: ICartela) {\n    alert(`NÃ£o implementado ${JSON.stringify(cartela.selecionados)}`);\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment as env } from 'environments/environment';\nimport { Observable } from 'rxjs';\nimport {\n  IFiltroFechamento,\n  IJogo,\n  IResponseBaseUltimo,\n  IResponseFechamento,\n} from '../models/lotofacil.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LotofacilService {\n  readonly apipath = '/lotofacil';\n\n  constructor(private http: HttpClient) {}\n\n  naoSorteado(): Observable<IJogo> {\n    console.log(`${env.apiJogos}${this.apipath}/nao-sorteado`);\n    return this.http.get<IJogo>(`${env.apiJogos}${this.apipath}/nao-sorteado`);\n  }\n\n  baseNoUltimo(): Observable<IResponseBaseUltimo> {\n    return this.http.get<IResponseBaseUltimo>(\n      `${env.apiJogos}${this.apipath}/base-ultimo`\n    );\n  }\n\n  aleatorio(): Observable<IJogo> {\n    return this.http.get<IJogo>(`${env.apiJogos}${this.apipath}/base-ultimo`);\n  }\n\n  fechamento(filtro: IFiltroFechamento): Observable<IResponseFechamento> {\n    const parametros = new HttpParams()\n      .set('total_numeros_fechamento', filtro.total_numeros_fechamento)\n      .set('para_acertar', filtro.para_acertar)\n      .set('numeros_fechamento', filtro.numeros_fechamento)\n      .set('geracao_numeros', filtro.geracao_numeros);\n\n    return this.http.get<IResponseFechamento>(\n      `${env.apiJogos}${this.apipath}/fechamento`,\n      {\n        params: parametros,\n      }\n    );\n  }\n}\n","<div class=\"flex flex-col w-full\">\n  <div class=\"w-full inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n    <app-header-title titulo=\"Jogo Simples\" jogo=\"lotofacil\"></app-header-title>\n  </div>\n  <div class=\"p-2 w-full flex justify-between\">\n    <a mat-stroked-button routerLink=\"../\" class=\"mr-2\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_solid:arrow-sm-left'\"></mat-icon>\n        <span>Voltar</span>\n      </span>\n    </a>\n    <button mat-stroked-button (click)=\"gerarJogo()\" *ngIf=\"mostrarNovo\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n        <span class=\"ml-2\">Novo</span>\n      </span>\n    </button>\n  </div>\n  <div class=\"flex flex-wrap\">\n\n\n    <ng-container *ngFor=\"let cartela of cartelas\">\n      <div class=\"p-4\">\n        <!-- CARTELA -->\n        <app-cartela [numerosCartela]=\"cartela.cartela\" [numerosSelecionados]=\"cartela.selecionados\"\n          pulo=\"5\"></app-cartela>\n\n        <!-- FIM CARTELA -->\n        <!-- <div class=\"flex w-48 justify-between\">\n\n          <button (click)=\"testarJogo(cartela)\" class=\"hidden sm:inline-flex w-22 mt-3\" mat-stroked-button>\n            <span class=\"ml-2\">Testar</span>\n          </button>\n        </div> -->\n\n      </div>\n    </ng-container>\n\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ICartela, INumerosCartela } from 'app/shared/models/interface.model';\nimport { LotofacilService } from '../../api/lotofacil.service';\n\n@Component({\n  selector: 'app-nao-sorteado',\n  templateUrl: './nao-sorteado.component.html',\n  styleUrls: ['./nao-sorteado.component.scss'],\n})\nexport class NaoSorteadoComponent implements OnInit {\n  numerosCartela: INumerosCartela[] = [];\n  numerosSelecionados: number[] = [];\n\n  cartelas: ICartela[] = [];\n\n  mostrarNovo = true;\n\n  constructor(private service: LotofacilService) {}\n\n  ngOnInit(): void {\n    this.gerarJogo();\n  }\n\n  gerarJogo(): void {\n    this.mostrarNovo = false;\n    this.service.naoSorteado().subscribe({\n      next: (response) => {\n        this.mostrarNovo = true;\n        this.numerosSelecionados = response.Jogo;\n        this.gerarNumerosCartela();\n      },\n      error: (erro) => {\n        this.mostrarNovo = true;\n      },\n    });\n  }\n\n  gerarNumerosCartela(): void {\n    this.numerosCartela = [];\n    for (let i = 1; i < 26; i++) {\n      let numeroCartela: INumerosCartela = {\n        numero: i,\n        selecionado: false,\n      };\n      numeroCartela.selecionado = this.numerosSelecionados.includes(i);\n      this.numerosCartela.push(numeroCartela);\n    }\n\n    this.cartelas.push({\n      cartela: this.numerosCartela,\n      selecionados: this.numerosSelecionados,\n    });\n  }\n\n  testarJogo(cartela: ICartela) {\n    alert(`NÃ£o implementado ${JSON.stringify(cartela.selecionados)}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dicas',\n  templateUrl: './dicas.component.html',\n  styleUrls: ['./dicas.component.scss']\n})\nexport class DicasComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n  <app-header-title titulo=\"Dicas\" jogo=\"lotofacil\"></app-header-title>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ferramentas',\n  templateUrl: './ferramentas.component.html',\n  styleUrls: ['./ferramentas.component.scss']\n})\nexport class FerramentasComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n  <app-header-title titulo=\"Ferramentas\" jogo=\"lotofacil\"></app-header-title>\n</div>","import { ITipoCardJogos } from 'app/shared/models/interface.model';\n\nexport const TiposJogos: ITipoCardJogos[] = [\n  {\n    tipo: 'AleatÃ³rio sem regras',\n    titulo: 'Jogo Simples',\n    descricao:\n      'Gerar um jogos simples sem levar em consideraÃ§Ã£o nenhum tipo de regra!',\n    rota: 'aleatorio',\n    cor: 'lotofacil',\n  },\n  {\n    tipo: 'Nunca Sorteado',\n    titulo: 'Com base nos ultimos sorteios',\n    descricao:\n      'Gerar um jogos simples aleatÃ³rio validando se o mesmo nunca foi sorteado anteriormente!',\n    rota: 'nao-sorteado',\n    cor: 'lotofacil',\n  },\n  {\n    tipo: 'Base ultimo sorteio',\n    titulo: 'Jogo feito de acordo com numeros do ultimo sorteio',\n    descricao: 'Gerar 6 jogos simples com base no resultado do ultimo sorteio!',\n    rota: 'base-ultimo',\n    cor: 'lotofacil',\n  },\n  {\n    tipo: 'Fechamentos',\n    titulo: 'Fechamentos para diminuir o numero de jogos!',\n    descricao:\n      'Gerar vÃ¡rios jogos com base no numeros selecionados, fazendo um fechamento para garantir um numero mÃ­nimo de acerto com base nas bolas sorteadas!',\n    rota: 'fechamento',\n    cor: 'lotofacil',\n  },\n];\n","<div class=\"flex flex-col w-full\">\n  <div class=\"w-full inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n    <app-header-title titulo=\"Gerador\" jogo=\"lotofacil\"></app-header-title>\n  </div>\n\n  <div class=\"grid grid-cols-1 sm:grid-cols-3 lg:grid-cols-4 gap-8 mt-8 sm:mt-10 p-3\">\n\n    <ng-container *ngFor=\"let item of cardsJogos\">\n      <div class=\"flex flex-col shadow rounded-2xl overflow-hidden bg-card\">\n        <div class=\"flex flex-col p-6\">\n          <div class=\"flex items-center justify-between\">\n            <!-- Course category -->\n            <div class=\"py-0.5 px-3 rounded-full text-sm font-semibold text-white bg-{{item.cor}}-100\">\n              {{ item.tipo }}\n            </div>\n            <!-- Completed at least once -->\n            <div class=\"flex items-center\">\n              <mat-icon class=\"icon-size-5 text-green-600\" [svgIcon]=\"'heroicons_solid:badge-check'\"></mat-icon>\n            </div>\n          </div>\n          <!-- Course title & description -->\n          <div class=\"mt-4 text-lg font-medium\">{{ item.titulo }}</div>\n          <div class=\"mt-0.5 text-secondary\">{{ item.descricao }}</div>\n          <div class=\"w-full h-1 my-6 border-t-2\"></div>\n          <!-- Course time -->\n          <div class=\"flex flex-col w-full mt-auto\">\n            <!-- Course launch button -->\n\n            <a mat-stroked-button [routerLink]=\"item.rota\">\n              <span class=\"inline-flex items-center\">\n                <!-- Started -->\n                <span>Gerar</span>\n\n                <mat-icon class=\"ml-1.5 icon-size-5\" [svgIcon]=\"'heroicons_solid:arrow-sm-right'\"></mat-icon>\n              </span>\n            </a>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ITipoCardJogos } from 'app/shared/models/interface.model';\nimport { TiposJogos } from './tiposJogos';\n\n@Component({\n  selector: 'app-gerador',\n  templateUrl: './gerador.component.html',\n  styleUrls: ['./gerador.component.scss'],\n})\nexport class GeradorComponent implements OnInit {\n  cardsJogos: ITipoCardJogos[] = [];\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.cardsJogos = TiposJogos;\n  }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n  <app-header-loteria titulo=\"LotofÃ¡cil\" jogo=\"lotofacil\" [concurso]=\"concurso\"\n    (ultimo)=\"gerarListaConcursos($event)\"></app-header-loteria>\n  <div class=\"flex flex-auto flex-col p-6 z-10\">\n    <div class=\"flex w-full\">\n      <!-- Filters -->\n      <div class=\"flex flex-col sm:flex-row items-center justify-between w-full\">\n        <mat-form-field class=\"w-full sm:w-44\">\n          <mat-select [value]=\"'latest'\" (selectionChange)=\"buscarOutroResultado($event.value)\">\n            <mat-option [value]=\"'latest'\">Ãltimo</mat-option>\n            <ng-container *ngFor=\"let resultado of resultados\">\n              <mat-option [value]=\"resultado\">{{ resultado }}</mat-option>\n            </ng-container>\n          </mat-select>\n        </mat-form-field>\n        <h1>Estimativa prÃ³ximo prÃªmio: <strong>{{ resultado.acumuladaProxConcurso }}</strong></h1>\n        <h1>Acumulou: <strong>{{ resultado.acumulou ? 'Sim' : 'NÃ£o' }}</strong></h1>\n      </div>\n    </div>\n    <app-tabela-resultado [resultado]=\"resultado\"></app-tabela-resultado>\n  </div>\n</div>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { BaseUltimoComponent } from './components/base-ultimo/base-ultimo.component';\nimport { FechamentoComponent } from './components/fechamento/fechamento.component';\nimport { JogoComponent } from './components/jogo/jogo.component';\nimport { NaoSorteadoComponent } from './components/nao-sorteado/nao-sorteado.component';\nimport { DicasComponent } from './containers/dicas/dicas.component';\nimport { FerramentasComponent } from './containers/ferramentas/ferramentas.component';\nimport { GeradorComponent } from './containers/gerador/gerador.component';\nimport { ResultadoComponent } from './containers/resultado/resultado.component';\nimport { TabelasComponent } from './containers/tabelas/tabelas.component';\n\nconst routes: Route[] = [\n  { path: '', redirectTo: 'resultado', pathMatch: 'full' },\n  { path: 'resultado', component: ResultadoComponent },\n  {\n    path: 'gerador',\n    children: [\n      { path: '', component: GeradorComponent },\n      { path: 'aleatorio', component: JogoComponent },\n      { path: 'nao-sorteado', component: NaoSorteadoComponent },\n      { path: 'fechamento', component: FechamentoComponent },\n      { path: 'base-ultimo', component: BaseUltimoComponent },\n    ],\n  },\n\n  { path: 'tabelas', component: TabelasComponent },\n  { path: 'dicas', component: DicasComponent },\n  { path: 'ferramentas', component: FerramentasComponent },\n];\n\n@NgModule({\n  declarations: [\n    DicasComponent,\n    FerramentasComponent,\n    TabelasComponent,\n    GeradorComponent,\n    ResultadoComponent,\n    JogoComponent,\n    NaoSorteadoComponent,\n    FechamentoComponent,\n    BaseUltimoComponent,\n  ],\n  imports: [CommonModule, RouterModule.forChild(routes), SharedModule],\n})\nexport class LotofacilModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { IResultado } from 'app/shared/models/interface.model';\n\n@Component({\n  selector: 'app-resultado',\n  templateUrl: './resultado.component.html',\n  styleUrls: ['./resultado.component.scss'],\n})\nexport class ResultadoComponent implements OnInit {\n  concurso = 'latest';\n\n  resultados = [];\n\n  resultado: IResultado = {} as IResultado;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  buscarOutroResultado(concurso: string): void {\n    this.concurso = concurso;\n  }\n\n  gerarListaConcursos(resultado: IResultado): void {\n    this.resultado = resultado;\n\n    if (this.resultados.length > 0) return;\n\n    let lista = [];\n\n    for (let i = resultado.concurso; i >= 1; i--) {\n      lista.push(i);\n    }\n\n    this.resultados = lista;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tabelas',\n  templateUrl: './tabelas.component.html',\n  styleUrls: ['./tabelas.component.scss']\n})\nexport class TabelasComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n  <app-header-title titulo=\"Tabelas\" jogo=\"lotofacil\"></app-header-title>\n</div>"],"x_google_ignoreList":[]}