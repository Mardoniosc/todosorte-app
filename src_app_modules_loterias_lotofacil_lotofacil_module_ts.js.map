{"version":3,"file":"src_app_modules_loterias_lotofacil_lotofacil_module_ts.js","mappings":"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","sources":["./src/app/modules/loterias/lotofacil/api/lotofacil.service.ts","./src/app/modules/loterias/lotofacil/components/base-ultimo/base-ultimo.component.ts","./src/app/modules/loterias/lotofacil/components/base-ultimo/base-ultimo.component.html","./src/app/modules/loterias/lotofacil/components/fechamento/fechamento.component.ts","./src/app/modules/loterias/lotofacil/components/fechamento/fechamento.component.html","./src/app/modules/loterias/lotofacil/components/jogo/jogo.component.ts","./src/app/modules/loterias/lotofacil/components/jogo/jogo.component.html","./src/app/modules/loterias/lotofacil/components/nao-sorteado/nao-sorteado.component.ts","./src/app/modules/loterias/lotofacil/components/nao-sorteado/nao-sorteado.component.html","./src/app/modules/loterias/lotofacil/containers/dicas/dicas.component.ts","./src/app/modules/loterias/lotofacil/containers/dicas/dicas.component.html","./src/app/modules/loterias/lotofacil/containers/ferramentas/ferramentas.component.ts","./src/app/modules/loterias/lotofacil/containers/ferramentas/ferramentas.component.html","./src/app/modules/loterias/lotofacil/containers/gerador/gerador.component.ts","./src/app/modules/loterias/lotofacil/containers/gerador/gerador.component.html","./src/app/modules/loterias/lotofacil/containers/gerador/tiposJogos.ts","./src/app/modules/loterias/lotofacil/containers/resultado/resultado.component.ts","./src/app/modules/loterias/lotofacil/containers/resultado/resultado.component.html","./src/app/modules/loterias/lotofacil/containers/tabelas/tabelas.component.ts","./src/app/modules/loterias/lotofacil/containers/tabelas/tabelas.component.html","./src/app/modules/loterias/lotofacil/lotofacil.module.ts","./src/app/modules/loterias/lotofacil/models/lotofacil.model.ts","./src/app/modules/loterias/lotofacil/state/lotofacil-resultados.state.ts","./src/app/shared/services/jogos.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment as env } from 'environments/environment';\nimport { Observable } from 'rxjs';\nimport {\n  IFiltroFechamento,\n  IJogo,\n  IResponseBaseUltimo,\n  IResponseFechamento,\n} from '../models/lotofacil.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LotofacilService {\n  readonly apipath = '/lotofacil';\n\n  constructor(private http: HttpClient) {}\n\n  naoSorteado(): Observable<IJogo> {\n    return this.http.get<IJogo>(`${env.apiJogos}${this.apipath}/nao-sorteado`);\n  }\n\n  baseNoUltimo(): Observable<IResponseBaseUltimo> {\n    return this.http.get<IResponseBaseUltimo>(\n      `${env.apiJogos}${this.apipath}/base-ultimo`\n    );\n  }\n\n  aleatorio(): Observable<IJogo> {\n    return this.http.get<IJogo>(`${env.apiJogos}${this.apipath}/base-ultimo`);\n  }\n\n  fechamento(filtro: IFiltroFechamento): Observable<IResponseFechamento> {\n    const parametros = new HttpParams()\n      .set('total_numeros_fechamento', filtro.total_numeros_fechamento)\n      .set('para_acertar', filtro.para_acertar)\n      .set('acertando', filtro.acertando)\n      .set('geracao_numeros', filtro.geracao_numeros)\n      .set('numeros_fechamento', filtro.numeros_fechamento);\n\n    return this.http.get<IResponseFechamento>(\n      `${env.apiJogos}${this.apipath}/fechamento`,\n      {\n        params: parametros,\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  ICartela,\n  INumerosCartela,\n  IRequestJogos,\n} from 'app/shared/models/interface.model';\nimport { ESessionLoteria } from 'app/shared/models/sessionstorage.model';\nimport { JogosService } from 'app/shared/services/jogos.service';\nimport { LotofacilService } from '../../api/lotofacil.service';\n\n@Component({\n  selector: 'app-base-ultimo',\n  templateUrl: './base-ultimo.component.html',\n  styleUrls: ['./base-ultimo.component.scss'],\n})\nexport class BaseUltimoComponent implements OnInit {\n  numerosCartela: INumerosCartela[] = [];\n\n  cartelas: ICartela[] = [];\n\n  mostrarNovo = true;\n\n  concursoBase: number = 0;\n\n  constructor(\n    private service: LotofacilService,\n    private jogosService: JogosService\n  ) {}\n\n  ngOnInit(): void {\n    this.gerarJogo();\n  }\n\n  gerarJogo(): void {\n    this.cartelas = [];\n    this.mostrarNovo = false;\n\n    if (\n      sessionStorage.getItem(\n        ESessionLoteria.RESULTADO_ULTIMO + 'lotofacilBaseUltimo'\n      )\n    ) {\n      let resultado = JSON.parse(\n        sessionStorage.getItem(\n          ESessionLoteria.RESULTADO_ULTIMO + 'lotofacilBaseUltimo'\n        )\n      );\n\n      this.mostrarNovo = true;\n      this.concursoBase = resultado.concurso_base;\n      resultado.jogos.forEach((jogo) => {\n        this.gerarNumerosCartela(jogo);\n      });\n\n      return;\n    }\n\n    this.service.baseNoUltimo().subscribe({\n      next: (response) => {\n        sessionStorage.setItem(\n          ESessionLoteria.RESULTADO_ULTIMO + 'lotofacilBaseUltimo',\n          JSON.stringify(response)\n        );\n        this.mostrarNovo = true;\n        this.concursoBase = response.concurso_base;\n        response.jogos.forEach((jogo) => {\n          this.gerarNumerosCartela(jogo);\n        });\n      },\n      error: (erro) => {\n        this.mostrarNovo = true;\n      },\n    });\n  }\n\n  gerarNumerosCartela(jogo: number[]): void {\n    this.numerosCartela = [];\n    for (let i = 1; i < 26; i++) {\n      let numeroCartela: INumerosCartela = {\n        numero: i,\n        selecionado: false,\n      };\n      numeroCartela.selecionado = jogo.includes(i);\n      this.numerosCartela.push(numeroCartela);\n    }\n\n    this.cartelas.push({\n      cartela: this.numerosCartela,\n      selecionados: jogo,\n    });\n  }\n\n  baixarJogos(): void {\n    let requestJogos: IRequestJogos = {\n      cartela: [],\n    };\n\n    this.cartelas.forEach((car) => {\n      requestJogos.cartela.push(car.selecionados);\n    });\n\n    this.jogosService.getJogosTXT(requestJogos).subscribe({\n      next: (response) =>\n        this.jogosService.download('lotofacil-base-ultimo.txt', response),\n      error: (erro) => console.log(erro),\n    });\n  }\n}\n","<div class=\"flex flex-col w-full\">\n  <div class=\"w-full inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n    <app-header-title titulo=\"Base ultimo sorteio\"\n      sub-titulo=\"Gerar 6 jogos simples com base no resultado do ultimo sorteio!\" jogo=\"lotofacil\"></app-header-title>\n  </div>\n  <div class=\"p-2 w-full flex items-center justify-between flex-wrap\">\n    <a mat-stroked-button routerLink=\"../\" class=\"mr-2 my-2 w-40\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_solid:arrow-sm-left'\"></mat-icon>\n        <span>Voltar</span>\n      </span>\n    </a>\n    <p class=\"my-2 w-40 border border-lotofacil-200 p-2 rounded-full text-center\">Concurso: {{ concursoBase }}</p>\n    <button class=\"my-2 w-40\" mat-stroked-button (click)=\"baixarJogos()\" *ngIf=\"mostrarNovo\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n        <span class=\"ml-2\">Baixar Jogos</span>\n      </span>\n    </button>\n    <button class=\"my-2 w-40\" mat-stroked-button (click)=\"gerarJogo()\" *ngIf=\"mostrarNovo\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n        <span class=\"ml-2\">Novo</span>\n      </span>\n    </button>\n  </div>\n  <div class=\"flex flex-wrap\">\n    <ng-container *ngFor=\"let cartela of cartelas\">\n      <div class=\"p-4\">\n        <!-- CARTELA -->\n        <app-cartela [numerosCartela]=\"cartela.cartela\" [numerosSelecionados]=\"cartela.selecionados\"\n          pulo=\"5\"></app-cartela>\n      </div>\n    </ng-container>\n\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {\n  ICartela,\n  INumerosCartela,\n  IRequestJogos,\n} from 'app/shared/models/interface.model';\nimport { JogosService } from 'app/shared/services/jogos.service';\nimport toastr from 'toastr';\nimport { LotofacilService } from '../../api/lotofacil.service';\nimport { ETipoGeracao, IFiltroFechamento } from '../../models/lotofacil.model';\n\n@Component({\n  selector: 'app-fechamento',\n  templateUrl: './fechamento.component.html',\n  styleUrls: ['./fechamento.component.scss'],\n})\nexport class FechamentoComponent implements OnInit {\n  numerosCartela: INumerosCartela[] = [];\n  numerosSelecionados: number[] = [];\n\n  totalDeJogos = 0;\n\n  cartela: ICartela;\n  cartelas: ICartela[] = [];\n\n  mostrarNovo = true;\n\n  paraFazer = [11, 12, 13, 14, 15];\n  acertando = [14, 15];\n\n  paraFazerSelecionado: number = 14;\n  acertandoSelecionado: number = 15;\n\n  constructor(\n    private _lotofacilService: LotofacilService,\n    private jogosService: JogosService\n  ) {}\n\n  ngOnInit(): void {\n    this.gerarNumerosCartela();\n  }\n\n  gerarNumerosCartela(): void {\n    this.numerosCartela = [];\n    for (let i = 1; i < 26; i++) {\n      let numeroCartela: INumerosCartela = {\n        numero: i,\n        selecionado: false,\n      };\n      numeroCartela.selecionado = this.numerosSelecionados.includes(i);\n      this.numerosCartela.push(numeroCartela);\n    }\n\n    this.cartela = {\n      cartela: this.numerosCartela,\n      selecionados: [],\n    };\n  }\n\n  gerarNumerosCartelaFechamento(numerosSelecionados: any): ICartela {\n    let cartela: ICartela = {\n      cartela: [],\n      selecionados: [],\n    };\n    for (let i = 1; i < 26; i++) {\n      let numeroCartela: INumerosCartela = {\n        numero: i,\n        selecionado: false,\n      };\n      numeroCartela.selecionado = numerosSelecionados.includes(i);\n      cartela.cartela.push(numeroCartela);\n    }\n\n    return cartela;\n  }\n\n  gerarFechamento(): void {\n    let total = this.numerosSelecionados.length;\n\n    if (total < 16) {\n      toastr.info('Você deve selecionar no minimo 16 números para fechamento!');\n      return;\n    }\n\n    let filtro: IFiltroFechamento = {\n      para_acertar: this.paraFazerSelecionado,\n      acertando: this.acertandoSelecionado,\n      numeros_fechamento: this.numerosSelecionados.toString(),\n      total_numeros_fechamento: total,\n      geracao_numeros: ETipoGeracao.ESCOLHER_NUMEROS,\n    };\n\n    this._lotofacilService.fechamento(filtro).subscribe({\n      next: (resultado) => {\n        this.totalDeJogos = resultado.Total;\n        resultado.Jogos.forEach((jogo) => {\n          let novo: ICartela = this.gerarNumerosCartelaFechamento(jogo);\n          this.cartelas.push(novo);\n        });\n      },\n      error: (erro) => console.log(erro),\n    });\n  }\n\n  selecionados(numeros: number[]): void {\n    this.numerosSelecionados = numeros;\n  }\n\n  baixarJogos(): void {\n    let requestJogos: IRequestJogos = {\n      cartela: [],\n    };\n\n    this.cartelas.forEach((car) => {\n      let selecionados: number[] = [];\n      car.cartela.forEach((n) => {\n        if (n.selecionado) selecionados.push(n.numero);\n      });\n      requestJogos.cartela.push(selecionados);\n    });\n\n    this.jogosService.getJogosTXT(requestJogos).subscribe({\n      next: (response) =>\n        this.jogosService.download(\n          `JOGOS_SE${this.acertandoSelecionado}_${this.paraFazerSelecionado}.txt`,\n          response\n        ),\n      error: (erro) => console.log(erro),\n    });\n  }\n}\n","<div class=\"flex flex-col w-full\">\n  <div class=\"w-full inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n    <!-- <app-header-title titulo=\"Fechamentos\"\n      sub-titulo=\"Gerar vários jogos com base no numeros selecionados, fazendo um fechamento para garantir um numero mínimo de acerto com base nas bolas sorteadas!\"\n      jogo=\"lotofacil\"></app-header-title> -->\n  </div>\n  <div class=\"p-2 w-full flex items-center justify-between flex-wrap\">\n    <a mat-stroked-button routerLink=\"../\" class=\"mr-2 my-2 w-40\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_solid:arrow-sm-left'\"></mat-icon>\n        <span>Voltar</span>\n      </span>\n    </a>\n    <p class=\"my-2 w-40 border border-lotofacil-200 p-2 rounded-full text-center\" *ngIf=\"totalDeJogos > 0\">Total: {{\n      totalDeJogos }}</p>\n    <button class=\"my-2 w-40\" mat-stroked-button (click)=\"baixarJogos()\" *ngIf=\"totalDeJogos > 0\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n        <span class=\"ml-2\">Baixar Jogos</span>\n      </span>\n    </button>\n    <button class=\"my-2 w-40\" mat-stroked-button (click)=\"gerarFechamento()\" *ngIf=\"numerosSelecionados.length > 1\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n        <span class=\"ml-2\">Gerar</span>\n      </span>\n    </button>\n  </div>\n  <!-- Main -->\n  <div class=\"flex flex-wrap\">\n    <div class=\"p-4\">\n      <p class=\"text-xl text-secondary my-2\">Para fazer</p>\n      <div class=\"flex flex-row rounded-xl bg-gray-200 p-2\">\n        <ng-container *ngFor=\"let item of paraFazer\">\n          <div class=\"w-15\">\n            <input type=\"radio\" [(ngModel)]=\"paraFazerSelecionado\" name=\"para_fazer\" id=\"pf{{item}}\" [value]=\"item\"\n              class=\"peer hidden\" />\n            <label for=\"pf{{item}}\"\n              class=\"block cursor-pointer select-none rounded-xl p-2 text-center peer-checked:bg-blue-500 peer-checked:font-bold peer-checked:text-white\">{{item}}</label>\n          </div>\n        </ng-container>\n\n\n      </div>\n    </div>\n    <div class=\"p-4\">\n      <p class=\"text-xl text-secondary my-2\">Acertando</p>\n      <div class=\"flex flex-row rounded-xl bg-gray-200 p-2\">\n        <ng-container *ngFor=\"let item of acertando\">\n          <div class=\"w-15\">\n            <input type=\"radio\" [(ngModel)]=\"acertandoSelecionado\" name=\"acertando\" [id]=\"item\" [value]=\"item\"\n              class=\"peer hidden\" />\n            <label [for]=\"item\"\n              class=\"block cursor-pointer select-none rounded-xl p-2 text-center peer-checked:bg-blue-500 peer-checked:font-bold peer-checked:text-white\">{{item}}</label>\n          </div>\n        </ng-container>\n\n      </div>\n    </div>\n    <div class=\"p-4\">\n      <p class=\"text-xl text-secondary my-2\">Total Selecionado: {{ numerosSelecionados.length }}</p>\n    </div>\n  </div>\n\n  <div class=\"flex flex-wrap\">\n    <div class=\"p-4\">\n      <div class=\"text-xl text-secondary\">Selecione os numeros para fechamento</div>\n      <app-cartela [numerosCartela]=\"cartela?.cartela\" (selecionados)=\"selecionados($event)\" pulo=\"5\"></app-cartela>\n    </div>\n  </div>\n\n  <div class=\"my-4 border-b\" *ngIf=\"cartelas.length\"></div>\n  <div class=\"flex flex-wrap\" *ngIf=\"cartelas.length\">\n    <div class=\"p-4\">\n      <div class=\"text-xl text-secondary\">Lista de Jogos gerados</div>\n    </div>\n    <div class=\"flex flex-wrap\">\n      <ng-container *ngFor=\"let cartela of cartelas\">\n        <div class=\"p-4\">\n          <!-- CARTELA -->\n          <app-cartela [numerosCartela]=\"cartela.cartela\" [numerosSelecionados]=\"cartela.selecionados\"\n            pulo=\"5\"></app-cartela>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport {\n  ICartela,\n  INumerosCartela,\n  IRequestJogos,\n} from 'app/shared/models/interface.model';\nimport { JogosService } from 'app/shared/services/jogos.service';\n\n@Component({\n  selector: 'app-jogo',\n  templateUrl: './jogo.component.html',\n  styleUrls: ['./jogo.component.scss'],\n})\nexport class JogoComponent implements OnInit {\n  numerosCartela: INumerosCartela[] = [];\n  numerosSelecionados: number[] = [];\n\n  cartelas: ICartela[] = [];\n\n  mostrarNovo = true;\n\n  constructor(private jogosService: JogosService) {}\n\n  ngOnInit(): void {\n    this.gerarNumerosAleatorios();\n  }\n\n  gerarNumerosCartela(): void {\n    this.numerosCartela = [];\n    for (let i = 1; i < 26; i++) {\n      let numeroCartela: INumerosCartela = {\n        numero: i,\n        selecionado: false,\n      };\n      numeroCartela.selecionado = this.numerosSelecionados.includes(i);\n      this.numerosCartela.push(numeroCartela);\n    }\n\n    this.cartelas.push({\n      cartela: this.numerosCartela,\n      selecionados: this.numerosSelecionados,\n    });\n  }\n\n  gerarNumerosAleatorios(): void {\n    // this.cartelas = [];\n    let numbers: number[] = [];\n\n    while (numbers.length < 15) {\n      let random = Math.floor(Math.random() * 25) + 1;\n\n      if (!numbers.includes(random)) {\n        numbers.push(random);\n      }\n    }\n    this.numerosSelecionados = numbers;\n    this.gerarNumerosCartela();\n  }\n\n  testarJogo(cartela: ICartela) {\n    alert(`Não implementado ${JSON.stringify(cartela.selecionados)}`);\n  }\n\n  baixarJogos(): void {\n    let requestJogos: IRequestJogos = {\n      cartela: [],\n    };\n\n    this.cartelas.forEach((car) => {\n      requestJogos.cartela.push(car.selecionados);\n    });\n\n    this.jogosService.getJogosTXT(requestJogos).subscribe({\n      next: (response) =>\n        this.jogosService.download('lotofacil-base-ultimo.txt', response),\n      error: (erro) => console.log(erro),\n    });\n  }\n}\n","<div class=\"flex flex-col w-full\">\n  <div class=\"w-full inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n    <app-header-title titulo=\"Aleatório sem regras\"\n      sub-titulo=\"Gerar um jogos simples sem levar em consideração nenhum tipo de regra!\"\n      jogo=\"lotofacil\"></app-header-title>\n  </div>\n  <div class=\"p-2 w-full flex items-center justify-between flex-wrap\">\n    <a mat-stroked-button routerLink=\"../\" class=\"my-2 w-40\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_solid:arrow-sm-left'\"></mat-icon>\n        <span>Voltar</span>\n      </span>\n    </a>\n    <p class=\"my-2 w-40 border border-lotofacil-200 p-2 rounded-full text-center\">Total: {{ cartelas.length }}</p>\n    <button class=\"my-2 w-40\" mat-stroked-button (click)=\"baixarJogos()\" *ngIf=\"mostrarNovo\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n        <span class=\"ml-2\">Baixar Jogos</span>\n      </span>\n    </button>\n    <button class=\"my-2 w-40\" mat-stroked-button (click)=\"gerarNumerosAleatorios()\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n        <span class=\"ml-2\">Novo</span>\n      </span>\n    </button>\n  </div>\n  <div class=\"flex flex-wrap\">\n\n\n    <ng-container *ngFor=\"let cartela of cartelas\">\n      <div class=\"p-4\">\n        <!-- CARTELA -->\n        <app-cartela [numerosCartela]=\"cartela.cartela\" [numerosSelecionados]=\"cartela.selecionados\"\n          pulo=\"5\"></app-cartela>\n\n        <!-- FIM CARTELA -->\n        <div class=\"flex w-48 items-center justify-center\" *ngIf=\"false\">\n          <button (click)=\"testarJogo(cartela)\" class=\"hidden sm:inline-flex w-44 mt-3\" mat-stroked-button>\n            <span class=\"ml-2\">Testar</span>\n          </button>\n        </div>\n\n      </div>\n    </ng-container>\n\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {\n  ICartela,\n  INumerosCartela,\n  IRequestJogos,\n} from 'app/shared/models/interface.model';\nimport { JogosService } from 'app/shared/services/jogos.service';\nimport { LotofacilService } from '../../api/lotofacil.service';\n\n@Component({\n  selector: 'app-nao-sorteado',\n  templateUrl: './nao-sorteado.component.html',\n  styleUrls: ['./nao-sorteado.component.scss'],\n})\nexport class NaoSorteadoComponent implements OnInit {\n  numerosCartela: INumerosCartela[] = [];\n  numerosSelecionados: number[] = [];\n\n  cartelas: ICartela[] = [];\n\n  mostrarNovo = true;\n\n  constructor(\n    private service: LotofacilService,\n    private jogosService: JogosService\n  ) {}\n\n  ngOnInit(): void {\n    this.gerarJogo();\n  }\n\n  gerarJogo(): void {\n    this.mostrarNovo = false;\n    this.service.naoSorteado().subscribe({\n      next: (response) => {\n        this.mostrarNovo = true;\n        this.numerosSelecionados = response.Jogo;\n        this.gerarNumerosCartela();\n      },\n      error: (erro) => {\n        this.mostrarNovo = true;\n      },\n    });\n  }\n\n  gerarNumerosCartela(): void {\n    this.numerosCartela = [];\n    for (let i = 1; i < 26; i++) {\n      let numeroCartela: INumerosCartela = {\n        numero: i,\n        selecionado: false,\n      };\n      numeroCartela.selecionado = this.numerosSelecionados.includes(i);\n      this.numerosCartela.push(numeroCartela);\n    }\n\n    this.cartelas.push({\n      cartela: this.numerosCartela,\n      selecionados: this.numerosSelecionados,\n    });\n  }\n\n  testarJogo(cartela: ICartela) {\n    alert(`Não implementado ${JSON.stringify(cartela.selecionados)}`);\n  }\n\n  baixarJogos(): void {\n    let requestJogos: IRequestJogos = {\n      cartela: [],\n    };\n\n    this.cartelas.forEach((car) => {\n      requestJogos.cartela.push(car.selecionados);\n    });\n\n    this.jogosService.getJogosTXT(requestJogos).subscribe({\n      next: (response) =>\n        this.jogosService.download('lotofacil-base-ultimo.txt', response),\n      error: (erro) => console.log(erro),\n    });\n  }\n}\n","<div class=\"flex flex-col w-full\">\n  <div class=\"w-full inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n    <app-header-title titulo=\"Não Sorteado\"\n      sub-titulo=\"Gerar um jogos simples aleatório validando se o mesmo nunca foi sorteado anteriormente!\"\n      jogo=\"lotofacil\"></app-header-title>\n  </div>\n  <div class=\"p-2 w-full flex items-center justify-between flex-wrap\">\n    <a mat-stroked-button routerLink=\"../\" class=\"mr-2 my-2 w-40\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_solid:arrow-sm-left'\"></mat-icon>\n        <span>Voltar</span>\n      </span>\n    </a>\n    <p class=\"my-2 w-40 border border-lotofacil-200 p-2 rounded-full text-center\">Total: {{ cartelas.length }}</p>\n    <button class=\"my-2 w-40\" mat-stroked-button (click)=\"baixarJogos()\" *ngIf=\"mostrarNovo\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n        <span class=\"ml-2\">Baixar Jogos</span>\n      </span>\n    </button>\n    <button class=\"my-2 w-40\" mat-stroked-button (click)=\"gerarJogo()\" *ngIf=\"mostrarNovo\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n        <span class=\"ml-2\">Novo</span>\n      </span>\n    </button>\n  </div>\n  <div class=\"flex flex-wrap\">\n\n\n    <ng-container *ngFor=\"let cartela of cartelas\">\n      <div class=\"p-4\">\n        <!-- CARTELA -->\n        <app-cartela [numerosCartela]=\"cartela.cartela\" [numerosSelecionados]=\"cartela.selecionados\"\n          pulo=\"5\"></app-cartela>\n\n        <!-- FIM CARTELA -->\n        <!-- <div class=\"flex w-48 justify-between\">\n\n          <button (click)=\"testarJogo(cartela)\" class=\"hidden sm:inline-flex w-22 mt-3\" mat-stroked-button>\n            <span class=\"ml-2\">Testar</span>\n          </button>\n        </div> -->\n\n      </div>\n    </ng-container>\n\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dicas',\n  templateUrl: './dicas.component.html',\n  styleUrls: ['./dicas.component.scss']\n})\nexport class DicasComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n  <app-header-title titulo=\"Dicas\" jogo=\"lotofacil\"></app-header-title>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ferramentas',\n  templateUrl: './ferramentas.component.html',\n  styleUrls: ['./ferramentas.component.scss']\n})\nexport class FerramentasComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n  <app-header-title titulo=\"Ferramentas\" jogo=\"lotofacil\"></app-header-title>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ITipoCardJogos } from 'app/shared/models/interface.model';\nimport { TiposJogos } from './tiposJogos';\n\n@Component({\n  selector: 'app-gerador',\n  templateUrl: './gerador.component.html',\n  styleUrls: ['./gerador.component.scss'],\n})\nexport class GeradorComponent implements OnInit {\n  cardsJogos: ITipoCardJogos[] = [];\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.cardsJogos = TiposJogos;\n  }\n}\n","<div class=\"flex flex-col w-full\">\n  <div class=\"w-full inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n    <app-header-title titulo=\"Gerador\" jogo=\"lotofacil\"></app-header-title>\n  </div>\n\n  <div class=\"grid grid-cols-1 sm:grid-cols-3 lg:grid-cols-4 gap-8 mt-8 sm:mt-10 p-3\">\n\n    <ng-container *ngFor=\"let item of cardsJogos\">\n      <div class=\"flex flex-col shadow rounded-2xl overflow-hidden bg-card\">\n        <div class=\"flex flex-col p-6 justify-between h-full\">\n          <div class=\"flex items-center justify-between\">\n            <!-- Course category -->\n            <div class=\"py-0.5 px-3 rounded-full text-sm font-semibold text-white bg-{{item.cor}}-100\">\n              {{ item.tipo }}\n            </div>\n            <!-- Completed at least once -->\n            <div class=\"flex items-center\">\n              <mat-icon class=\"icon-size-5 text-green-600\" [svgIcon]=\"'heroicons_solid:badge-check'\"></mat-icon>\n            </div>\n          </div>\n          <!-- Course title & description -->\n          <div class=\"mt-4 text-lg font-medium\">{{ item.titulo }}</div>\n          <div class=\"mt-0.5 text-secondary\">{{ item.descricao }}</div>\n          <!-- Course time -->\n          <div class=\"flex flex-col w-full mt-auto\">\n            <div class=\"w-full h-1 my-6 border-t-2\"></div>\n            <!-- Course launch button -->\n\n            <a mat-stroked-button [routerLink]=\"item.rota\">\n              <span class=\"inline-flex items-center\">\n                <!-- Started -->\n                <span>Gerar</span>\n\n                <mat-icon class=\"ml-1.5 icon-size-5\" [svgIcon]=\"'heroicons_solid:arrow-sm-right'\"></mat-icon>\n              </span>\n            </a>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n\n  </div>\n</div>","import { ITipoCardJogos } from 'app/shared/models/interface.model';\n\nexport const TiposJogos: ITipoCardJogos[] = [\n  {\n    tipo: 'Aleatório sem regras',\n    titulo: 'Jogo Simples',\n    descricao:\n      'Gerar um jogos simples sem levar em consideração nenhum tipo de regra!',\n    rota: 'aleatorio',\n    cor: 'lotofacil',\n  },\n  {\n    tipo: 'Nunca Sorteado',\n    titulo: 'Com base nos ultimos sorteios',\n    descricao:\n      'Gerar um jogos simples aleatório validando se o mesmo nunca foi sorteado anteriormente!',\n    rota: 'nao-sorteado',\n    cor: 'lotofacil',\n  },\n  {\n    tipo: 'Base ultimo sorteio',\n    titulo: 'Jogo feito de acordo com numeros do ultimo sorteio',\n    descricao: 'Gerar 6 jogos simples com base no resultado do ultimo sorteio!',\n    rota: 'base-ultimo',\n    cor: 'lotofacil',\n  },\n  {\n    tipo: 'Fechamentos',\n    titulo: 'Fechamentos para diminuir o numero de jogos!',\n    descricao:\n      'Gerar vários jogos com base no numeros selecionados, fazendo um fechamento para garantir um numero mínimo de acerto com base nas bolas sorteadas!',\n    rota: 'fechamento',\n    cor: 'lotofacil',\n  },\n];\n","import { Component, OnInit } from '@angular/core';\nimport { IResultado } from 'app/shared/models/interface.model';\n\n@Component({\n  selector: 'app-resultado',\n  templateUrl: './resultado.component.html',\n  styleUrls: ['./resultado.component.scss'],\n})\nexport class ResultadoComponent implements OnInit {\n  concurso = 'latest';\n\n  resultados = [];\n\n  resultado: IResultado = {} as IResultado;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  buscarOutroResultado(concurso: string): void {\n    this.concurso = concurso;\n  }\n\n  gerarListaConcursos(resultado: IResultado): void {\n    this.resultado = resultado;\n\n    if (this.resultados.length > 0) return;\n\n    let lista = [];\n\n    for (let i = resultado.concurso; i >= 1; i--) {\n      lista.push(i);\n    }\n\n    this.resultados = lista;\n  }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n  <app-header-loteria titulo=\"Lotofácil\" jogo=\"lotofacil\" [concurso]=\"concurso\"\n    (ultimo)=\"gerarListaConcursos($event)\"></app-header-loteria>\n  <div class=\"flex flex-auto flex-col p-6 z-10\">\n    <div class=\"flex w-full\">\n      <!-- Filters -->\n      <div class=\"flex flex-col sm:flex-row items-center justify-between w-full\">\n        <mat-form-field class=\"w-full sm:w-44\">\n          <mat-select [value]=\"'latest'\" (selectionChange)=\"buscarOutroResultado($event.value)\">\n            <mat-option [value]=\"'latest'\">Último</mat-option>\n            <ng-container *ngFor=\"let resultado of resultados\">\n              <mat-option [value]=\"resultado\">{{ resultado }}</mat-option>\n            </ng-container>\n          </mat-select>\n        </mat-form-field>\n        <h1>Estimativa próximo prêmio: <strong>{{ resultado.valorEstimadoProximoConcurso | currency : 'R$ ' }}</strong>\n        </h1>\n        <h1>Acumulou: <strong>{{ resultado.acumulou ? 'Sim' : 'Não' }}</strong></h1>\n      </div>\n    </div>\n    <app-tabela-resultado [resultado]=\"resultado\"></app-tabela-resultado>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { IResultado } from 'app/shared/models/interface.model';\nimport { ResultadoService } from 'app/shared/services/resultado.service';\nimport { LotofacilResultadosState } from '../../state/lotofacil-resultados.state';\n\n@Component({\n  selector: 'app-tabelas',\n  templateUrl: './tabelas.component.html',\n  styleUrls: ['./tabelas.component.scss'],\n})\nexport class TabelasComponent implements OnInit {\n  resultados: IResultado[] = [];\n\n  constructor(\n    private _resultadoService: ResultadoService,\n    private _resultadosState: LotofacilResultadosState\n  ) {}\n\n  ngOnInit(): void {\n    this._carregaResultados();\n  }\n\n  _carregaResultados(): void {\n    console.log(this._resultadosState.resultados);\n    if (this._resultadosState.resultados.length > 0) {\n      this.resultados = this._resultadosState.resultados;\n      return;\n    }\n\n    this._resultadoService.getTodosResultados('lotofacil').subscribe({\n      next: (resultados) => {\n        this.resultados = resultados;\n        this._resultadosState.resultados = resultados;\n      },\n    });\n  }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n  <app-header-title titulo=\"Tabelas\" jogo=\"lotofacil\"></app-header-title>\n</div>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { BaseUltimoComponent } from './components/base-ultimo/base-ultimo.component';\nimport { FechamentoComponent } from './components/fechamento/fechamento.component';\nimport { JogoComponent } from './components/jogo/jogo.component';\nimport { NaoSorteadoComponent } from './components/nao-sorteado/nao-sorteado.component';\nimport { DicasComponent } from './containers/dicas/dicas.component';\nimport { FerramentasComponent } from './containers/ferramentas/ferramentas.component';\nimport { GeradorComponent } from './containers/gerador/gerador.component';\nimport { ResultadoComponent } from './containers/resultado/resultado.component';\nimport { TabelasComponent } from './containers/tabelas/tabelas.component';\nimport { LotofacilResultadosState } from './state/lotofacil-resultados.state';\n\nconst routes: Route[] = [\n  { path: '', redirectTo: 'resultado', pathMatch: 'full' },\n  { path: 'resultado', component: ResultadoComponent },\n  {\n    path: 'gerador',\n    children: [\n      { path: '', component: GeradorComponent },\n      { path: 'aleatorio', component: JogoComponent },\n      { path: 'nao-sorteado', component: NaoSorteadoComponent },\n      { path: 'fechamento', component: FechamentoComponent },\n      { path: 'base-ultimo', component: BaseUltimoComponent },\n    ],\n  },\n\n  { path: 'tabelas', component: TabelasComponent },\n  { path: 'dicas', component: DicasComponent },\n  { path: 'ferramentas', component: FerramentasComponent },\n];\n\n@NgModule({\n  declarations: [\n    DicasComponent,\n    FerramentasComponent,\n    TabelasComponent,\n    GeradorComponent,\n    ResultadoComponent,\n    JogoComponent,\n    NaoSorteadoComponent,\n    FechamentoComponent,\n    BaseUltimoComponent,\n  ],\n  imports: [CommonModule, RouterModule.forChild(routes), SharedModule],\n  providers: [LotofacilResultadosState],\n})\nexport class LotofacilModule {}\n","export interface IJogo {\n  Jogo: number[];\n}\n\nexport interface IResponseBaseUltimo {\n  concurso_base: number;\n  jogos: Array<number[]>;\n}\n\nexport interface IResponseFechamento {\n  Total: number;\n  Jogos: IJogo[];\n}\n\nexport interface IFiltroFechamento {\n  total_numeros_fechamento: number;\n  para_acertar: number;\n  acertando: number;\n  geracao_numeros: ETipoGeracao;\n  numeros_fechamento?: string;\n}\n\nexport enum ETipoGeracao {\n  ALEATORIO = 'ALEATORIO',\n  ESCOLHER_NUMEROS = 'ESCOLHER_NUMEROS',\n}\n","import { Injectable } from '@angular/core';\nimport { IResultado } from 'app/shared/models/interface.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class LotofacilResultadosState {\n  private _lotofacilResultados$ = new BehaviorSubject<IResultado[]>(\n    {} as IResultado[]\n  );\n\n  constructor() {}\n\n  get resultados$(): Observable<IResultado[]> {\n    return this._lotofacilResultados$.asObservable();\n  }\n\n  set resultados(resultados: IResultado[]) {\n    this._lotofacilResultados$.next(resultados);\n  }\n\n  get resultados(): IResultado[] {\n    return this._lotofacilResultados$.value;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment as env } from 'environments/environment';\nimport { Observable } from 'rxjs';\nimport { IRequestJogos } from '../models/interface.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JogosService {\n  constructor(private http: HttpClient) {}\n\n  getJogosTXT(jogos: IRequestJogos): Observable<any> {\n    return this.http.post(`${env.apiAutenticacao}/jogos/gerar-arquivo`, jogos, {\n      responseType: 'text',\n    });\n  }\n\n  download(filename: string, text): void {\n    const element = document.createElement('a');\n    element.setAttribute(\n      'href',\n      'data:text/plain;charset=utf-8,' + encodeURIComponent(text)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}