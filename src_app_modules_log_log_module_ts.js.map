{"version":3,"file":"src_app_modules_log_log_module_ts.js","mappings":"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","sources":["./src/app/modules/log/api/acesso.service.ts","./src/app/modules/log/api/historico.service.ts","./src/app/modules/log/containers/acesso/acesso.component.ts","./src/app/modules/log/containers/acesso/acesso.component.html","./src/app/modules/log/containers/historico/historico.component.ts","./src/app/modules/log/containers/historico/historico.component.html","./src/app/modules/log/log.module.ts","./src/app/shared/containers/base-resource-list/base-resource-list.component.ts","./src/app/shared/services/base-resource.service.ts","./src/app/shared/services/rules.service.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\nimport { Acesso, AcessoResponse } from '../models/log.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AcessoService extends BaseResourceService<Acesso, AcessoResponse> {\n  constructor(protected injector: Injector) {\n    super('/historicoacesso', injector);\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\nimport { Historico, HistoricoResponse } from '../models/log.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HistoricoService extends BaseResourceService<\n  Historico,\n  HistoricoResponse\n> {\n  constructor(protected injector: Injector) {\n    super('/historicoslog', injector);\n  }\n}\n","import { Component, Injector } from '@angular/core';\nimport { BaseResourceListComponent } from 'app/shared/containers/base-resource-list/base-resource-list.component';\nimport { Acesso, AcessoResponse } from '../../models/log.model';\nimport { AcessoService } from '../../api/acesso.service';\n\n@Component({\n  selector: 'app-acesso',\n  templateUrl: './acesso.component.html',\n  styleUrls: ['./acesso.component.scss'],\n})\nexport class AcessoComponent extends BaseResourceListComponent<\n  Acesso,\n  AcessoResponse\n> {\n  constructor(\n    protected injector: Injector,\n    protected acessoService: AcessoService\n  ) {\n    super(injector, acessoService);\n  }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden bg-card dark:bg-transparent\">\n  <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable>\n    <app-page-header page-title=\"Logs Acesso\" placeholder-text=\"Buscar por nome\" (pesquisar)=\"filtrarResource($event)\"\n      [show-button]=\"false\" [show-search]=\"false\">\n    </app-page-header>\n\n    <!-- Page body -->\n    <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable *ngIf=\"length > 0\">\n      <mat-table [dataSource]=\"resources\">\n        <!-- User name Definition -->\n        <ng-container matColumnDef=\"id\">\n          <mat-header-cell *matHeaderCellDef> Código </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\"> {{ row.id }} </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"dataAcesso\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Data Acesso </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.dataAcesso | date: \"d/MM/Y\" }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"usuarioNome\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Usuário </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.usuarioNome }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"loginIp\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> IP Origem </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.loginIp ? row.loginIp : \"0.0.0.0\" }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- Header and Row Declarations -->\n        <mat-header-row *matHeaderRowDef=\"['id', 'dataAcesso', 'usuarioNome', 'loginIp']\"></mat-header-row>\n        <mat-row *matRowDef=\"\n            let row;\n            columns: ['id', 'dataAcesso', 'usuarioNome', 'loginIp']\n          \"></mat-row>\n      </mat-table>\n    </div>\n\n    <!-- NENHUM DADO ENCONTRADO -->\n    <app-not-found-data class=\"h-full\" mensagem=\"Nenhum registro de perfils encontrado!\" *ngIf=\"length <= 0\">\n    </app-not-found-data>\n  </div>\n  <div class=\"flex flex-0 flex-col\" *ngIf=\"length > 0\">\n    <mat-paginator class=\"flex justify-end border-t\" [length]=\"length\" [pageSize]=\"pageSize\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"paginacao($event)\" aria-label=\"Select page\">\n    </mat-paginator>\n  </div>\n</div>\n","import { Component, Injector } from '@angular/core';\nimport { BaseResourceListComponent } from 'app/shared/containers/base-resource-list/base-resource-list.component';\nimport { HistoricoService } from '../../api/historico.service';\nimport { Historico, HistoricoResponse } from '../../models/log.model';\n\n@Component({\n  selector: 'app-historico',\n  templateUrl: './historico.component.html',\n  styleUrls: ['./historico.component.scss'],\n})\nexport class HistoricoComponent extends BaseResourceListComponent<\n  Historico,\n  HistoricoResponse\n> {\n  constructor(\n    protected injector: Injector,\n    protected historicoService: HistoricoService\n  ) {\n    super(injector, historicoService);\n  }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden bg-card dark:bg-transparent\">\n  <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable>\n    <app-page-header page-title=\"Hitórico Usuário\" placeholder-text=\"Buscar por nome\"\n      (pesquisar)=\"filtrarResource($event)\" [show-button]=\"false\" [show-search]=\"false\">\n    </app-page-header>\n\n    <!-- Page body -->\n    <div class=\"flex flex-col flex-auto min-w-0 overflow-y-auto\" cdkScrollable *ngIf=\"length > 0\">\n      <mat-table [dataSource]=\"resources\">\n        <!-- User name Definition -->\n        <ng-container matColumnDef=\"id\">\n          <mat-header-cell *matHeaderCellDef> Código </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\"> {{ row.id }} </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"dataAcesso\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Data Acesso </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.dataAcesso | date: \"d/MM/Y\" }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"usuarioNome\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Usuário </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.usuarioNome }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"loginIp\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> IP Origem </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.loginIp ? row.loginIp : \"0.0.0.0\" }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"operacao\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Operação </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.operacao }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- Age Definition -->\n        <ng-container matColumnDef=\"tabela\" class=\"cursor-pointer\">\n          <mat-header-cell *matHeaderCellDef> Tabela </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\">\n            {{ row.tabela }}\n          </mat-cell>\n        </ng-container>\n\n        <!-- Header and Row Declarations -->\n        <mat-header-row *matHeaderRowDef=\"[\n            'id',\n            'dataAcesso',\n            'usuarioNome',\n            'loginIp',\n            'operacao',\n            'tabela'\n          ]\"></mat-header-row>\n        <mat-row *matRowDef=\"\n            let row;\n            columns: [\n              'id',\n              'dataAcesso',\n              'usuarioNome',\n              'loginIp',\n              'operacao',\n              'tabela'\n            ]\n          \"></mat-row>\n      </mat-table>\n    </div>\n\n    <!-- NENHUM DADO ENCONTRADO -->\n    <app-not-found-data class=\"h-full\" mensagem=\"Nenhum registro de perfils encontrado!\" *ngIf=\"length <= 0\">\n    </app-not-found-data>\n  </div>\n  <div class=\"flex flex-0 flex-col\" *ngIf=\"length > 0\">\n    <mat-paginator class=\"flex justify-end border-t\" [length]=\"length\" [pageSize]=\"pageSize\"\n      [pageSizeOptions]=\"pageSizeOptions\" (page)=\"paginacao($event)\" aria-label=\"Select page\">\n    </mat-paginator>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { Route, RouterModule } from '@angular/router';\nimport { AcessoComponent } from './containers/acesso/acesso.component';\nimport { HistoricoComponent } from './containers/historico/historico.component';\n\nconst routes: Route[] = [\n  { path: 'acesso', component: AcessoComponent },\n  { path: 'historico', component: HistoricoComponent },\n];\n\n@NgModule({\n  declarations: [AcessoComponent, HistoricoComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), SharedModule],\n})\nexport class LogModule {}\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { MatPaginatorIntl, PageEvent } from '@angular/material/paginator';\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\nimport { BaseResourceModel } from 'app/shared/models/base-resource.model';\nimport { IFilter } from 'app/shared/models/interface.model';\nimport { BaseResourceService } from 'app/shared/services/base-resource.service';\nimport { RulesService } from 'app/shared/services/rules.service';\nimport toastr from 'toastr';\n\n@Component({\n  template: '',\n})\nexport abstract class BaseResourceListComponent<T extends BaseResourceModel, R>\n  implements OnInit\n{\n  resources: T[] = [];\n\n  // MatPaginator Inputs\n  length = 0;\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  // MatPaginator Output\n  pageEvent: PageEvent;\n  protected _fuseConfirmationService: FuseConfirmationService;\n  protected _matPaginatorIntl: MatPaginatorIntl;\n  protected _ruleService: RulesService;\n\n  constructor(\n    protected injecto: Injector,\n    protected resourceService: BaseResourceService<T, R>\n  ) {\n    this._fuseConfirmationService = this.injecto.get(FuseConfirmationService);\n    this._matPaginatorIntl = this.injecto.get(MatPaginatorIntl);\n    this._ruleService = this.injecto.get(RulesService);\n  }\n\n  ngOnInit(): void {\n    this.carregaInformacoesResource();\n    this._matPaginatorIntl.itemsPerPageLabel = 'Itens por página';\n  }\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    if (setPageSizeOptionsInput) {\n      this.pageSizeOptions = setPageSizeOptionsInput\n        .split(',')\n        .map((str) => +str);\n    }\n  }\n\n  carregaInformacoesResource(): void {\n    const filtro: IFilter = {\n      filtro: '',\n      pagina: 0,\n      direcaoOrdenacao: 'DESC',\n      tamanho: 10,\n      ordenarPor: 'id',\n    };\n    this.resourceService.getAll(filtro).subscribe((data) => {\n      this.resources = data['content'];\n      this.length = data['totalElements'];\n      this.pageSize = data['size'];\n    });\n  }\n\n  excluir(resource: T): void {\n    const dialogRef = this._fuseConfirmationService.open({\n      title: `Deseja realmente excluir o item: ${resource.id}?`,\n      message: '',\n      icon: {\n        show: true,\n        name: 'heroicons_outline:exclamation',\n        color: 'warn',\n      },\n      actions: {\n        confirm: {\n          show: true,\n          label: 'Confirmar',\n          color: 'warn',\n        },\n        cancel: {\n          show: true,\n          label: 'Cancelar',\n        },\n      },\n      dismissible: false,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 'confirmed') {\n        this.resourceService.delete(resource.id).subscribe(\n          (res) => {\n            toastr.success(`Item excluído com sucesso!`, '', {\n              timeOut: 10000,\n              progressBar: true,\n              closeButton: true,\n            });\n            this.carregaInformacoesResource();\n          },\n          (error) => {\n            toastr.error(\n              'Não foi possível excluir o perfil',\n              error.error.error,\n              {\n                timeOut: 10000,\n                progressBar: true,\n                closeButton: true,\n              }\n            );\n          }\n        );\n      }\n    });\n  }\n\n  paginacao(event: Event): void {\n    this.pageSize = event['pageSize'];\n    const filtro: IFilter = {\n      filtro: '',\n      pagina: event['pageIndex'],\n      direcaoOrdenacao: 'DESC',\n      tamanho: this.pageSize,\n      ordenarPor: 'id',\n    };\n\n    this.resourceService.getAll(filtro).subscribe((data) => {\n      this.resources = data['content'];\n      this.length = data['totalElements'];\n      this.pageSize = data['size'];\n    });\n  }\n\n  filtrarResource(termo: string): void {\n    const filtro: IFilter = {\n      filtro: termo,\n      pagina: 0,\n      direcaoOrdenacao: 'DESC',\n      tamanho: 10,\n      ordenarPor: 'id',\n    };\n    this.resourceService.getAll(filtro).subscribe((data) => {\n      this.resources = data['content'];\n      this.length = data['totalElements'];\n      this.pageSize = data['size'];\n    });\n  }\n\n  validaPermissao(rule: string): boolean {\n    return this._ruleService.temPermissao(rule);\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { environment as env } from 'environments/environment';\nimport { Observable } from 'rxjs';\nimport { BaseResourceModel } from '../models/base-resource.model';\nimport { IFilter } from '../models/interface.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class BaseResourceService<T extends BaseResourceModel, R> {\n  protected http: HttpClient;\n\n  constructor(protected apiPath: string, protected injector: Injector) {\n    this.http = injector.get(HttpClient);\n  }\n\n  getAll(filter: IFilter): Observable<R> {\n    const parametros = new HttpParams()\n      .set('filtro', filter.filtro)\n      .set('page', filter.pagina)\n      .set('linesPerPage', filter.tamanho)\n      .set('orderBy', filter.ordenarPor)\n      .set('direction', filter.direcaoOrdenacao);\n    return this.http.get<R>(`${env.apiAutenticacao}${this.apiPath}/page`, {\n      params: parametros,\n    });\n  }\n\n  getById(id: number): Observable<T> {\n    return this.http.get<T>(`${env.apiAutenticacao}${this.apiPath}/${id}`);\n  }\n\n  insert(resource: T): Observable<null> {\n    return this.http.post<null>(\n      `${env.apiAutenticacao}${this.apiPath}`,\n      resource\n    );\n  }\n\n  update(resource: T): Observable<null> {\n    return this.http.put<null>(\n      `${env.apiAutenticacao}${this.apiPath}/${resource.id}`,\n      resource\n    );\n  }\n\n  delete(id: number): Observable<null> {\n    return this.http.delete<null>(\n      `${env.apiAutenticacao}${this.apiPath}/${id}`\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthUtils } from 'app/core/auth/auth.utils';\nimport { ESessionStorage } from '../models/sessionstorage.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RulesService {\n  constructor() {}\n\n  temPermissao(rule: string): boolean {\n    const token = sessionStorage.getItem(ESessionStorage.TOKEN);\n    if (!token) {\n      return false;\n    }\n\n    const { ROLES } = AuthUtils.decodeToken(token);\n\n    if (Object(ROLES).find((permissao) => permissao == rule)) {\n      return true;\n    }\n\n    return false;\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}