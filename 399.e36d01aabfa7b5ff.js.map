{"version":3,"file":"399.e36d01aabfa7b5ff.js","mappings":"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","names":["LotofacilService","constructor","http","this","naoSorteado","get","env","apipath","baseNoUltimo","aleatorio","fechamento","filtro","parametros","HttpParams","set","total_numeros_fechamento","para_acertar","acertando","geracao_numeros","numeros_fechamento","params","i0","factory","ɵfac","JogosService","getJogosTXT","jogos","post","responseType","download","filename","text","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","HeaderTitleComponent","ETipoJogo","ngOnInit","selectors","CartelaComponent","EventEmitter","classItemSelecionado","jogo","adicionarRemoverNumero","item","index","numerosCartela","findIndex","numero","selecionado","indexOf","numerosSelecionados","splice","push","selecionados","emit","par","totalPar","forEach","n","impar","totalImpar","total","BaseUltimoComponent","service","jogosService","gerarJogo","cartelas","mostrarNovo","sessionStorage","getItem","ESessionLoteria","resultado","JSON","parse","concursoBase","concurso_base","gerarNumerosCartela","subscribe","next","response","setItem","stringify","error","erro","i","numeroCartela","includes","cartela","baixarJogos","requestJogos","car","console","log","ETipoGeracao","ALEATORIO","FechamentoComponent","_lotofacilService","gerarNumerosCartelaFechamento","gerarFechamento","length","toastr","paraFazerSelecionado","acertandoSelecionado","toString","totalDeJogos","Total","Jogos","novo","numeros","ctx","JogoComponent","gerarNumerosAleatorios","numbers","random","Math","floor","testarJogo","alert","NaoSorteadoComponent","Jogo","DicasComponent","FerramentasComponent","TiposJogos","tipo","titulo","descricao","rota","cor","GeradorComponent","cardsJogos","ResultadoComponent","buscarOutroResultado","concurso","gerarListaConcursos","resultados","lista","LotofacilResultadosState","BehaviorSubject","resultados$","_lotofacilResultados$","asObservable","value","routes","path","redirectTo","pathMatch","component","children","TabelasComponent","_resultadoService","_resultadosState","_carregaResultados","getTodosResultados","LotofacilModule","imports","CommonModule","RouterModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./src/app/modules/loterias/lotofacil/api/lotofacil.service.ts","./src/app/shared/services/jogos.service.ts","./src/app/shared/components/loteria/header-title/header-title.component.html","./src/app/shared/components/loteria/header-title/header-title.component.ts","./src/app/shared/components/loteria/cartela/cartela.component.html","./src/app/shared/components/loteria/cartela/cartela.component.ts","./src/app/modules/loterias/lotofacil/components/base-ultimo/base-ultimo.component.html","./src/app/modules/loterias/lotofacil/components/base-ultimo/base-ultimo.component.ts","./src/app/modules/loterias/lotofacil/models/lotofacil.model.ts","./src/app/modules/loterias/lotofacil/components/fechamento/fechamento.component.html","./src/app/modules/loterias/lotofacil/components/fechamento/fechamento.component.ts","./src/app/modules/loterias/lotofacil/components/jogo/jogo.component.html","./src/app/modules/loterias/lotofacil/components/jogo/jogo.component.ts","./src/app/modules/loterias/lotofacil/components/nao-sorteado/nao-sorteado.component.html","./src/app/modules/loterias/lotofacil/components/nao-sorteado/nao-sorteado.component.ts","./src/app/modules/loterias/lotofacil/containers/dicas/dicas.component.ts","./src/app/modules/loterias/lotofacil/containers/dicas/dicas.component.html","./src/app/modules/loterias/lotofacil/containers/ferramentas/ferramentas.component.ts","./src/app/modules/loterias/lotofacil/containers/ferramentas/ferramentas.component.html","./src/app/modules/loterias/lotofacil/containers/gerador/tiposJogos.ts","./src/app/modules/loterias/lotofacil/containers/gerador/gerador.component.html","./src/app/modules/loterias/lotofacil/containers/gerador/gerador.component.ts","./src/app/modules/loterias/lotofacil/containers/resultado/resultado.component.html","./src/app/modules/loterias/lotofacil/containers/resultado/resultado.component.ts","./src/app/modules/loterias/lotofacil/state/lotofacil-resultados.state.ts","./src/app/modules/loterias/lotofacil/lotofacil.module.ts","./src/app/modules/loterias/lotofacil/containers/tabelas/tabelas.component.ts","./src/app/modules/loterias/lotofacil/containers/tabelas/tabelas.component.html"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment as env } from 'environments/environment';\nimport { Observable } from 'rxjs';\nimport {\n  IFiltroFechamento,\n  IJogo,\n  IResponseBaseUltimo,\n  IResponseFechamento,\n} from '../models/lotofacil.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LotofacilService {\n  readonly apipath = '/lotofacil';\n\n  constructor(private http: HttpClient) {}\n\n  naoSorteado(): Observable<IJogo> {\n    return this.http.get<IJogo>(`${env.apiJogos}${this.apipath}/nao-sorteado`);\n  }\n\n  baseNoUltimo(): Observable<IResponseBaseUltimo> {\n    return this.http.get<IResponseBaseUltimo>(\n      `${env.apiJogos}${this.apipath}/base-ultimo`\n    );\n  }\n\n  aleatorio(): Observable<IJogo> {\n    return this.http.get<IJogo>(`${env.apiJogos}${this.apipath}/base-ultimo`);\n  }\n\n  fechamento(filtro: IFiltroFechamento): Observable<IResponseFechamento> {\n    const parametros = new HttpParams()\n      .set('total_numeros_fechamento', filtro.total_numeros_fechamento)\n      .set('para_acertar', filtro.para_acertar)\n      .set('acertando', filtro.acertando)\n      .set('geracao_numeros', filtro.geracao_numeros)\n      .set('numeros_fechamento', filtro.numeros_fechamento);\n\n    return this.http.get<IResponseFechamento>(\n      `${env.apiJogos}${this.apipath}/fechamento`,\n      {\n        params: parametros,\n      }\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment as env } from 'environments/environment';\nimport { Observable } from 'rxjs';\nimport { IRequestJogos } from '../models/interface.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JogosService {\n  constructor(private http: HttpClient) {}\n\n  getJogosTXT(jogos: IRequestJogos): Observable<any> {\n    return this.http.post(`${env.apiAutenticacao}/jogos/gerar-arquivo`, jogos, {\n      responseType: 'text',\n    });\n  }\n\n  download(filename: string, text): void {\n    const element = document.createElement('a');\n    element.setAttribute(\n      'href',\n      'data:text/plain;charset=utf-8,' + encodeURIComponent(text)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  }\n}\n","<!-- Header -->\n<div class=\"relative flex-0 py-5 overflow-hidden bg-{{jogo}}-100\">\n  <!-- Background - @formatter:off -->\n  <!-- Rings -->\n  <svg class=\"absolute inset-0 pointer-events-none\" viewBox=\"0 0 960 540\" width=\"100%\" height=\"100%\"\n    preserveAspectRatio=\"xMidYMax slice\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g class=\"text-gray-700 opacity-25\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"100\">\n      <circle r=\"234\" cx=\"196\" cy=\"23\"></circle>\n      <circle r=\"234\" cx=\"790\" cy=\"491\"></circle>\n    </g>\n  </svg>\n  <!-- @formatter:on -->\n  <div class=\"z-10 relative flex flex-col items-center\">\n    <div class=\"mt-1 text-4xl sm:text-7xl font-extrabold tracking-tight leading-tight text-center text-white\">\n      {{ titulo }}\n      <h2 class=\"text-xl font-semibold text-white\" *ngIf=\"subTitulo !== ''\">\n        {{ subTitulo }}\n      </h2>\n    </div>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { ETipoJogo } from 'app/shared/models/interface.model';\n\n@Component({\n  selector: 'app-header-title',\n  templateUrl: './header-title.component.html',\n  styleUrls: ['./header-title.component.scss'],\n})\nexport class HeaderTitleComponent implements OnInit {\n  @Input() jogo: ETipoJogo = ETipoJogo.LOTOFACIL;\n  @Input() titulo = 'Lotofácil';\n  @Input('sub-titulo') subTitulo = '';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<!-- CARTELA -->\n<fuse-card\n  class=\"flex flex-col items-center  max-w-48 {{ numeroParaPuloDeLinha == 5 ? 'max-w-48' : 'max-w-90'}} p-3 bg-cartela border-{{jogo}}-200 border-2\">\n  <p class=\"flex flex-wrap w-full items-center justify-center\">\n    <ng-container *ngFor=\"let item of numerosCartela\">\n      <div\n        class=\"cursor-pointer item text-{{jogo}}-300 rounded-lg border border-{{jogo}}-200 {{item.selecionado ? classItemSelecionado : ''}} m-1 w-6 h-7 flex items-center justify-center text-base\"\n        [ngClass]=\"{'bg-white': !item.selecionado}\" (click)=\"adicionarRemoverNumero(item)\">\n        {{ item.numero }}\n      </div>\n      <div class=\"basis-[100%] h-0\" *ngIf=\"item.numero % numeroParaPuloDeLinha === 0\"></div>\n    </ng-container>\n  </p>\n  <p class=\"text-sm text-{{jogo}}-300 mt-3\">Par:{{par}} Impar:{{impar}} | Soma:{{total}}</p>\n</fuse-card>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { INumerosCartela } from 'app/shared/models/interface.model';\n\n@Component({\n  selector: 'app-cartela',\n  templateUrl: './cartela.component.html',\n  styleUrls: ['./cartela.component.scss'],\n})\nexport class CartelaComponent implements OnInit {\n  @Input() jogo: string = 'lotofacil';\n  @Input() numerosCartela: INumerosCartela[] = [];\n\n  @Input() numerosSelecionados: number[] = [];\n\n  @Input('pulo') numeroParaPuloDeLinha: number = 5;\n\n  @Output() selecionados = new EventEmitter();\n\n  classItemSelecionado: string = '';\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.classItemSelecionado = 'bg-' + this.jogo + '-100 font-bold';\n  }\n\n  adicionarRemoverNumero(item: INumerosCartela): void {\n    const index = this.numerosCartela.findIndex((numero) => numero === item);\n    if (this.numerosCartela[index].selecionado) {\n      const indexOf = this.numerosSelecionados.indexOf(\n        this.numerosCartela[index].numero\n      );\n\n      if (indexOf !== -1) {\n        this.numerosSelecionados.splice(indexOf, 1);\n      }\n    }\n\n    if (!this.numerosCartela[index].selecionado) {\n      this.numerosSelecionados.push(this.numerosCartela[index].numero);\n    }\n\n    this.numerosCartela[index].selecionado =\n      !this.numerosCartela[index].selecionado;\n\n    this.selecionados.emit(this.numerosSelecionados);\n  }\n\n  get par(): number {\n    let totalPar: number = 0;\n    this.numerosSelecionados.forEach((n) => {\n      if (n % 2 === 0) totalPar += 1;\n    });\n\n    return totalPar;\n  }\n\n  get impar(): number {\n    let totalImpar: number = 0;\n    this.numerosSelecionados.forEach((n) => {\n      if (n % 2 !== 0) totalImpar += 1;\n    });\n\n    return totalImpar;\n  }\n\n  get total(): number {\n    let total: number = 0;\n    this.numerosSelecionados.forEach((n) => {\n      total += n;\n    });\n\n    return total;\n  }\n}\n","<div class=\"flex flex-col w-full\">\n  <div class=\"w-full inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n    <app-header-title titulo=\"Base ultimo sorteio\"\n      sub-titulo=\"Gerar 6 jogos simples com base no resultado do ultimo sorteio!\" jogo=\"lotofacil\"></app-header-title>\n  </div>\n  <div class=\"p-2 w-full flex items-center justify-between flex-wrap\">\n    <a mat-stroked-button routerLink=\"../\" class=\"mr-2 my-2 w-40\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_solid:arrow-sm-left'\"></mat-icon>\n        <span>Voltar</span>\n      </span>\n    </a>\n    <p class=\"my-2 w-40 border border-lotofacil-200 p-2 rounded-full text-center\">Concurso: {{ concursoBase }}</p>\n    <button class=\"my-2 w-40\" mat-stroked-button (click)=\"baixarJogos()\" *ngIf=\"mostrarNovo\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n        <span class=\"ml-2\">Baixar Jogos</span>\n      </span>\n    </button>\n    <button class=\"my-2 w-40\" mat-stroked-button (click)=\"gerarJogo()\" *ngIf=\"mostrarNovo\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n        <span class=\"ml-2\">Novo</span>\n      </span>\n    </button>\n  </div>\n  <div class=\"flex flex-wrap\">\n    <ng-container *ngFor=\"let cartela of cartelas\">\n      <div class=\"p-4\">\n        <!-- CARTELA -->\n        <app-cartela [numerosCartela]=\"cartela.cartela\" [numerosSelecionados]=\"cartela.selecionados\"\n          pulo=\"5\"></app-cartela>\n      </div>\n    </ng-container>\n\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {\n  ICartela,\n  INumerosCartela,\n  IRequestJogos,\n} from 'app/shared/models/interface.model';\nimport { ESessionLoteria } from 'app/shared/models/sessionstorage.model';\nimport { JogosService } from 'app/shared/services/jogos.service';\nimport { LotofacilService } from '../../api/lotofacil.service';\n\n@Component({\n  selector: 'app-base-ultimo',\n  templateUrl: './base-ultimo.component.html',\n  styleUrls: ['./base-ultimo.component.scss'],\n})\nexport class BaseUltimoComponent implements OnInit {\n  numerosCartela: INumerosCartela[] = [];\n\n  cartelas: ICartela[] = [];\n\n  mostrarNovo = true;\n\n  concursoBase: number = 0;\n\n  constructor(\n    private service: LotofacilService,\n    private jogosService: JogosService\n  ) {}\n\n  ngOnInit(): void {\n    this.gerarJogo();\n  }\n\n  gerarJogo(): void {\n    this.cartelas = [];\n    this.mostrarNovo = false;\n\n    if (\n      sessionStorage.getItem(\n        ESessionLoteria.RESULTADO_ULTIMO + 'lotofacilBaseUltimo'\n      )\n    ) {\n      let resultado = JSON.parse(\n        sessionStorage.getItem(\n          ESessionLoteria.RESULTADO_ULTIMO + 'lotofacilBaseUltimo'\n        )\n      );\n\n      this.mostrarNovo = true;\n      this.concursoBase = resultado.concurso_base;\n      resultado.jogos.forEach((jogo) => {\n        this.gerarNumerosCartela(jogo);\n      });\n\n      return;\n    }\n\n    this.service.baseNoUltimo().subscribe({\n      next: (response) => {\n        sessionStorage.setItem(\n          ESessionLoteria.RESULTADO_ULTIMO + 'lotofacilBaseUltimo',\n          JSON.stringify(response)\n        );\n        this.mostrarNovo = true;\n        this.concursoBase = response.concurso_base;\n        response.jogos.forEach((jogo) => {\n          this.gerarNumerosCartela(jogo);\n        });\n      },\n      error: (erro) => {\n        this.mostrarNovo = true;\n      },\n    });\n  }\n\n  gerarNumerosCartela(jogo: number[]): void {\n    this.numerosCartela = [];\n    for (let i = 1; i < 26; i++) {\n      let numeroCartela: INumerosCartela = {\n        numero: i,\n        selecionado: false,\n      };\n      numeroCartela.selecionado = jogo.includes(i);\n      this.numerosCartela.push(numeroCartela);\n    }\n\n    this.cartelas.push({\n      cartela: this.numerosCartela,\n      selecionados: jogo,\n    });\n  }\n\n  baixarJogos(): void {\n    let requestJogos: IRequestJogos = {\n      cartela: [],\n    };\n\n    this.cartelas.forEach((car) => {\n      requestJogos.cartela.push(car.selecionados);\n    });\n\n    this.jogosService.getJogosTXT(requestJogos).subscribe({\n      next: (response) =>\n        this.jogosService.download('lotofacil-base-ultimo.txt', response),\n      error: (erro) => console.log(erro),\n    });\n  }\n}\n","export interface IJogo {\n  Jogo: number[];\n}\n\nexport interface IResponseBaseUltimo {\n  concurso_base: number;\n  jogos: Array<number[]>;\n}\n\nexport interface IResponseFechamento {\n  Total: number;\n  Jogos: IJogo[];\n}\n\nexport interface IFiltroFechamento {\n  total_numeros_fechamento: number;\n  para_acertar: number;\n  acertando: number;\n  geracao_numeros: ETipoGeracao;\n  numeros_fechamento?: string;\n}\n\nexport enum ETipoGeracao {\n  ALEATORIO = 'ALEATORIO',\n  ESCOLHER_NUMEROS = 'ESCOLHER_NUMEROS',\n}\n","<div class=\"flex flex-col w-full\">\n  <div class=\"w-full inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n    <!-- <app-header-title titulo=\"Fechamentos\"\n      sub-titulo=\"Gerar vários jogos com base no numeros selecionados, fazendo um fechamento para garantir um numero mínimo de acerto com base nas bolas sorteadas!\"\n      jogo=\"lotofacil\"></app-header-title> -->\n  </div>\n  <div class=\"p-2 w-full flex items-center justify-between flex-wrap\">\n    <a mat-stroked-button routerLink=\"../\" class=\"mr-2 my-2 w-40\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_solid:arrow-sm-left'\"></mat-icon>\n        <span>Voltar</span>\n      </span>\n    </a>\n    <p class=\"my-2 w-40 border border-lotofacil-200 p-2 rounded-full text-center\" *ngIf=\"totalDeJogos > 0\">Total: {{\n      totalDeJogos }}</p>\n    <button class=\"my-2 w-40\" mat-stroked-button (click)=\"baixarJogos()\" *ngIf=\"totalDeJogos > 0\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n        <span class=\"ml-2\">Baixar Jogos</span>\n      </span>\n    </button>\n    <button class=\"my-2 w-40\" mat-stroked-button (click)=\"gerarFechamento()\" *ngIf=\"numerosSelecionados.length > 1\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n        <span class=\"ml-2\">Gerar</span>\n      </span>\n    </button>\n  </div>\n  <!-- Main -->\n  <div class=\"flex flex-wrap\">\n    <div class=\"p-4\">\n      <p class=\"text-xl text-secondary my-2\">Para fazer</p>\n      <div class=\"flex flex-row rounded-xl bg-gray-200 p-2\">\n        <ng-container *ngFor=\"let item of paraFazer\">\n          <div class=\"w-15\">\n            <input type=\"radio\" [(ngModel)]=\"paraFazerSelecionado\" name=\"para_fazer\" id=\"pf{{item}}\" [value]=\"item\"\n              class=\"peer hidden\" />\n            <label for=\"pf{{item}}\"\n              class=\"block cursor-pointer select-none rounded-xl p-2 text-center peer-checked:bg-blue-500 peer-checked:font-bold peer-checked:text-white\">{{item}}</label>\n          </div>\n        </ng-container>\n\n\n      </div>\n    </div>\n    <div class=\"p-4\">\n      <p class=\"text-xl text-secondary my-2\">Acertando</p>\n      <div class=\"flex flex-row rounded-xl bg-gray-200 p-2\">\n        <ng-container *ngFor=\"let item of acertando\">\n          <div class=\"w-15\">\n            <input type=\"radio\" [(ngModel)]=\"acertandoSelecionado\" name=\"acertando\" [id]=\"item\" [value]=\"item\"\n              class=\"peer hidden\" />\n            <label [for]=\"item\"\n              class=\"block cursor-pointer select-none rounded-xl p-2 text-center peer-checked:bg-blue-500 peer-checked:font-bold peer-checked:text-white\">{{item}}</label>\n          </div>\n        </ng-container>\n\n      </div>\n    </div>\n    <div class=\"p-4\">\n      <p class=\"text-xl text-secondary my-2\">Total Selecionado: {{ numerosSelecionados.length }}</p>\n    </div>\n  </div>\n\n  <div class=\"flex flex-wrap\">\n    <div class=\"p-4\">\n      <div class=\"text-xl text-secondary\">Selecione os numeros para fechamento</div>\n      <app-cartela [numerosCartela]=\"cartela?.cartela\" (selecionados)=\"selecionados($event)\" pulo=\"5\"></app-cartela>\n    </div>\n  </div>\n\n  <div class=\"my-4 border-b\" *ngIf=\"cartelas.length\"></div>\n  <div class=\"flex flex-wrap\" *ngIf=\"cartelas.length\">\n    <div class=\"p-4\">\n      <div class=\"text-xl text-secondary\">Lista de Jogos gerados</div>\n    </div>\n    <div class=\"flex flex-wrap\">\n      <ng-container *ngFor=\"let cartela of cartelas\">\n        <div class=\"p-4\">\n          <!-- CARTELA -->\n          <app-cartela [numerosCartela]=\"cartela.cartela\" [numerosSelecionados]=\"cartela.selecionados\"\n            pulo=\"5\"></app-cartela>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport {\n  ICartela,\n  INumerosCartela,\n  IRequestJogos,\n} from 'app/shared/models/interface.model';\nimport { JogosService } from 'app/shared/services/jogos.service';\nimport toastr from 'toastr';\nimport { LotofacilService } from '../../api/lotofacil.service';\nimport { ETipoGeracao, IFiltroFechamento } from '../../models/lotofacil.model';\n\n@Component({\n  selector: 'app-fechamento',\n  templateUrl: './fechamento.component.html',\n  styleUrls: ['./fechamento.component.scss'],\n})\nexport class FechamentoComponent implements OnInit {\n  numerosCartela: INumerosCartela[] = [];\n  numerosSelecionados: number[] = [];\n\n  totalDeJogos = 0;\n\n  cartela: ICartela;\n  cartelas: ICartela[] = [];\n\n  mostrarNovo = true;\n\n  paraFazer = [11, 12, 13, 14, 15];\n  acertando = [14, 15];\n\n  paraFazerSelecionado: number = 14;\n  acertandoSelecionado: number = 15;\n\n  constructor(\n    private _lotofacilService: LotofacilService,\n    private jogosService: JogosService\n  ) {}\n\n  ngOnInit(): void {\n    this.gerarNumerosCartela();\n  }\n\n  gerarNumerosCartela(): void {\n    this.numerosCartela = [];\n    for (let i = 1; i < 26; i++) {\n      let numeroCartela: INumerosCartela = {\n        numero: i,\n        selecionado: false,\n      };\n      numeroCartela.selecionado = this.numerosSelecionados.includes(i);\n      this.numerosCartela.push(numeroCartela);\n    }\n\n    this.cartela = {\n      cartela: this.numerosCartela,\n      selecionados: [],\n    };\n  }\n\n  gerarNumerosCartelaFechamento(numerosSelecionados: any): ICartela {\n    let cartela: ICartela = {\n      cartela: [],\n      selecionados: [],\n    };\n    for (let i = 1; i < 26; i++) {\n      let numeroCartela: INumerosCartela = {\n        numero: i,\n        selecionado: false,\n      };\n      numeroCartela.selecionado = numerosSelecionados.includes(i);\n      cartela.cartela.push(numeroCartela);\n    }\n\n    return cartela;\n  }\n\n  gerarFechamento(): void {\n    let total = this.numerosSelecionados.length;\n\n    if (total < 16) {\n      toastr.info('Você deve selecionar no minimo 16 números para fechamento!');\n      return;\n    }\n\n    let filtro: IFiltroFechamento = {\n      para_acertar: this.paraFazerSelecionado,\n      acertando: this.acertandoSelecionado,\n      numeros_fechamento: this.numerosSelecionados.toString(),\n      total_numeros_fechamento: total,\n      geracao_numeros: ETipoGeracao.ESCOLHER_NUMEROS,\n    };\n\n    this._lotofacilService.fechamento(filtro).subscribe({\n      next: (resultado) => {\n        this.totalDeJogos = resultado.Total;\n        resultado.Jogos.forEach((jogo) => {\n          let novo: ICartela = this.gerarNumerosCartelaFechamento(jogo);\n          this.cartelas.push(novo);\n        });\n      },\n      error: (erro) => console.log(erro),\n    });\n  }\n\n  selecionados(numeros: number[]): void {\n    this.numerosSelecionados = numeros;\n  }\n\n  baixarJogos(): void {\n    let requestJogos: IRequestJogos = {\n      cartela: [],\n    };\n\n    this.cartelas.forEach((car) => {\n      let selecionados: number[] = [];\n      car.cartela.forEach((n) => {\n        if (n.selecionado) selecionados.push(n.numero);\n      });\n      requestJogos.cartela.push(selecionados);\n    });\n\n    this.jogosService.getJogosTXT(requestJogos).subscribe({\n      next: (response) =>\n        this.jogosService.download(\n          `JOGOS_SE${this.acertandoSelecionado}_${this.paraFazerSelecionado}.txt`,\n          response\n        ),\n      error: (erro) => console.log(erro),\n    });\n  }\n}\n","<div class=\"flex flex-col w-full\">\n  <div class=\"w-full inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n    <app-header-title titulo=\"Aleatório sem regras\"\n      sub-titulo=\"Gerar um jogos simples sem levar em consideração nenhum tipo de regra!\"\n      jogo=\"lotofacil\"></app-header-title>\n  </div>\n  <div class=\"p-2 w-full flex items-center justify-between flex-wrap\">\n    <a mat-stroked-button routerLink=\"../\" class=\"my-2 w-40\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_solid:arrow-sm-left'\"></mat-icon>\n        <span>Voltar</span>\n      </span>\n    </a>\n    <p class=\"my-2 w-40 border border-lotofacil-200 p-2 rounded-full text-center\">Total: {{ cartelas.length }}</p>\n    <button class=\"my-2 w-40\" mat-stroked-button (click)=\"baixarJogos()\" *ngIf=\"mostrarNovo\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n        <span class=\"ml-2\">Baixar Jogos</span>\n      </span>\n    </button>\n    <button class=\"my-2 w-40\" mat-stroked-button (click)=\"gerarNumerosAleatorios()\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n        <span class=\"ml-2\">Novo</span>\n      </span>\n    </button>\n  </div>\n  <div class=\"flex flex-wrap\">\n\n\n    <ng-container *ngFor=\"let cartela of cartelas\">\n      <div class=\"p-4\">\n        <!-- CARTELA -->\n        <app-cartela [numerosCartela]=\"cartela.cartela\" [numerosSelecionados]=\"cartela.selecionados\"\n          pulo=\"5\"></app-cartela>\n\n        <!-- FIM CARTELA -->\n        <div class=\"flex w-48 items-center justify-center\" *ngIf=\"false\">\n          <button (click)=\"testarJogo(cartela)\" class=\"hidden sm:inline-flex w-44 mt-3\" mat-stroked-button>\n            <span class=\"ml-2\">Testar</span>\n          </button>\n        </div>\n\n      </div>\n    </ng-container>\n\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {\n  ICartela,\n  INumerosCartela,\n  IRequestJogos,\n} from 'app/shared/models/interface.model';\nimport { JogosService } from 'app/shared/services/jogos.service';\n\n@Component({\n  selector: 'app-jogo',\n  templateUrl: './jogo.component.html',\n  styleUrls: ['./jogo.component.scss'],\n})\nexport class JogoComponent implements OnInit {\n  numerosCartela: INumerosCartela[] = [];\n  numerosSelecionados: number[] = [];\n\n  cartelas: ICartela[] = [];\n\n  mostrarNovo = true;\n\n  constructor(private jogosService: JogosService) {}\n\n  ngOnInit(): void {\n    this.gerarNumerosAleatorios();\n  }\n\n  gerarNumerosCartela(): void {\n    this.numerosCartela = [];\n    for (let i = 1; i < 26; i++) {\n      let numeroCartela: INumerosCartela = {\n        numero: i,\n        selecionado: false,\n      };\n      numeroCartela.selecionado = this.numerosSelecionados.includes(i);\n      this.numerosCartela.push(numeroCartela);\n    }\n\n    this.cartelas.push({\n      cartela: this.numerosCartela,\n      selecionados: this.numerosSelecionados,\n    });\n  }\n\n  gerarNumerosAleatorios(): void {\n    // this.cartelas = [];\n    let numbers: number[] = [];\n\n    while (numbers.length < 15) {\n      let random = Math.floor(Math.random() * 25) + 1;\n\n      if (!numbers.includes(random)) {\n        numbers.push(random);\n      }\n    }\n    this.numerosSelecionados = numbers;\n    this.gerarNumerosCartela();\n  }\n\n  testarJogo(cartela: ICartela) {\n    alert(`Não implementado ${JSON.stringify(cartela.selecionados)}`);\n  }\n\n  baixarJogos(): void {\n    let requestJogos: IRequestJogos = {\n      cartela: [],\n    };\n\n    this.cartelas.forEach((car) => {\n      requestJogos.cartela.push(car.selecionados);\n    });\n\n    this.jogosService.getJogosTXT(requestJogos).subscribe({\n      next: (response) =>\n        this.jogosService.download('lotofacil-base-ultimo.txt', response),\n      error: (erro) => console.log(erro),\n    });\n  }\n}\n","<div class=\"flex flex-col w-full\">\n  <div class=\"w-full inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n    <app-header-title titulo=\"Não Sorteado\"\n      sub-titulo=\"Gerar um jogos simples aleatório validando se o mesmo nunca foi sorteado anteriormente!\"\n      jogo=\"lotofacil\"></app-header-title>\n  </div>\n  <div class=\"p-2 w-full flex items-center justify-between flex-wrap\">\n    <a mat-stroked-button routerLink=\"../\" class=\"mr-2 my-2 w-40\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_solid:arrow-sm-left'\"></mat-icon>\n        <span>Voltar</span>\n      </span>\n    </a>\n    <p class=\"my-2 w-40 border border-lotofacil-200 p-2 rounded-full text-center\">Total: {{ cartelas.length }}</p>\n    <button class=\"my-2 w-40\" mat-stroked-button (click)=\"baixarJogos()\" *ngIf=\"mostrarNovo\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n        <span class=\"ml-2\">Baixar Jogos</span>\n      </span>\n    </button>\n    <button class=\"my-2 w-40\" mat-stroked-button (click)=\"gerarJogo()\" *ngIf=\"mostrarNovo\">\n      <span class=\"inline-flex items-center \">\n        <mat-icon class=\"mr-1.5 icon-size-5 \" [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n        <span class=\"ml-2\">Novo</span>\n      </span>\n    </button>\n  </div>\n  <div class=\"flex flex-wrap\">\n\n\n    <ng-container *ngFor=\"let cartela of cartelas\">\n      <div class=\"p-4\">\n        <!-- CARTELA -->\n        <app-cartela [numerosCartela]=\"cartela.cartela\" [numerosSelecionados]=\"cartela.selecionados\"\n          pulo=\"5\"></app-cartela>\n\n        <!-- FIM CARTELA -->\n        <!-- <div class=\"flex w-48 justify-between\">\n\n          <button (click)=\"testarJogo(cartela)\" class=\"hidden sm:inline-flex w-22 mt-3\" mat-stroked-button>\n            <span class=\"ml-2\">Testar</span>\n          </button>\n        </div> -->\n\n      </div>\n    </ng-container>\n\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {\n  ICartela,\n  INumerosCartela,\n  IRequestJogos,\n} from 'app/shared/models/interface.model';\nimport { JogosService } from 'app/shared/services/jogos.service';\nimport { LotofacilService } from '../../api/lotofacil.service';\n\n@Component({\n  selector: 'app-nao-sorteado',\n  templateUrl: './nao-sorteado.component.html',\n  styleUrls: ['./nao-sorteado.component.scss'],\n})\nexport class NaoSorteadoComponent implements OnInit {\n  numerosCartela: INumerosCartela[] = [];\n  numerosSelecionados: number[] = [];\n\n  cartelas: ICartela[] = [];\n\n  mostrarNovo = true;\n\n  constructor(\n    private service: LotofacilService,\n    private jogosService: JogosService\n  ) {}\n\n  ngOnInit(): void {\n    this.gerarJogo();\n  }\n\n  gerarJogo(): void {\n    this.mostrarNovo = false;\n    this.service.naoSorteado().subscribe({\n      next: (response) => {\n        this.mostrarNovo = true;\n        this.numerosSelecionados = response.Jogo;\n        this.gerarNumerosCartela();\n      },\n      error: (erro) => {\n        this.mostrarNovo = true;\n      },\n    });\n  }\n\n  gerarNumerosCartela(): void {\n    this.numerosCartela = [];\n    for (let i = 1; i < 26; i++) {\n      let numeroCartela: INumerosCartela = {\n        numero: i,\n        selecionado: false,\n      };\n      numeroCartela.selecionado = this.numerosSelecionados.includes(i);\n      this.numerosCartela.push(numeroCartela);\n    }\n\n    this.cartelas.push({\n      cartela: this.numerosCartela,\n      selecionados: this.numerosSelecionados,\n    });\n  }\n\n  testarJogo(cartela: ICartela) {\n    alert(`Não implementado ${JSON.stringify(cartela.selecionados)}`);\n  }\n\n  baixarJogos(): void {\n    let requestJogos: IRequestJogos = {\n      cartela: [],\n    };\n\n    this.cartelas.forEach((car) => {\n      requestJogos.cartela.push(car.selecionados);\n    });\n\n    this.jogosService.getJogosTXT(requestJogos).subscribe({\n      next: (response) =>\n        this.jogosService.download('lotofacil-base-ultimo.txt', response),\n      error: (erro) => console.log(erro),\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dicas',\n  templateUrl: './dicas.component.html',\n  styleUrls: ['./dicas.component.scss']\n})\nexport class DicasComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n  <app-header-title titulo=\"Dicas\" jogo=\"lotofacil\"></app-header-title>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ferramentas',\n  templateUrl: './ferramentas.component.html',\n  styleUrls: ['./ferramentas.component.scss']\n})\nexport class FerramentasComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n  <app-header-title titulo=\"Ferramentas\" jogo=\"lotofacil\"></app-header-title>\n</div>","import { ITipoCardJogos } from 'app/shared/models/interface.model';\n\nexport const TiposJogos: ITipoCardJogos[] = [\n  {\n    tipo: 'Aleatório sem regras',\n    titulo: 'Jogo Simples',\n    descricao:\n      'Gerar um jogos simples sem levar em consideração nenhum tipo de regra!',\n    rota: 'aleatorio',\n    cor: 'lotofacil',\n  },\n  {\n    tipo: 'Nunca Sorteado',\n    titulo: 'Com base nos ultimos sorteios',\n    descricao:\n      'Gerar um jogos simples aleatório validando se o mesmo nunca foi sorteado anteriormente!',\n    rota: 'nao-sorteado',\n    cor: 'lotofacil',\n  },\n  {\n    tipo: 'Base ultimo sorteio',\n    titulo: 'Jogo feito de acordo com numeros do ultimo sorteio',\n    descricao: 'Gerar 6 jogos simples com base no resultado do ultimo sorteio!',\n    rota: 'base-ultimo',\n    cor: 'lotofacil',\n  },\n  {\n    tipo: 'Fechamentos',\n    titulo: 'Fechamentos para diminuir o numero de jogos!',\n    descricao:\n      'Gerar vários jogos com base no numeros selecionados, fazendo um fechamento para garantir um numero mínimo de acerto com base nas bolas sorteadas!',\n    rota: 'fechamento',\n    cor: 'lotofacil',\n  },\n];\n","<div class=\"flex flex-col w-full\">\n  <div class=\"w-full inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n    <app-header-title titulo=\"Gerador\" jogo=\"lotofacil\"></app-header-title>\n  </div>\n\n  <div class=\"grid grid-cols-1 sm:grid-cols-3 lg:grid-cols-4 gap-8 mt-8 sm:mt-10 p-3\">\n\n    <ng-container *ngFor=\"let item of cardsJogos\">\n      <div class=\"flex flex-col shadow rounded-2xl overflow-hidden bg-card\">\n        <div class=\"flex flex-col p-6 justify-between h-full\">\n          <div class=\"flex items-center justify-between\">\n            <!-- Course category -->\n            <div class=\"py-0.5 px-3 rounded-full text-sm font-semibold text-white bg-{{item.cor}}-100\">\n              {{ item.tipo }}\n            </div>\n            <!-- Completed at least once -->\n            <div class=\"flex items-center\">\n              <mat-icon class=\"icon-size-5 text-green-600\" [svgIcon]=\"'heroicons_solid:badge-check'\"></mat-icon>\n            </div>\n          </div>\n          <!-- Course title & description -->\n          <div class=\"mt-4 text-lg font-medium\">{{ item.titulo }}</div>\n          <div class=\"mt-0.5 text-secondary\">{{ item.descricao }}</div>\n          <!-- Course time -->\n          <div class=\"flex flex-col w-full mt-auto\">\n            <div class=\"w-full h-1 my-6 border-t-2\"></div>\n            <!-- Course launch button -->\n\n            <a mat-stroked-button [routerLink]=\"item.rota\">\n              <span class=\"inline-flex items-center\">\n                <!-- Started -->\n                <span>Gerar</span>\n\n                <mat-icon class=\"ml-1.5 icon-size-5\" [svgIcon]=\"'heroicons_solid:arrow-sm-right'\"></mat-icon>\n              </span>\n            </a>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ITipoCardJogos } from 'app/shared/models/interface.model';\nimport { TiposJogos } from './tiposJogos';\n\n@Component({\n  selector: 'app-gerador',\n  templateUrl: './gerador.component.html',\n  styleUrls: ['./gerador.component.scss'],\n})\nexport class GeradorComponent implements OnInit {\n  cardsJogos: ITipoCardJogos[] = [];\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.cardsJogos = TiposJogos;\n  }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n  <app-header-loteria titulo=\"Lotofácil\" jogo=\"lotofacil\" [concurso]=\"concurso\"\n    (ultimo)=\"gerarListaConcursos($event)\"></app-header-loteria>\n  <div class=\"flex flex-auto flex-col p-6 z-10\">\n    <div class=\"flex w-full\">\n      <!-- Filters -->\n      <div class=\"flex flex-col sm:flex-row items-center justify-between w-full\">\n        <mat-form-field class=\"w-full sm:w-44\">\n          <mat-select [value]=\"'latest'\" (selectionChange)=\"buscarOutroResultado($event.value)\">\n            <mat-option [value]=\"'latest'\">Último</mat-option>\n            <ng-container *ngFor=\"let resultado of resultados\">\n              <mat-option [value]=\"resultado\">{{ resultado }}</mat-option>\n            </ng-container>\n          </mat-select>\n        </mat-form-field>\n        <h1>Estimativa próximo prêmio: <strong>{{ resultado.acumuladaProxConcurso }}</strong></h1>\n        <h1>Acumulou: <strong>{{ resultado.acumulou ? 'Sim' : 'Não' }}</strong></h1>\n      </div>\n    </div>\n    <app-tabela-resultado [resultado]=\"resultado\"></app-tabela-resultado>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { IResultado } from 'app/shared/models/interface.model';\n\n@Component({\n  selector: 'app-resultado',\n  templateUrl: './resultado.component.html',\n  styleUrls: ['./resultado.component.scss'],\n})\nexport class ResultadoComponent implements OnInit {\n  concurso = 'latest';\n\n  resultados = [];\n\n  resultado: IResultado = {} as IResultado;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  buscarOutroResultado(concurso: string): void {\n    this.concurso = concurso;\n  }\n\n  gerarListaConcursos(resultado: IResultado): void {\n    this.resultado = resultado;\n\n    if (this.resultados.length > 0) return;\n\n    let lista = [];\n\n    for (let i = resultado.concurso; i >= 1; i--) {\n      lista.push(i);\n    }\n\n    this.resultados = lista;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IResultado } from 'app/shared/models/interface.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class LotofacilResultadosState {\n  private _lotofacilResultados$ = new BehaviorSubject<IResultado[]>(\n    {} as IResultado[]\n  );\n\n  constructor() {}\n\n  get resultados$(): Observable<IResultado[]> {\n    return this._lotofacilResultados$.asObservable();\n  }\n\n  set resultados(resultados: IResultado[]) {\n    this._lotofacilResultados$.next(resultados);\n  }\n\n  get resultados(): IResultado[] {\n    return this._lotofacilResultados$.value;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { BaseUltimoComponent } from './components/base-ultimo/base-ultimo.component';\nimport { FechamentoComponent } from './components/fechamento/fechamento.component';\nimport { JogoComponent } from './components/jogo/jogo.component';\nimport { NaoSorteadoComponent } from './components/nao-sorteado/nao-sorteado.component';\nimport { DicasComponent } from './containers/dicas/dicas.component';\nimport { FerramentasComponent } from './containers/ferramentas/ferramentas.component';\nimport { GeradorComponent } from './containers/gerador/gerador.component';\nimport { ResultadoComponent } from './containers/resultado/resultado.component';\nimport { TabelasComponent } from './containers/tabelas/tabelas.component';\nimport { LotofacilResultadosState } from './state/lotofacil-resultados.state';\n\nconst routes: Route[] = [\n  { path: '', redirectTo: 'resultado', pathMatch: 'full' },\n  { path: 'resultado', component: ResultadoComponent },\n  {\n    path: 'gerador',\n    children: [\n      { path: '', component: GeradorComponent },\n      { path: 'aleatorio', component: JogoComponent },\n      { path: 'nao-sorteado', component: NaoSorteadoComponent },\n      { path: 'fechamento', component: FechamentoComponent },\n      { path: 'base-ultimo', component: BaseUltimoComponent },\n    ],\n  },\n\n  { path: 'tabelas', component: TabelasComponent },\n  { path: 'dicas', component: DicasComponent },\n  { path: 'ferramentas', component: FerramentasComponent },\n];\n\n@NgModule({\n  declarations: [\n    DicasComponent,\n    FerramentasComponent,\n    TabelasComponent,\n    GeradorComponent,\n    ResultadoComponent,\n    JogoComponent,\n    NaoSorteadoComponent,\n    FechamentoComponent,\n    BaseUltimoComponent,\n  ],\n  imports: [CommonModule, RouterModule.forChild(routes), SharedModule],\n  providers: [LotofacilResultadosState],\n})\nexport class LotofacilModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { IResultado } from 'app/shared/models/interface.model';\nimport { ResultadoService } from 'app/shared/services/resultado.service';\nimport { LotofacilResultadosState } from '../../state/lotofacil-resultados.state';\n\n@Component({\n  selector: 'app-tabelas',\n  templateUrl: './tabelas.component.html',\n  styleUrls: ['./tabelas.component.scss'],\n})\nexport class TabelasComponent implements OnInit {\n  resultados: IResultado[] = [];\n\n  constructor(\n    private _resultadoService: ResultadoService,\n    private _resultadosState: LotofacilResultadosState\n  ) {}\n\n  ngOnInit(): void {\n    this._carregaResultados();\n  }\n\n  _carregaResultados(): void {\n    console.log(this._resultadosState.resultados);\n    if (this._resultadosState.resultados.length > 0) {\n      this.resultados = this._resultadosState.resultados;\n      return;\n    }\n\n    this._resultadoService.getTodosResultados('lotofacil').subscribe({\n      next: (resultados) => {\n        this.resultados = resultados;\n        this._resultadosState.resultados = resultados;\n      },\n    });\n  }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-y-auto\" cdkScrollable>\n  <app-header-title titulo=\"Tabelas\" jogo=\"lotofacil\"></app-header-title>\n</div>"],"x_google_ignoreList":[]}